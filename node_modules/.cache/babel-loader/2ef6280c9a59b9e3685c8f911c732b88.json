{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/components/UploadButton.js\";\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UploadButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.inputRef = /*#__PURE__*/React.createRef();\n\n    this.handleSelectFile = () => {\n      if (this.props.onSelect) {\n        this.props.onSelect(this.inputRef.current.files);\n        this.inputRef.current.value = null;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.inputRef,\n          type: \"file\",\n          className: \"d-none\",\n          onChange: this.handleSelectFile,\n          multiple: this.props.multiple\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"choose-file\",\n            onClick: () => this.inputRef.current.click(),\n            children: \"Choose a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ng-binding\",\n          style: {\n            color: \"#05093B\"\n          },\n          children: this.props.btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nUploadButton.propTypes = {\n  onSelect: propTypes.func,\n  btnText: propTypes.string,\n  multiple: propTypes.bool\n};\nexport default UploadButton;","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/components/UploadButton.js"],"names":["React","Component","propTypes","UploadButton","inputRef","createRef","handleSelectFile","props","onSelect","current","files","value","render","multiple","click","color","btnText","func","string","bool"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCG,QADmC,gBACxBJ,KAAK,CAACK,SAAN,EADwB;;AAAA,SAGnCC,gBAHmC,GAGhB,MAAM;AACvB,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAKD,KAAL,CAAWC,QAAX,CAAoB,KAAKJ,QAAL,CAAcK,OAAd,CAAsBC,KAA1C;AACA,aAAKN,QAAL,CAAcK,OAAd,CAAsBE,KAAtB,GAA8B,IAA9B;AACD;AACF,KARkC;AAAA;;AAUnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AACE,UAAA,GAAG,EAAE,KAAKR,QADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,SAAS,EAAC,QAHZ;AAIE,UAAA,QAAQ,EAAE,KAAKE,gBAJjB;AAKE,UAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWM;AALvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAgC,YAAA,OAAO,EAAE,MAAM,KAAKT,QAAL,CAAcK,OAAd,CAAsBK,KAAtB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAApC;AAAA,oBACG,KAAKR,KAAL,CAAWS;AADd;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAhCkC;;AAmCrCb,YAAY,CAACD,SAAb,GAAyB;AACvBM,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IADG;AAEvBD,EAAAA,OAAO,EAAEd,SAAS,CAACgB,MAFI;AAGvBL,EAAAA,QAAQ,EAAEX,SAAS,CAACiB;AAHG,CAAzB;AAMA,eAAehB,YAAf","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass UploadButton extends Component {\n  inputRef = React.createRef();\n\n  handleSelectFile = () => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.inputRef.current.files);\n      this.inputRef.current.value = null;\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"box\">\n        <div className=\"box__input\">\n          <input\n            ref={this.inputRef}\n            type=\"file\"\n            className=\"d-none\"\n            onChange={this.handleSelectFile}\n            multiple={this.props.multiple}\n          />\n          <label htmlFor=\"file\">\n            <strong className=\"choose-file\" onClick={() => this.inputRef.current.click()}>\n              Choose a file\n            </strong>\n          </label>\n          <span className=\"ng-binding\" style={{ color: \"#05093B\" }}>\n            {this.props.btnText}\n          </span>\n        </div>\n      </form>\n    );\n  }\n}\n\nUploadButton.propTypes = {\n  onSelect: propTypes.func,\n  btnText: propTypes.string,\n  multiple: propTypes.bool,\n};\n\nexport default UploadButton;\n"]},"metadata":{},"sourceType":"module"}