{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nexport const TYPES = {\n  SET_VISUALIZEJS_INSTANCE: \"SET_VISUALIZEJS_INSTANCE\",\n  SET_OBJECT_TREE: \"SET_OBJECT_TREE\",\n  SET_PROPERTIES: \"SET_PROPERTIES\",\n  SET_NATIVE_PROPERTIES: \"SET_NATIVE_PROPERTIES\",\n  SET_FPS: \"SET_FPS\",\n  SET_WCS: \"SET_WCS\",\n  SET_ANIMATION: \"SET_ANIMATION\",\n  SET_VS_HIGHLIGHT: \"SET_VS_HIGHLIGHT\",\n  SET_ANTI_ALIASING: \"SET_ANTI_ALIASING\",\n  SELECT_ENTITY: \"SELECT_ENTITY\",\n  UPDATE_PREVIEW: \"UPDATE_PREVIEW\",\n  CONFIG_RESPONSE: \"CONFIG_RESPONSE\",\n  SET_SHADOWS: \"SET_SHADOWS\",\n  SET_GROUND_SHADOWS: \"SET_GROUND_SHADOWS\",\n  ADD_NOTIFICATION: \"ADD_NOTIFICATION\"\n};\nexport const actions = {\n  applySettings: () => (dispatch, getState) => {\n    const props = getState().viewer;\n    const {\n      visualizeJS\n    } = props;\n    const viewer = visualizeJS.getViewer();\n\n    if (viewer) {\n      if (props.fps !== viewer.getEnableFPS()) {\n        viewer.setEnableFPS(props.fps);\n      }\n\n      if (props.wcs !== viewer.getEnableWCS()) {\n        viewer.setEnableWCS(props.wcs);\n        viewer.update();\n      }\n\n      if (props.vsHighlight !== viewer.getEnableVisualStyleHighlight()) {\n        viewer.setEnableVisualStyleHighlight(props.vsHighlight);\n        viewer.update();\n      }\n\n      if (props.animation !== viewer.getEnableAnimation()) {\n        viewer.setEnableAnimation(props.animation);\n      }\n\n      if (props.antiAliasing !== viewer.fxaaAntiAliasing3d) {\n        //viewer.enableAntiaiasing = props.antiAliasing;\n        viewer.fxaaAntiAliasing3d = props.antiAliasing;\n        viewer.fxaaQuality = 5;\n      }\n\n      if (props.shadows !== viewer.shadows) {\n        viewer.shadows = props.shadows;\n        const canvas = visualizeJS.canvas;\n        viewer.getActiveDevice().invalidate([0, canvas.clientWidth, canvas.clientHeight, 0]);\n      }\n\n      if (props.groundShadows !== viewer.groundShadow) {\n        viewer.groundShadow = props.groundShadows;\n      }\n    }\n  },\n  updatePreview: (fileId, viewer, visualizeJS) => dispatch => {\n    console.log(\"Not implemented yet\"); //const img = visualizeJS.canvas.toDataUrl()\n    // createPreview(viewer, visualizeJS).then((preview) => {\n    //   return api.updatePreview(fileId, preview)\n    // }).then(() => { dispatch({ type: TYPES.UPDATE_PREVIEW }) })\n    //   .catch(err => console.error(err));\n  },\n  setVisualizeJS: instane => dispatch => {\n    dispatch({\n      type: TYPES.SET_VISUALIZEJS_INSTANCE,\n      payload: instane\n    });\n  }\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    visualizejs_url: \"./visualizeJS.js\",\n    visualizeJS: null,\n    fps: false,\n    wcs: true,\n    vsHighlight: false,\n    animation: true,\n    antiAliasing: true,\n    shadows: false,\n    groundShadows: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TYPES.SET_VISUALIZEJS_INSTANCE:\n      return { ...state,\n        visualizeJS: action.payload\n      };\n\n    case TYPES.SET_OBJECT_TREE:\n      return { ...state,\n        objectTree: action.payload\n      };\n\n    case TYPES.SET_PROPERTIES:\n      return { ...state,\n        properties: action.payload\n      };\n\n    case TYPES.SET_FPS:\n      return { ...state,\n        fps: action.payload\n      };\n\n    case TYPES.SET_WCS:\n      return { ...state,\n        wcs: action.payload\n      };\n\n    case TYPES.SET_ANIMATION:\n      return { ...state,\n        animation: action.payload\n      };\n\n    case TYPES.SET_VS_HIGHLIGHT:\n      return { ...state,\n        vsHighlight: action.payload\n      };\n\n    case TYPES.SET_ANTI_ALIASING:\n      return { ...state,\n        antiAliasing: action.payload\n      };\n\n    case TYPES.SET_SHADOWS:\n      return { ...state,\n        shadows: action.payload\n      };\n\n    case TYPES.SET_GROUND_SHADOWS:\n      return { ...state,\n        groundShadows: action.payload\n      };\n\n    case TYPES.CONFIG_RESPONSE:\n      return { ...state,\n        visualizejs_url: action.payload.visualizejs_url || state.visualizejs_url\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/redux/viewer.js"],"names":["TYPES","SET_VISUALIZEJS_INSTANCE","SET_OBJECT_TREE","SET_PROPERTIES","SET_NATIVE_PROPERTIES","SET_FPS","SET_WCS","SET_ANIMATION","SET_VS_HIGHLIGHT","SET_ANTI_ALIASING","SELECT_ENTITY","UPDATE_PREVIEW","CONFIG_RESPONSE","SET_SHADOWS","SET_GROUND_SHADOWS","ADD_NOTIFICATION","actions","applySettings","dispatch","getState","props","viewer","visualizeJS","getViewer","fps","getEnableFPS","setEnableFPS","wcs","getEnableWCS","setEnableWCS","update","vsHighlight","getEnableVisualStyleHighlight","setEnableVisualStyleHighlight","animation","getEnableAnimation","setEnableAnimation","antiAliasing","fxaaAntiAliasing3d","fxaaQuality","shadows","canvas","getActiveDevice","invalidate","clientWidth","clientHeight","groundShadows","groundShadow","updatePreview","fileId","console","log","setVisualizeJS","instane","type","payload","reducer","state","visualizejs_url","action","objectTree","properties"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,KAAK,GAAG;AACnBC,EAAAA,wBAAwB,EAAE,0BADP;AAEnBC,EAAAA,eAAe,EAAE,iBAFE;AAGnBC,EAAAA,cAAc,EAAE,gBAHG;AAInBC,EAAAA,qBAAqB,EAAE,uBAJJ;AAKnBC,EAAAA,OAAO,EAAE,SALU;AAMnBC,EAAAA,OAAO,EAAE,SANU;AAOnBC,EAAAA,aAAa,EAAE,eAPI;AAQnBC,EAAAA,gBAAgB,EAAE,kBARC;AASnBC,EAAAA,iBAAiB,EAAE,mBATA;AAUnBC,EAAAA,aAAa,EAAE,eAVI;AAWnBC,EAAAA,cAAc,EAAE,gBAXG;AAanBC,EAAAA,eAAe,EAAE,iBAbE;AAenBC,EAAAA,WAAW,EAAE,aAfM;AAgBnBC,EAAAA,kBAAkB,EAAE,oBAhBD;AAkBnBC,EAAAA,gBAAgB,EAAE;AAlBC,CAAd;AAqBP,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,aAAa,EAAE,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3C,UAAMC,KAAK,GAAGD,QAAQ,GAAGE,MAAzB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkBF,KAAxB;AACA,UAAMC,MAAM,GAAGC,WAAW,CAACC,SAAZ,EAAf;;AAEA,QAAIF,MAAJ,EAAY;AACV,UAAID,KAAK,CAACI,GAAN,KAAcH,MAAM,CAACI,YAAP,EAAlB,EAAyC;AACvCJ,QAAAA,MAAM,CAACK,YAAP,CAAoBN,KAAK,CAACI,GAA1B;AACD;;AAED,UAAIJ,KAAK,CAACO,GAAN,KAAcN,MAAM,CAACO,YAAP,EAAlB,EAAyC;AACvCP,QAAAA,MAAM,CAACQ,YAAP,CAAoBT,KAAK,CAACO,GAA1B;AACAN,QAAAA,MAAM,CAACS,MAAP;AACD;;AAED,UAAIV,KAAK,CAACW,WAAN,KAAsBV,MAAM,CAACW,6BAAP,EAA1B,EAAkE;AAChEX,QAAAA,MAAM,CAACY,6BAAP,CAAqCb,KAAK,CAACW,WAA3C;AACAV,QAAAA,MAAM,CAACS,MAAP;AACD;;AAED,UAAIV,KAAK,CAACc,SAAN,KAAoBb,MAAM,CAACc,kBAAP,EAAxB,EAAqD;AACnDd,QAAAA,MAAM,CAACe,kBAAP,CAA0BhB,KAAK,CAACc,SAAhC;AACD;;AAED,UAAId,KAAK,CAACiB,YAAN,KAAuBhB,MAAM,CAACiB,kBAAlC,EAAsD;AACpD;AACAjB,QAAAA,MAAM,CAACiB,kBAAP,GAA4BlB,KAAK,CAACiB,YAAlC;AACAhB,QAAAA,MAAM,CAACkB,WAAP,GAAqB,CAArB;AACD;;AAED,UAAInB,KAAK,CAACoB,OAAN,KAAkBnB,MAAM,CAACmB,OAA7B,EAAsC;AACpCnB,QAAAA,MAAM,CAACmB,OAAP,GAAiBpB,KAAK,CAACoB,OAAvB;AACA,cAAMC,MAAM,GAAGnB,WAAW,CAACmB,MAA3B;AACApB,QAAAA,MAAM,CAACqB,eAAP,GAAyBC,UAAzB,CAAoC,CAAC,CAAD,EAAIF,MAAM,CAACG,WAAX,EAAwBH,MAAM,CAACI,YAA/B,EAA6C,CAA7C,CAApC;AACD;;AAED,UAAIzB,KAAK,CAAC0B,aAAN,KAAwBzB,MAAM,CAAC0B,YAAnC,EAAiD;AAC/C1B,QAAAA,MAAM,CAAC0B,YAAP,GAAsB3B,KAAK,CAAC0B,aAA5B;AACD;AACF;AACF,GAzCoB;AA2CrBE,EAAAA,aAAa,EAAE,CAACC,MAAD,EAAS5B,MAAT,EAAiBC,WAAjB,KAAkCJ,QAAD,IAAc;AAC5DgC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAD4D,CAE5D;AACA;AACA;AACA;AACA;AACD,GAlDoB;AAoDrBC,EAAAA,cAAc,EAAGC,OAAD,IAAcnC,QAAD,IAAc;AACzCA,IAAAA,QAAQ,CAAC;AAAEoC,MAAAA,IAAI,EAAEtD,KAAK,CAACC,wBAAd;AAAwCsD,MAAAA,OAAO,EAAEF;AAAjD,KAAD,CAAR;AACD;AAtDoB,CAAhB;AAyDP,OAAO,MAAMG,OAAO,GAAG,YAclB;AAAA,MAbHC,KAaG,uEAbK;AACNC,IAAAA,eAAe,EAAE,kBADX;AAENpC,IAAAA,WAAW,EAAE,IAFP;AAINE,IAAAA,GAAG,EAAE,KAJC;AAKNG,IAAAA,GAAG,EAAE,IALC;AAMNI,IAAAA,WAAW,EAAE,KANP;AAONG,IAAAA,SAAS,EAAE,IAPL;AAQNG,IAAAA,YAAY,EAAE,IARR;AASNG,IAAAA,OAAO,EAAE,KATH;AAUNM,IAAAA,aAAa,EAAE;AAVT,GAaL;AAAA,MADHa,MACG;;AACH,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKtD,KAAK,CAACC,wBAAX;AACE,aAAO,EAAE,GAAGwD,KAAL;AAAYnC,QAAAA,WAAW,EAAEqC,MAAM,CAACJ;AAAhC,OAAP;;AACF,SAAKvD,KAAK,CAACE,eAAX;AACE,aAAO,EAAE,GAAGuD,KAAL;AAAYG,QAAAA,UAAU,EAAED,MAAM,CAACJ;AAA/B,OAAP;;AACF,SAAKvD,KAAK,CAACG,cAAX;AACE,aAAO,EAAE,GAAGsD,KAAL;AAAYI,QAAAA,UAAU,EAAEF,MAAM,CAACJ;AAA/B,OAAP;;AACF,SAAKvD,KAAK,CAACK,OAAX;AACE,aAAO,EAAE,GAAGoD,KAAL;AAAYjC,QAAAA,GAAG,EAAEmC,MAAM,CAACJ;AAAxB,OAAP;;AACF,SAAKvD,KAAK,CAACM,OAAX;AACE,aAAO,EAAE,GAAGmD,KAAL;AAAY9B,QAAAA,GAAG,EAAEgC,MAAM,CAACJ;AAAxB,OAAP;;AACF,SAAKvD,KAAK,CAACO,aAAX;AACE,aAAO,EAAE,GAAGkD,KAAL;AAAYvB,QAAAA,SAAS,EAAEyB,MAAM,CAACJ;AAA9B,OAAP;;AACF,SAAKvD,KAAK,CAACQ,gBAAX;AACE,aAAO,EAAE,GAAGiD,KAAL;AAAY1B,QAAAA,WAAW,EAAE4B,MAAM,CAACJ;AAAhC,OAAP;;AACF,SAAKvD,KAAK,CAACS,iBAAX;AACE,aAAO,EAAE,GAAGgD,KAAL;AAAYpB,QAAAA,YAAY,EAAEsB,MAAM,CAACJ;AAAjC,OAAP;;AACF,SAAKvD,KAAK,CAACa,WAAX;AACE,aAAO,EAAE,GAAG4C,KAAL;AAAYjB,QAAAA,OAAO,EAAEmB,MAAM,CAACJ;AAA5B,OAAP;;AACF,SAAKvD,KAAK,CAACc,kBAAX;AACE,aAAO,EAAE,GAAG2C,KAAL;AAAYX,QAAAA,aAAa,EAAEa,MAAM,CAACJ;AAAlC,OAAP;;AACF,SAAKvD,KAAK,CAACY,eAAX;AACE,aAAO,EACL,GAAG6C,KADE;AAELC,QAAAA,eAAe,EAAEC,MAAM,CAACJ,OAAP,CAAeG,eAAf,IAAkCD,KAAK,CAACC;AAFpD,OAAP;;AAIF;AACE,aAAOD,KAAP;AA3BJ;AA6BD,CA5CM","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\n\nexport const TYPES = {\n  SET_VISUALIZEJS_INSTANCE: \"SET_VISUALIZEJS_INSTANCE\",\n  SET_OBJECT_TREE: \"SET_OBJECT_TREE\",\n  SET_PROPERTIES: \"SET_PROPERTIES\",\n  SET_NATIVE_PROPERTIES: \"SET_NATIVE_PROPERTIES\",\n  SET_FPS: \"SET_FPS\",\n  SET_WCS: \"SET_WCS\",\n  SET_ANIMATION: \"SET_ANIMATION\",\n  SET_VS_HIGHLIGHT: \"SET_VS_HIGHLIGHT\",\n  SET_ANTI_ALIASING: \"SET_ANTI_ALIASING\",\n  SELECT_ENTITY: \"SELECT_ENTITY\",\n  UPDATE_PREVIEW: \"UPDATE_PREVIEW\",\n\n  CONFIG_RESPONSE: \"CONFIG_RESPONSE\",\n\n  SET_SHADOWS: \"SET_SHADOWS\",\n  SET_GROUND_SHADOWS: \"SET_GROUND_SHADOWS\",\n\n  ADD_NOTIFICATION: \"ADD_NOTIFICATION\",\n};\n\nexport const actions = {\n  applySettings: () => (dispatch, getState) => {\n    const props = getState().viewer;\n    const { visualizeJS } = props;\n    const viewer = visualizeJS.getViewer();\n\n    if (viewer) {\n      if (props.fps !== viewer.getEnableFPS()) {\n        viewer.setEnableFPS(props.fps);\n      }\n\n      if (props.wcs !== viewer.getEnableWCS()) {\n        viewer.setEnableWCS(props.wcs);\n        viewer.update();\n      }\n\n      if (props.vsHighlight !== viewer.getEnableVisualStyleHighlight()) {\n        viewer.setEnableVisualStyleHighlight(props.vsHighlight);\n        viewer.update();\n      }\n\n      if (props.animation !== viewer.getEnableAnimation()) {\n        viewer.setEnableAnimation(props.animation);\n      }\n\n      if (props.antiAliasing !== viewer.fxaaAntiAliasing3d) {\n        //viewer.enableAntiaiasing = props.antiAliasing;\n        viewer.fxaaAntiAliasing3d = props.antiAliasing;\n        viewer.fxaaQuality = 5;\n      }\n\n      if (props.shadows !== viewer.shadows) {\n        viewer.shadows = props.shadows;\n        const canvas = visualizeJS.canvas;\n        viewer.getActiveDevice().invalidate([0, canvas.clientWidth, canvas.clientHeight, 0]);\n      }\n\n      if (props.groundShadows !== viewer.groundShadow) {\n        viewer.groundShadow = props.groundShadows;\n      }\n    }\n  },\n\n  updatePreview: (fileId, viewer, visualizeJS) => (dispatch) => {\n    console.log(\"Not implemented yet\");\n    //const img = visualizeJS.canvas.toDataUrl()\n    // createPreview(viewer, visualizeJS).then((preview) => {\n    //   return api.updatePreview(fileId, preview)\n    // }).then(() => { dispatch({ type: TYPES.UPDATE_PREVIEW }) })\n    //   .catch(err => console.error(err));\n  },\n\n  setVisualizeJS: (instane) => (dispatch) => {\n    dispatch({ type: TYPES.SET_VISUALIZEJS_INSTANCE, payload: instane });\n  },\n};\n\nexport const reducer = (\n  state = {\n    visualizejs_url: \"./visualizeJS.js\",\n    visualizeJS: null,\n\n    fps: false,\n    wcs: true,\n    vsHighlight: false,\n    animation: true,\n    antiAliasing: true,\n    shadows: false,\n    groundShadows: false,\n  },\n  action\n) => {\n  switch (action.type) {\n    case TYPES.SET_VISUALIZEJS_INSTANCE:\n      return { ...state, visualizeJS: action.payload };\n    case TYPES.SET_OBJECT_TREE:\n      return { ...state, objectTree: action.payload };\n    case TYPES.SET_PROPERTIES:\n      return { ...state, properties: action.payload };\n    case TYPES.SET_FPS:\n      return { ...state, fps: action.payload };\n    case TYPES.SET_WCS:\n      return { ...state, wcs: action.payload };\n    case TYPES.SET_ANIMATION:\n      return { ...state, animation: action.payload };\n    case TYPES.SET_VS_HIGHLIGHT:\n      return { ...state, vsHighlight: action.payload };\n    case TYPES.SET_ANTI_ALIASING:\n      return { ...state, antiAliasing: action.payload };\n    case TYPES.SET_SHADOWS:\n      return { ...state, shadows: action.payload };\n    case TYPES.SET_GROUND_SHADOWS:\n      return { ...state, groundShadows: action.payload };\n    case TYPES.CONFIG_RESPONSE:\n      return {\n        ...state,\n        visualizejs_url: action.payload.visualizejs_url || state.visualizejs_url,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}