{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/containers/JobsComponent/JobsComponent.js\";\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as notification } from \"../../redux/notification\";\nimport moment from \"moment\";\nimport { JobsService } from \"./JobsService\";\nimport \"antd/dist/antd.css\";\nimport { Table, Tag, Tooltip } from \"antd\";\nimport { CheckCircleOutlined, SyncOutlined, CloseCircleOutlined, ClockCircleOutlined, FileTwoTone, AppstoreTwoTone } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  records: [],\n  filters: [],\n  loading: true,\n  pagination: {\n    current: 1,\n    pageSize: 25,\n    total: 0,\n    pageSizeOptions: [25, 50, 75],\n    position: [\"bottomCenter\"],\n    showSizeChanger: true\n  }\n};\nconst iconStyleFix = {\n  verticalAlign: \"baseline\"\n};\nconst tagStyle = {\n  padding: \"5px\",\n  fontSize: \"16px\",\n  width: \"100px\"\n};\nconst statusColorMap = {\n  waiting: {\n    color: \"default\",\n    icon: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {\n      style: iconStyleFix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)\n  },\n  running: {\n    color: \"processing\",\n    icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {\n      style: iconStyleFix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }, this)\n  },\n  failed: {\n    color: \"error\",\n    icon: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n      style: iconStyleFix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  },\n  done: {\n    color: \"success\",\n    icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n      style: iconStyleFix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)\n  }\n};\nconst statusFilterList = [{\n  text: \"waiting\",\n  value: \"waiting\"\n}, {\n  text: \"running\",\n  value: \"running\"\n}, {\n  text: \"failed\",\n  value: \"failed\"\n}, {\n  text: \"done\",\n  value: \"done\"\n}];\n\nconst createTag = state => {\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    style: tagStyle,\n    icon: statusColorMap[state].icon,\n    color: statusColorMap[state].color,\n    children: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\nconst createDateTimeLabel = dateTime => {\n  return `${moment(dateTime).format(\"L\")} - ${moment(dateTime).format(\"LT\")}`;\n};\n\nconst crateFileOrAssemblyName = record => {\n  if (record.assemblyName) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"right\",\n      title: `Assembly: ${record.assemblyName}`,\n      children: [/*#__PURE__*/_jsxDEV(AppstoreTwoTone, {\n        style: iconStyleFix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), \" \", `${record.assemblyName}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 7\n  }, this);else if (record.fileName) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"right\",\n      title: `File: ${record.fileName}`,\n      children: [/*#__PURE__*/_jsxDEV(FileTwoTone, {\n        style: iconStyleFix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), \" \", `${record.fileName}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 7\n  }, this);\n  return \"\";\n};\n\nclass JobsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...defaultState\n    };\n    this.columns = [{\n      title: \"State\",\n      key: \"state\",\n      dataIndex: \"state\",\n      render: state => createTag(state),\n      width: \"5%\",\n      filters: statusFilterList\n    }, {\n      title: \"Id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: id => {\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: \"right\",\n          title: id,\n          children: `${id.substring(0, 2)}...${id.substring(id.length - 5, id.length)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n      },\n      width: \"5%\"\n    }, {\n      title: \"Name\",\n      key: \"assemblyName\",\n      render: (_, record) => crateFileOrAssemblyName(record),\n      width: \"30%\"\n    }, {\n      title: \"Created at\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: createdAt => createDateTimeLabel(createdAt),\n      width: \"13%\"\n    }, {\n      title: \"Started at\",\n      dataIndex: \"startedAt\",\n      key: \"startedAt\",\n      render: startedAt => createDateTimeLabel(startedAt),\n      width: \"13%\"\n    }, {\n      title: \"Last update\",\n      dataIndex: \"lastUpdate\",\n      key: \"lastUpdate\",\n      render: lastUpdate => createDateTimeLabel(lastUpdate),\n      width: \"13%\"\n    }];\n\n    this.getPage = async (page, pageSize, filters) => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const {\n          allSize,\n          result\n        } = await this.service.getPage(page, pageSize, filters);\n        this.setState({\n          records: result,\n          loading: false,\n          filters: filters,\n          pagination: { ...this.state.pagination,\n            total: allSize,\n            current: page,\n            pageSize: pageSize\n          }\n        });\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot get assembly page\");\n      }\n    };\n\n    this.handleTableChange = (pagination, filters) => {\n      this.getPage(pagination.current, pagination.pageSize, filters ? filters.state : []);\n    };\n\n    this.service = new JobsService();\n  }\n\n  componentDidMount() {\n    this.getPage(this.state.pagination.current, this.state.pagination.pageSize);\n\n    const isNeedUpdate = () => {\n      return this.state.records.filter(record => record.status === \"waiting\" || record.status === \"running\").length;\n    };\n\n    this.interval = setInterval(() => {\n      if (isNeedUpdate()) {\n        this.getPage(this.state.pagination.current, this.state.pagination.pageSize);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      records,\n      pagination,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        columns: this.columns,\n        rowKey: row => row.id,\n        dataSource: records,\n        pagination: pagination,\n        loading: loading,\n        onChange: this.handleTableChange,\n        scroll: {\n          x: true,\n          y: \"calc(100vh - 180px)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({ ...state.plugins\n}), dispatch => ({\n  addNotification: (type, text) => dispatch(notification.addNotification(type, text))\n}))(JobsComponent);","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/containers/JobsComponent/JobsComponent.js"],"names":["React","connect","actions","notification","moment","JobsService","Table","Tag","Tooltip","CheckCircleOutlined","SyncOutlined","CloseCircleOutlined","ClockCircleOutlined","FileTwoTone","AppstoreTwoTone","defaultState","records","filters","loading","pagination","current","pageSize","total","pageSizeOptions","position","showSizeChanger","iconStyleFix","verticalAlign","tagStyle","padding","fontSize","width","statusColorMap","waiting","color","icon","running","failed","done","statusFilterList","text","value","createTag","state","createDateTimeLabel","dateTime","format","crateFileOrAssemblyName","record","assemblyName","fileName","JobsComponent","Component","constructor","props","columns","title","key","dataIndex","render","id","substring","length","_","createdAt","startedAt","lastUpdate","getPage","page","setState","allSize","result","service","e","console","error","addNotification","handleTableChange","componentDidMount","isNeedUpdate","filter","status","interval","setInterval","componentWillUnmount","clearInterval","overflow","row","x","y","plugins","dispatch","type"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as notification } from \"../../redux/notification\";\n\nimport moment from \"moment\";\nimport { JobsService } from \"./JobsService\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Table, Tag, Tooltip } from \"antd\";\n\nimport {\n  CheckCircleOutlined,\n  SyncOutlined,\n  CloseCircleOutlined,\n  ClockCircleOutlined,\n  FileTwoTone,\n  AppstoreTwoTone,\n} from \"@ant-design/icons\";\n\nconst defaultState = {\n  records: [],\n  filters: [],\n  loading: true,\n  pagination: {\n    current: 1,\n    pageSize: 25,\n    total: 0,\n    pageSizeOptions: [25, 50, 75],\n    position: [\"bottomCenter\"],\n    showSizeChanger: true,\n  },\n};\n\nconst iconStyleFix = {\n  verticalAlign: \"baseline\",\n};\n\nconst tagStyle = {\n  padding: \"5px\",\n  fontSize: \"16px\",\n  width: \"100px\",\n};\n\nconst statusColorMap = {\n  waiting: {\n    color: \"default\",\n    icon: <ClockCircleOutlined style={iconStyleFix} />,\n  },\n  running: { color: \"processing\", icon: <SyncOutlined style={iconStyleFix} /> },\n  failed: {\n    color: \"error\",\n    icon: <CloseCircleOutlined style={iconStyleFix} />,\n  },\n  done: {\n    color: \"success\",\n    icon: <CheckCircleOutlined style={iconStyleFix} />,\n  },\n};\n\nconst statusFilterList = [\n  {\n    text: \"waiting\",\n    value: \"waiting\",\n  },\n  {\n    text: \"running\",\n    value: \"running\",\n  },\n  {\n    text: \"failed\",\n    value: \"failed\",\n  },\n  {\n    text: \"done\",\n    value: \"done\",\n  },\n];\n\nconst createTag = (state) => {\n  return (\n    <Tag style={tagStyle} icon={statusColorMap[state].icon} color={statusColorMap[state].color}>\n      {state}\n    </Tag>\n  );\n};\n\nconst createDateTimeLabel = (dateTime) => {\n  return `${moment(dateTime).format(\"L\")} - ${moment(dateTime).format(\"LT\")}`;\n};\n\nconst crateFileOrAssemblyName = (record) => {\n  if (record.assemblyName)\n    return (\n      <div>\n        <Tooltip placement=\"right\" title={`Assembly: ${record.assemblyName}`}>\n          <AppstoreTwoTone style={iconStyleFix} /> {`${record.assemblyName}`}\n        </Tooltip>\n      </div>\n    );\n  else if (record.fileName)\n    return (\n      <div>\n        <Tooltip placement=\"right\" title={`File: ${record.fileName}`}>\n          <FileTwoTone style={iconStyleFix} /> {`${record.fileName}`}\n        </Tooltip>\n      </div>\n    );\n  return \"\";\n};\n\nclass JobsComponent extends React.Component {\n  state = { ...defaultState };\n\n  columns = [\n    {\n      title: \"State\",\n      key: \"state\",\n      dataIndex: \"state\",\n      render: (state) => createTag(state),\n      width: \"5%\",\n      filters: statusFilterList,\n    },\n    {\n      title: \"Id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (id) => {\n        return (\n          <Tooltip placement=\"right\" title={id}>\n            {`${id.substring(0, 2)}...${id.substring(id.length - 5, id.length)}`}\n          </Tooltip>\n        );\n      },\n      width: \"5%\",\n    },\n    {\n      title: \"Name\",\n      key: \"assemblyName\",\n      render: (_, record) => crateFileOrAssemblyName(record),\n      width: \"30%\",\n    },\n    {\n      title: \"Created at\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: (createdAt) => createDateTimeLabel(createdAt),\n      width: \"13%\",\n    },\n    {\n      title: \"Started at\",\n      dataIndex: \"startedAt\",\n      key: \"startedAt\",\n      render: (startedAt) => createDateTimeLabel(startedAt),\n      width: \"13%\",\n    },\n    {\n      title: \"Last update\",\n      dataIndex: \"lastUpdate\",\n      key: \"lastUpdate\",\n      render: (lastUpdate) => createDateTimeLabel(lastUpdate),\n      width: \"13%\",\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n    this.service = new JobsService();\n  }\n\n  getPage = async (page, pageSize, filters) => {\n    this.setState({ loading: true });\n    try {\n      const { allSize, result } = await this.service.getPage(page, pageSize, filters);\n\n      this.setState({\n        records: result,\n        loading: false,\n        filters: filters,\n        pagination: {\n          ...this.state.pagination,\n          total: allSize,\n          current: page,\n          pageSize: pageSize,\n        },\n      });\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot get assembly page\");\n    }\n  };\n\n  componentDidMount() {\n    this.getPage(this.state.pagination.current, this.state.pagination.pageSize);\n\n    const isNeedUpdate = () => {\n      return this.state.records.filter((record) => record.status === \"waiting\" || record.status === \"running\").length;\n    };\n\n    this.interval = setInterval(() => {\n      if (isNeedUpdate()) {\n        this.getPage(this.state.pagination.current, this.state.pagination.pageSize);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleTableChange = (pagination, filters) => {\n    this.getPage(pagination.current, pagination.pageSize, filters ? filters.state : []);\n  };\n\n  render() {\n    const { records, pagination, loading } = this.state;\n    return (\n      <div style={{ overflow: \"hidden\" }}>\n        <Table\n          size=\"small\"\n          columns={this.columns}\n          rowKey={(row) => row.id}\n          dataSource={records}\n          pagination={pagination}\n          loading={loading}\n          onChange={this.handleTableChange}\n          scroll={{ x: true, y: \"calc(100vh - 180px)\" }}\n        ></Table>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ ...state.plugins }),\n  (dispatch) => ({\n    addNotification: (type, text) => dispatch(notification.addNotification(type, text)),\n  })\n)(JobsComponent);\n"]},"metadata":{},"sourceType":"module"}