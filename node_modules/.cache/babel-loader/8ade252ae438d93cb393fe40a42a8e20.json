{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport ClientFactory from \"../ClientFactory\";\nexport const TYPES = {\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\n  LOGIN_RESPONSE: \"LOGIN_RESPONSE\",\n  LOGIN_ERROR: \"LOGIN_ERROR\",\n  LOGOUT: \"LOGOUT\",\n  ADD_NOTIFICATION: \"ADD_NOTIFICATION\"\n};\nexport const actions = {\n  loginFromLocalStorage: () => async dispatch => {\n    try {\n      const json = window.localStorage.getItem(\"user\");\n\n      if (json) {\n        let userData = JSON.parse(json);\n        return dispatch(actions.loginFromUserData(userData));\n      }\n    } catch (err) {\n      localStorage.removeItem(\"user\");\n    }\n  },\n  loginFromUserData: userData => async dispatch => {\n    try {\n      await ClientFactory.get().loginWithToken(userData.tokenInfo.token);\n      const user = ClientFactory.get().getCurrentUser();\n      dispatch({\n        type: TYPES.LOGIN_RESPONSE,\n        payload: user\n      });\n    } catch (err) {\n      localStorage.removeItem(\"user\");\n    }\n  },\n  login: _ref => {\n    let {\n      email,\n      password,\n      remember\n    } = _ref;\n    return async dispatch => {\n      dispatch({\n        type: TYPES.LOGIN_REQUEST\n      });\n\n      try {\n        const user = await ClientFactory.get().signInWithEmail(email, password);\n        remember && localStorage.setItem(\"user\", JSON.stringify(user.data));\n        dispatch({\n          type: TYPES.LOGIN_RESPONSE,\n          payload: user\n        });\n      } catch (err) {\n        localStorage.removeItem(\"user\");\n        dispatch({\n          type: TYPES.LOGIN_ERROR,\n          payload: err.message\n        });\n        dispatch({\n          type: TYPES.ADD_NOTIFICATION,\n          payload: {\n            type: \"error\",\n            text: err.message\n          }\n        });\n      }\n    };\n  },\n  clearError: () => dispatch => {\n    dispatch({\n      type: TYPES.LOGIN_ERROR,\n      payload: null\n    });\n  },\n  logout: () => dispatch => {\n    localStorage.removeItem(\"user\");\n    dispatch({\n      type: TYPES.LOGOUT\n    });\n  }\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    data: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TYPES.LOGIN_REQUEST:\n      return { ...state,\n        loading: true,\n        error: null,\n        data: null\n      };\n\n    case TYPES.LOGIN_RESPONSE:\n      return { ...state,\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n\n    case TYPES.LOGIN_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload,\n        data: null\n      };\n\n    case TYPES.LOGOUT:\n      return { ...state,\n        loading: false,\n        error: null,\n        data: null\n      };\n\n    default:\n      {\n        if (action.type && action.type.match(/_?error_?/gi)) {\n          if (action.payload && action.payload.code === 401) {\n            return reducer(state, {\n              type: TYPES.LOGOUT\n            });\n          }\n        }\n\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/redux/login.js"],"names":["ClientFactory","TYPES","LOGIN_REQUEST","LOGIN_RESPONSE","LOGIN_ERROR","LOGOUT","ADD_NOTIFICATION","actions","loginFromLocalStorage","dispatch","json","window","localStorage","getItem","userData","JSON","parse","loginFromUserData","err","removeItem","get","loginWithToken","tokenInfo","token","user","getCurrentUser","type","payload","login","email","password","remember","signInWithEmail","setItem","stringify","data","message","text","clearError","logout","reducer","state","loading","error","action","match","code"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport ClientFactory from \"../ClientFactory\";\n\nexport const TYPES = {\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\n  LOGIN_RESPONSE: \"LOGIN_RESPONSE\",\n  LOGIN_ERROR: \"LOGIN_ERROR\",\n  LOGOUT: \"LOGOUT\",\n\n  ADD_NOTIFICATION: \"ADD_NOTIFICATION\",\n};\n\nexport const actions = {\n  loginFromLocalStorage: () => async (dispatch) => {\n    try {\n      const json = window.localStorage.getItem(\"user\");\n      if (json) {\n        let userData = JSON.parse(json);\n        return dispatch(actions.loginFromUserData(userData));\n      }\n    } catch (err) {\n      localStorage.removeItem(\"user\");\n    }\n  },\n\n  loginFromUserData: (userData) => async (dispatch) => {\n    try {\n      await ClientFactory.get().loginWithToken(userData.tokenInfo.token);\n      const user = ClientFactory.get().getCurrentUser();\n      dispatch({ type: TYPES.LOGIN_RESPONSE, payload: user });\n    } catch (err) {\n      localStorage.removeItem(\"user\");\n    }\n  },\n\n  login:\n    ({ email, password, remember }) =>\n    async (dispatch) => {\n      dispatch({ type: TYPES.LOGIN_REQUEST });\n      try {\n        const user = await ClientFactory.get().signInWithEmail(email, password);\n        remember && localStorage.setItem(\"user\", JSON.stringify(user.data));\n        dispatch({ type: TYPES.LOGIN_RESPONSE, payload: user });\n      } catch (err) {\n        localStorage.removeItem(\"user\");\n        dispatch({ type: TYPES.LOGIN_ERROR, payload: err.message });\n        dispatch({\n          type: TYPES.ADD_NOTIFICATION,\n          payload: { type: \"error\", text: err.message },\n        });\n      }\n    },\n\n  clearError: () => (dispatch) => {\n    dispatch({ type: TYPES.LOGIN_ERROR, payload: null });\n  },\n\n  logout: () => (dispatch) => {\n    localStorage.removeItem(\"user\");\n    dispatch({ type: TYPES.LOGOUT });\n  },\n};\n\nexport const reducer = (\n  state = {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case TYPES.LOGIN_REQUEST:\n      return { ...state, loading: true, error: null, data: null };\n    case TYPES.LOGIN_RESPONSE:\n      return { ...state, loading: false, error: null, data: action.payload };\n    case TYPES.LOGIN_ERROR:\n      return { ...state, loading: false, error: action.payload, data: null };\n    case TYPES.LOGOUT:\n      return { ...state, loading: false, error: null, data: null };\n    default: {\n      if (action.type && action.type.match(/_?error_?/gi)) {\n        if (action.payload && action.payload.code === 401) {\n          return reducer(state, { type: TYPES.LOGOUT });\n        }\n      }\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}