{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport { createStore, applyMiddleware } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport * as login from \"./login\";\nimport * as registration from \"./registration\";\nimport * as files from \"./files\";\nimport * as properties from \"./properties\";\nimport * as notifications from \"./notification\";\nimport * as viewer from \"./viewer\";\nimport * as config from \"./config\";\nimport * as objectTree from \"./objectTree\";\nconst reducer = combineReducers({\n  files: files.reducer,\n  viewer: viewer.reducer,\n  objectTree: objectTree.reducer,\n  properties: properties.reducer,\n  notifications: notifications.reducer,\n  login: login.reducer,\n  registration: registration.reducer,\n  config: config.reducer\n});\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(reducer, applyMiddleware(...middlewares));","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/redux/index.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","logger","login","registration","files","properties","notifications","viewer","config","objectTree","reducer","middlewares","process","env","NODE_ENV","push","store"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAO,KAAKC,aAAZ,MAA+B,gBAA/B;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC9BK,EAAAA,KAAK,EAAEA,KAAK,CAACM,OADiB;AAE9BH,EAAAA,MAAM,EAAEA,MAAM,CAACG,OAFe;AAG9BD,EAAAA,UAAU,EAAEA,UAAU,CAACC,OAHO;AAI9BL,EAAAA,UAAU,EAAEA,UAAU,CAACK,OAJO;AAK9BJ,EAAAA,aAAa,EAAEA,aAAa,CAACI,OALC;AAM9BR,EAAAA,KAAK,EAAEA,KAAK,CAACQ,OANiB;AAO9BP,EAAAA,YAAY,EAAEA,YAAY,CAACO,OAPG;AAQ9BF,EAAAA,MAAM,EAAEA,MAAM,CAACE;AARe,CAAD,CAA/B;AAWA,MAAMC,WAAW,GAAG,CAACX,KAAD,CAApB;;AACA,IAAIY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBd,MAAjB;AACD;;AAED,OAAO,MAAMe,KAAK,GAAGnB,WAAW,CAACa,OAAD,EAAUZ,eAAe,CAAC,GAAGa,WAAJ,CAAzB,CAAzB","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport { createStore, applyMiddleware } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport * as login from \"./login\";\nimport * as registration from \"./registration\";\nimport * as files from \"./files\";\nimport * as properties from \"./properties\";\nimport * as notifications from \"./notification\";\nimport * as viewer from \"./viewer\";\nimport * as config from \"./config\";\nimport * as objectTree from \"./objectTree\";\n\nconst reducer = combineReducers({\n  files: files.reducer,\n  viewer: viewer.reducer,\n  objectTree: objectTree.reducer,\n  properties: properties.reducer,\n  notifications: notifications.reducer,\n  login: login.reducer,\n  registration: registration.reducer,\n  config: config.reducer,\n});\n\nconst middlewares = [thunk];\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(reducer, applyMiddleware(...middlewares));\n"]},"metadata":{},"sourceType":"module"}