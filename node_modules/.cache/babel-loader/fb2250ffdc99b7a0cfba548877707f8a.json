{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/containers/FilesListComponent/FilesListComponent.js\";\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport defaultPreview from \"../../images/default-preview.png\";\nimport { actions as notification } from \"../../redux/notification\";\nimport moment from \"moment\";\nimport { FileListService } from \"./FileListService\";\nimport ProgressBar from \"../../components/ProgressBar\";\nimport DrawingReference from \"../../components/DrawingReference\";\nimport CreateDrawing from \"../../components/CreateDrawing\";\nimport CreateAssembly from \"../../components/CreateAssembly\";\nimport ClientFactory from \"./../../ClientFactory\";\nimport \"antd/dist/antd.css\";\nimport { Table, Input, Tooltip, Space, Button } from \"antd\";\nimport { CheckCircleOutlined, SyncOutlined, CloseCircleOutlined, ClockCircleOutlined, DeleteTwoTone, RightSquareTwoTone, SearchOutlined, FileAddOutlined, AppstoreAddOutlined, CloudDownloadOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  files: [],\n  name: \"\",\n  ext: \"\",\n  loading: true,\n  uploadProgress: 0,\n  pagination: {\n    current: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizeOptions: [20, 50, 75],\n    position: [\"bottomCenter\"],\n    showSizeChanger: true\n  },\n  showCreateDrawingComponent: false,\n  showCreateReferenceComponent: false,\n  showCreateAssemblyComponent: false,\n  selectedFilesId: []\n};\nconst ICON_VERTICAL_ALIGN = {\n  verticalAlign: \"baseline\"\n};\nconst PREVIEW_IMG_STYLE = {\n  width: \"120px\",\n  height: \"65px\",\n  objectFit: \"cover\"\n};\nconst PREVIEW_STYLE = {\n  width: \"120px\",\n  minWidth: \"65px\"\n};\nconst TABLE_RECT = {\n  x: true,\n  y: \"calc(100vh - 210px)\"\n};\nconst BUTTON_PANEL = {\n  padding: \"5px 2px\"\n};\nconst JOB_STATE = {\n  DONE: \"done\",\n  FAILED: \"failed\",\n  INPROGRESS: \"inprogress\"\n};\n\nclass filesListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...defaultState\n    };\n    this.columns = [{\n      title: \"\",\n      key: \"preview\",\n      dataIndex: \"preview\",\n      render: preview => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: PREVIEW_STYLE,\n          children: preview ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: preview,\n            style: PREVIEW_IMG_STYLE,\n            className: \"preview-icon\",\n            alt: \"preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultPreview,\n            className: \"preview-icon\",\n            alt: \"preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      },\n      width: 74\n    }, {\n      title: \"File name\",\n      key: \"name\",\n      dataIndex: \"name\",\n      render: (name, file) => {\n        const isPropertyFinished = file.propertiesStatus === JOB_STATE.DONE || file.propertiesStatus === JOB_STATE.FAILED;\n        const isGeometryFinished = file.geometryStatus === JOB_STATE.DONE;\n        return isGeometryFinished && isPropertyFinished ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/file/\" + file.id,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 59\n        }, this) : name;\n      },\n      filterDropdown: _ref => {\n        let {\n          _,\n          selectedKeys\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ref: node => {\n              this.searchInput = node;\n            },\n            placeholder: `Search by name`,\n            value: selectedKeys[0],\n            onPressEnter: () => this.onSearch(this.searchInput.state.value),\n            style: {\n              marginBottom: 8,\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => this.onSearch(this.searchInput.state.value),\n              size: \"small\",\n              style: {\n                width: 90\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                this.searchInput.setState({\n                  value: \"\"\n                });\n                this.onSearch(\"\");\n              },\n              size: \"small\",\n              style: {\n                width: 90\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this);\n      },\n      filterIcon: _ => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          fontSize: \"18px\",\n          color: (this.searchInput ? this.searchInput.state.value : \"\") ? \"green\" : \"#1890ff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this),\n      width: \"50%\"\n    }, {\n      title: \"\",\n      key: \"status\",\n      dataIndex: \"geometryStatus\",\n      render: (geometryStatus, file) => {\n        if (geometryStatus === JOB_STATE.DONE && (file.propertiesStatus === JOB_STATE.DONE || file.propertiesStatus === JOB_STATE.FAILED)) {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Done\",\n            children: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n              style: { ...ICON_VERTICAL_ALIGN,\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this);\n        } else if (geometryStatus === JOB_STATE.INPROGRESS || file.propertiesStatus === JOB_STATE.INPROGRESS) {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"In progress\",\n            children: /*#__PURE__*/_jsxDEV(SyncOutlined, {\n              spin: true,\n              style: { ...ICON_VERTICAL_ALIGN,\n                color: \"#1890ff\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this);\n        } else if (geometryStatus === JOB_STATE.FAILED && file.propertiesStatus === JOB_STATE.FAILED) {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Failed\",\n            children: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n              style: { ...ICON_VERTICAL_ALIGN,\n                color: \"#ff4d4f\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Waiting\",\n          children: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {\n            style: { ...ICON_VERTICAL_ALIGN,\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n      render: type => {\n        return type;\n      },\n      filters: ClientFactory.getConfig().supportFormats.map(item => ({\n        text: item,\n        value: `${item.toLowerCase()}`\n      })),\n      width: \"10%\"\n    }, {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: created => {\n        return `${moment(created).format(\"L\")}`;\n      },\n      width: \"10%\"\n    }, {\n      title: \"Size\",\n      dataIndex: \"size\",\n      key: \"size\",\n      render: size => {\n        return this.bytesToMegabytes(size);\n      },\n      width: \"10%\"\n    }, {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (_, file) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: \"leftBottom\",\n            title: \"Download original file\",\n            children: /*#__PURE__*/_jsxDEV(CloudDownloadOutlined, {\n              style: {\n                fontSize: \"24px\",\n                color: \"#359eff\"\n              },\n              onClick: () => this.service.downloadOriginalFile(file)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: \"leftBottom\",\n            title: \"Delete file\",\n            children: /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n              style: {\n                fontSize: \"24px\"\n              },\n              onClick: () => this.removeById(file.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), file.geometryStatus === JOB_STATE.DONE ? /*#__PURE__*/_jsxDEV(Link, {\n            to: `/file/${file.id}`,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              placement: \"bottom\",\n              title: \"Open file in viewer\",\n              children: /*#__PURE__*/_jsxDEV(RightSquareTwoTone, {\n                style: {\n                  fontSize: \"24px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this);\n      },\n      width: \"10%\"\n    }];\n\n    this.removeById = async id => {\n      try {\n        await this.service.removeById(id);\n        this.setState({\n          files: this.state.files.filter(item => item.id !== id)\n        });\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot remove files\");\n      }\n    };\n\n    this.getFilePage = async (page, pageSize, name, ext) => {\n      this.setState({\n        loading: true\n      });\n      const fixedName = name === undefined ? name || this.state.name || \"\" : name;\n      const fixedExt = ext === undefined ? ext || this.state.ext || \"\" : ext;\n\n      try {\n        const {\n          allSize,\n          list\n        } = await this.service.getPage(page, pageSize, fixedName, fixedExt);\n        this.setState({\n          files: list,\n          loading: false,\n          name: fixedName,\n          ext: fixedExt,\n          pagination: { ...this.state.pagination,\n            total: allSize,\n            current: page,\n            pageSize: pageSize\n          }\n        });\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot get files page\");\n      }\n    };\n\n    this.onUploadProgress = ev => {\n      this.setState({\n        uploadProgress: ev.data * 100\n      });\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      this.setState({\n        selectedFilesId: selectedRowKeys\n      });\n    };\n\n    this.handleTableChange = (pagination, filters) => {\n      const {\n        name,\n        type\n      } = filters;\n      this.getFilePage(pagination.current, pagination.pageSize, name || undefined, type ? type.join(\"|\") : \"\");\n    };\n\n    this.onSearch = value => {\n      const {\n        pagination\n      } = this.state;\n      this.getFilePage(1, pagination.pageSize, value);\n    };\n\n    this.onShowCreateAssemblyDlg = () => {\n      this.setState({\n        showCreateAssemblyComponent: true\n      });\n    };\n\n    this.onCloseCreateAssemblyDlg = () => {\n      this.setState({\n        showCreateAssemblyComponent: false\n      });\n    };\n\n    this.onResolveCreateDrawing = file => {\n      this.drawingFile = file;\n      this.referenceFiles = [];\n      this.setState({\n        showCreateDrawingComponent: false,\n        showCreateReferenceComponent: true\n      });\n    };\n\n    this.onRejectCreateDrawing = () => {\n      this.setState({\n        showCreateDrawingComponent: false,\n        showCreateReferenceComponent: false\n      });\n    };\n\n    this.onResolveCreateReference = async files => {\n      this.referenceFiles = files;\n      this.setState({\n        showCreateDrawingComponent: false,\n        showCreateReferenceComponent: false\n      });\n\n      try {\n        await this.service.uploadFiles(this.drawingFile, this.referenceFiles, this.onUploadProgress);\n        this.getFilePage(this.state.pagination.current, this.state.pagination.pageSize);\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot upload file\");\n      }\n    };\n\n    this.onRejectCreateReference = () => {\n      this.drawingFile = null;\n      this.referenceFiles = [];\n      this.setState({\n        showCreateDrawingComponent: false,\n        showCreateReferenceComponent: false\n      });\n    };\n\n    this.onCreateAssembly = async (name, files) => {\n      const fileIds = files.map(file => file.id);\n\n      try {\n        await ClientFactory.get().createAssembly(fileIds, name);\n        this.props.addNotification(\"success\", \"Create assembly done\");\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot create assembly\");\n      }\n\n      this.setState({\n        selectedFilesId: [],\n        showCreateAssemblyComponent: false\n      });\n    };\n\n    this.service = new FileListService();\n  }\n\n  bytesToMegabytes(bytes) {\n    if (bytes < 1000) {\n      return `${bytes} bytes`;\n    } else if (bytes >= 1000 && bytes < 1000000) {\n      return `${(bytes / 1000).toFixed(2)} KB`;\n    } else if (bytes >= 1000000 && bytes < 1000000000) {\n      return `${(bytes / 1000000).toFixed(2)} MB`;\n    }\n\n    return `${(bytes / 1000000000).toFixed(2)} GB`;\n  }\n\n  componentDidMount() {\n    this.getFilePage(this.state.pagination.current, this.state.pagination.pageSize);\n\n    const isNeedUpdate = () => {\n      if (!this.supportFormatMapCache) {\n        const supportFormats = ClientFactory.getConfig().supportFormats;\n        this.supportFormatMapCache = new Map();\n\n        for (let format of supportFormats) {\n          this.supportFormatMapCache.set(`.${format.toLowerCase()}`, 0);\n        }\n      }\n\n      for (let file of this.state.files) {\n        if (this.supportFormatMapCache.has(file.type.toLowerCase()) && file.metadata === false) return true;\n      }\n\n      return false;\n    };\n\n    this.interval = setInterval(() => {\n      if (isNeedUpdate()) {\n        this.getFilePage(this.state.pagination.current, this.state.pagination.pageSize);\n      }\n    }, 5000);\n    ClientFactory.get().on(\"upload-progress\", this.onUploadProgress);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    ClientFactory.get().removeEventListener(\"upload-progress\", this.onUploadProgress);\n  }\n\n  render() {\n    const {\n      showCreateDrawingComponent,\n      showCreateReferenceComponent,\n      showCreateAssemblyComponent,\n      files,\n      pagination,\n      loading,\n      uploadProgress,\n      selectedFilesId\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys: selectedFilesId,\n      onChange: this.onSelectChange\n    };\n\n    const initializeCreateDrawingComponent = () => {\n      return showCreateDrawingComponent ? /*#__PURE__*/_jsxDEV(CreateDrawing, {\n        supportFormats: ClientFactory.getConfig().supportFormats,\n        onResolve: this.onResolveCreateDrawing,\n        onReject: this.onRejectCreateDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this) : null;\n    };\n\n    const initializeCreateReferenceComponent = () => {\n      return showCreateReferenceComponent ? /*#__PURE__*/_jsxDEV(DrawingReference, {\n        onResolve: this.onResolveCreateReference,\n        onReject: this.onRejectCreateReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this) : null;\n    };\n\n    const initializeCreateAssemblyComponent = () => {\n      return showCreateAssemblyComponent ? /*#__PURE__*/_jsxDEV(CreateAssembly, {\n        files: selectedFilesId,\n        onResolve: this.onCreateAssembly,\n        onCloseHandler: this.onCloseCreateAssemblyDlg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this) : null;\n    };\n\n    const initializeTable = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          columns: this.columns,\n          rowKey: row => row.id,\n          dataSource: files,\n          pagination: pagination,\n          loading: loading,\n          onChange: this.handleTableChange,\n          scroll: TABLE_RECT,\n          rowSelection: rowSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this);\n    };\n\n    const initializeProgressBar = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          progress: uploadProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this);\n    };\n\n    const initializeActionButtonHeader = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tools-panel d-flex flex-wrap justify-content-between gap-2\",\n          style: BUTTON_PANEL,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.setState({\n                showCreateDrawingComponent: true\n              }),\n              icon: /*#__PURE__*/_jsxDEV(FileAddOutlined, {\n                style: { ...ICON_VERTICAL_ALIGN\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this),\n              size: \"large\",\n              children: \"Upload file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: selectedFilesId.length < 2,\n              onClick: this.onShowCreateAssemblyDlg,\n              size: \"large\",\n              style: {\n                marginLeft: \"5px\"\n              },\n              icon: /*#__PURE__*/_jsxDEV(AppstoreAddOutlined, {\n                style: { ...ICON_VERTICAL_ALIGN\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 23\n              }, this),\n              children: \"Create assembly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      children: [initializeProgressBar(), initializeActionButtonHeader(), initializeTable(), initializeCreateDrawingComponent(), initializeCreateReferenceComponent(), initializeCreateAssemblyComponent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({ ...state.files,\n  ...state.plugins\n}), dispatch => ({\n  addNotification: (type, text) => dispatch(notification.addNotification(type, text))\n}))(filesListComponent);","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/containers/FilesListComponent/FilesListComponent.js"],"names":["React","Link","connect","defaultPreview","actions","notification","moment","FileListService","ProgressBar","DrawingReference","CreateDrawing","CreateAssembly","ClientFactory","Table","Input","Tooltip","Space","Button","CheckCircleOutlined","SyncOutlined","CloseCircleOutlined","ClockCircleOutlined","DeleteTwoTone","RightSquareTwoTone","SearchOutlined","FileAddOutlined","AppstoreAddOutlined","CloudDownloadOutlined","defaultState","files","name","ext","loading","uploadProgress","pagination","current","pageSize","total","pageSizeOptions","position","showSizeChanger","showCreateDrawingComponent","showCreateReferenceComponent","showCreateAssemblyComponent","selectedFilesId","ICON_VERTICAL_ALIGN","verticalAlign","PREVIEW_IMG_STYLE","width","height","objectFit","PREVIEW_STYLE","minWidth","TABLE_RECT","x","y","BUTTON_PANEL","padding","JOB_STATE","DONE","FAILED","INPROGRESS","filesListComponent","Component","constructor","props","state","columns","title","key","dataIndex","render","preview","file","isPropertyFinished","propertiesStatus","isGeometryFinished","geometryStatus","id","filterDropdown","_","selectedKeys","node","searchInput","onSearch","value","marginBottom","display","setState","filterIcon","fontSize","color","type","filters","getConfig","supportFormats","map","item","text","toLowerCase","created","format","size","bytesToMegabytes","service","downloadOriginalFile","removeById","filter","e","console","error","addNotification","getFilePage","page","fixedName","undefined","fixedExt","allSize","list","getPage","onUploadProgress","ev","data","onSelectChange","selectedRowKeys","handleTableChange","join","onShowCreateAssemblyDlg","onCloseCreateAssemblyDlg","onResolveCreateDrawing","drawingFile","referenceFiles","onRejectCreateDrawing","onResolveCreateReference","uploadFiles","onRejectCreateReference","onCreateAssembly","fileIds","get","createAssembly","bytes","toFixed","componentDidMount","isNeedUpdate","supportFormatMapCache","Map","set","has","metadata","interval","setInterval","on","componentWillUnmount","clearInterval","removeEventListener","rowSelection","onChange","initializeCreateDrawingComponent","initializeCreateReferenceComponent","initializeCreateAssemblyComponent","initializeTable","row","initializeProgressBar","initializeActionButtonHeader","length","marginLeft","overflow","plugins","dispatch"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,0BAAxC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,OAAO,oBAAP;AAEA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,MAArD;AAEA,SACEC,mBADF,EAEEC,YAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,aALF,EAMEC,kBANF,EAOEC,cAPF,EAQEC,eARF,EASEC,mBATF,EAUEC,qBAVF,QAWO,mBAXP;;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,GAAG,EAAE,EAHc;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,cAAc,EAAE,CALG;AAMnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE,CADC;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,KAAK,EAAE,CAHG;AAIVC,IAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAJP;AAKVC,IAAAA,QAAQ,EAAE,CAAC,cAAD,CALA;AAMVC,IAAAA,eAAe,EAAE;AANP,GANO;AAenBC,EAAAA,0BAA0B,EAAE,KAfT;AAgBnBC,EAAAA,4BAA4B,EAAE,KAhBX;AAiBnBC,EAAAA,2BAA2B,EAAE,KAjBV;AAmBnBC,EAAAA,eAAe,EAAE;AAnBE,CAArB;AAsBA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,aAAa,EAAE;AADW,CAA5B;AAIA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,MAAM,EAAE,MAFgB;AAGxBC,EAAAA,SAAS,EAAE;AAHa,CAA1B;AAMA,MAAMC,aAAa,GAAG;AACpBH,EAAAA,KAAK,EAAE,OADa;AAEpBI,EAAAA,QAAQ,EAAE;AAFU,CAAtB;AAKA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,CAAC,EAAE,IADc;AAEjBC,EAAAA,CAAC,EAAE;AAFc,CAAnB;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,MADU;AAEhBC,EAAAA,MAAM,EAAE,QAFQ;AAGhBC,EAAAA,UAAU,EAAE;AAHI,CAAlB;;AAMA,MAAMC,kBAAN,SAAiC9D,KAAK,CAAC+D,SAAvC,CAAiD;AAwK/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAvKnBC,KAuKmB,GAvKX,EAAE,GAAGtC;AAAL,KAuKW;AAAA,SArKnBuC,OAqKmB,GArKT,CACR;AACEC,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,GAAG,EAAE,SAFP;AAGEC,MAAAA,SAAS,EAAE,SAHb;AAIEC,MAAAA,MAAM,EAAGC,OAAD,IAAa;AACnB,4BACE;AAAK,UAAA,KAAK,EAAErB,aAAZ;AAAA,oBACGqB,OAAO,gBACN;AAAK,YAAA,GAAG,EAAEA,OAAV;AAAmB,YAAA,KAAK,EAAEzB,iBAA1B;AAA6C,YAAA,SAAS,EAAC,cAAvD;AAAsE,YAAA,GAAG,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN;AAAK,YAAA,GAAG,EAAE5C,cAAV;AAA0B,YAAA,SAAS,EAAC,cAApC;AAAmD,YAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAdH;AAeE6C,MAAAA,KAAK,EAAE;AAfT,KADQ,EAkBR;AACEoB,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,GAAG,EAAE,MAFP;AAGEC,MAAAA,SAAS,EAAE,MAHb;AAIEC,MAAAA,MAAM,EAAE,CAACzC,IAAD,EAAO2C,IAAP,KAAgB;AACtB,cAAMC,kBAAkB,GACtBD,IAAI,CAACE,gBAAL,KAA0BjB,SAAS,CAACC,IAApC,IAA4Cc,IAAI,CAACE,gBAAL,KAA0BjB,SAAS,CAACE,MADlF;AAEA,cAAMgB,kBAAkB,GAAGH,IAAI,CAACI,cAAL,KAAwBnB,SAAS,CAACC,IAA7D;AACA,eAAOiB,kBAAkB,IAAIF,kBAAtB,gBAA2C;AAAG,UAAA,IAAI,EAAE,YAAYD,IAAI,CAACK,EAA1B;AAAA,oBAA+BhD;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAA3C,GAAsFA,IAA7F;AACD,OATH;AAUEiD,MAAAA,cAAc,EAAE;AAAA,YAAC;AAAEC,UAAAA,CAAF;AAAKC,UAAAA;AAAL,SAAD;AAAA,4BACd;AAAK,UAAA,KAAK,EAAE;AAAExB,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,GAAG,EAAGyB,IAAD,IAAU;AACb,mBAAKC,WAAL,GAAmBD,IAAnB;AACD,aAHH;AAIE,YAAA,WAAW,EAAG,gBAJhB;AAKE,YAAA,KAAK,EAAED,YAAY,CAAC,CAAD,CALrB;AAME,YAAA,YAAY,EAAE,MAAM,KAAKG,QAAL,CAAc,KAAKD,WAAL,CAAiBjB,KAAjB,CAAuBmB,KAArC,CANtB;AAOE,YAAA,KAAK,EAAE;AAAEC,cAAAA,YAAY,EAAE,CAAhB;AAAmBC,cAAAA,OAAO,EAAE;AAA5B;AAPT;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,KAAD;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,OAAO,EAAE,MAAM,KAAKH,QAAL,CAAc,KAAKD,WAAL,CAAiBjB,KAAjB,CAAuBmB,KAArC,CAFjB;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,KAAK,EAAE;AAAErC,gBAAAA,KAAK,EAAE;AAAT,eAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE,MAAM;AACb,qBAAKmC,WAAL,CAAiBK,QAAjB,CAA0B;AAAEH,kBAAAA,KAAK,EAAE;AAAT,iBAA1B;AACA,qBAAKD,QAAL,CAAc,EAAd;AACD,eAJH;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,KAAK,EAAE;AAAEpC,gBAAAA,KAAK,EAAE;AAAT,eANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADc;AAAA,OAVlB;AA2CEyC,MAAAA,UAAU,EAAGT,CAAD,iBACV,QAAC,cAAD;AACE,QAAA,KAAK,EAAE;AACLU,UAAAA,QAAQ,EAAE,MADL;AAELC,UAAAA,KAAK,EAAE,CAAC,KAAKR,WAAL,GAAmB,KAAKA,WAAL,CAAiBjB,KAAjB,CAAuBmB,KAA1C,GAAkD,EAAnD,IAAyD,OAAzD,GAAmE;AAFrE;AADT;AAAA;AAAA;AAAA;AAAA,cA5CJ;AAmDErC,MAAAA,KAAK,EAAE;AAnDT,KAlBQ,EAuER;AACEoB,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,GAAG,EAAE,QAFP;AAGEC,MAAAA,SAAS,EAAE,gBAHb;AAIEC,MAAAA,MAAM,EAAE,CAACM,cAAD,EAAiBJ,IAAjB,KAA0B;AAChC,YACEI,cAAc,KAAKnB,SAAS,CAACC,IAA7B,KACCc,IAAI,CAACE,gBAAL,KAA0BjB,SAAS,CAACC,IAApC,IAA4Cc,IAAI,CAACE,gBAAL,KAA0BjB,SAAS,CAACE,MADjF,CADF,EAGE;AACA,8BACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,MAAf;AAAA,mCACE,QAAC,mBAAD;AAAqB,cAAA,KAAK,EAAE,EAAE,GAAGf,mBAAL;AAA0B8C,gBAAAA,KAAK,EAAE;AAAjC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SATD,MASO,IAAId,cAAc,KAAKnB,SAAS,CAACG,UAA7B,IAA2CY,IAAI,CAACE,gBAAL,KAA0BjB,SAAS,CAACG,UAAnF,EAA+F;AACpG,8BACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,aAAf;AAAA,mCACE,QAAC,YAAD;AAAc,cAAA,IAAI,MAAlB;AAAmB,cAAA,KAAK,EAAE,EAAE,GAAGhB,mBAAL;AAA0B8C,gBAAAA,KAAK,EAAE;AAAjC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANM,MAMA,IAAId,cAAc,KAAKnB,SAAS,CAACE,MAA7B,IAAuCa,IAAI,CAACE,gBAAL,KAA0BjB,SAAS,CAACE,MAA/E,EAAuF;AAC5F,8BACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,QAAf;AAAA,mCACE,QAAC,mBAAD;AAAqB,cAAA,KAAK,EAAE,EAAE,GAAGf,mBAAL;AAA0B8C,gBAAAA,KAAK,EAAE;AAAjC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACD,4BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,SAAf;AAAA,iCACE,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAE,EAAE,GAAG9C,mBAAL;AAA0B8C,cAAAA,KAAK,EAAE;AAAjC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AAhCH,KAvEQ,EAyGR;AACEvB,MAAAA,KAAK,EAAE,MADT;AAEEE,MAAAA,SAAS,EAAE,MAFb;AAGED,MAAAA,GAAG,EAAE,MAHP;AAIEE,MAAAA,MAAM,EAAGqB,IAAD,IAAU;AAChB,eAAOA,IAAP;AACD,OANH;AAOEC,MAAAA,OAAO,EAAEjF,aAAa,CAACkF,SAAd,GAA0BC,cAA1B,CAAyCC,GAAzC,CAA8CC,IAAD,KAAW;AAC/DC,QAAAA,IAAI,EAAED,IADyD;AAE/DZ,QAAAA,KAAK,EAAG,GAAEY,IAAI,CAACE,WAAL,EAAmB;AAFkC,OAAX,CAA7C,CAPX;AAWEnD,MAAAA,KAAK,EAAE;AAXT,KAzGQ,EAsHR;AACEoB,MAAAA,KAAK,EAAE,SADT;AAEEE,MAAAA,SAAS,EAAE,SAFb;AAGED,MAAAA,GAAG,EAAE,SAHP;AAIEE,MAAAA,MAAM,EAAG6B,OAAD,IAAa;AACnB,eAAQ,GAAE9F,MAAM,CAAC8F,OAAD,CAAN,CAAgBC,MAAhB,CAAuB,GAAvB,CAA4B,EAAtC;AACD,OANH;AAOErD,MAAAA,KAAK,EAAE;AAPT,KAtHQ,EA+HR;AACEoB,MAAAA,KAAK,EAAE,MADT;AAEEE,MAAAA,SAAS,EAAE,MAFb;AAGED,MAAAA,GAAG,EAAE,MAHP;AAIEE,MAAAA,MAAM,EAAG+B,IAAD,IAAU;AAChB,eAAO,KAAKC,gBAAL,CAAsBD,IAAtB,CAAP;AACD,OANH;AAOEtD,MAAAA,KAAK,EAAE;AAPT,KA/HQ,EAwIR;AACEoB,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,GAAG,EAAE,SAFP;AAGEE,MAAAA,MAAM,EAAE,CAACS,CAAD,EAAIP,IAAJ,KAAa;AACnB,4BACE;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,YAAnB;AAAgC,YAAA,KAAK,EAAE,wBAAvC;AAAA,mCACE,QAAC,qBAAD;AACE,cAAA,KAAK,EAAE;AAAEiB,gBAAAA,QAAQ,EAAE,MAAZ;AAAoBC,gBAAAA,KAAK,EAAE;AAA3B,eADT;AAEE,cAAA,OAAO,EAAE,MAAM,KAAKa,OAAL,CAAaC,oBAAb,CAAkChC,IAAlC;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,YAAnB;AAAgC,YAAA,KAAK,EAAE,aAAvC;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,KAAK,EAAE;AAAEiB,gBAAAA,QAAQ,EAAE;AAAZ,eAAtB;AAA4C,cAAA,OAAO,EAAE,MAAM,KAAKgB,UAAL,CAAgBjC,IAAI,CAACK,EAArB;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,EAUGL,IAAI,CAACI,cAAL,KAAwBnB,SAAS,CAACC,IAAlC,gBACC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,SAAQc,IAAI,CAACK,EAAG,EAA3B;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,QAAnB;AAA4B,cAAA,KAAK,EAAE,qBAAnC;AAAA,qCACE,QAAC,kBAAD;AAAoB,gBAAA,KAAK,EAAE;AAAEY,kBAAAA,QAAQ,EAAE;AAAZ;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,GAMG,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAoBD,OAxBH;AAyBE1C,MAAAA,KAAK,EAAE;AAzBT,KAxIQ,CAqKS;;AAAA,SAgBnB0D,UAhBmB,GAgBN,MAAO5B,EAAP,IAAc;AACzB,UAAI;AACF,cAAM,KAAK0B,OAAL,CAAaE,UAAb,CAAwB5B,EAAxB,CAAN;AACA,aAAKU,QAAL,CAAc;AACZ3D,UAAAA,KAAK,EAAE,KAAKqC,KAAL,CAAWrC,KAAX,CAAiB8E,MAAjB,CAAyBV,IAAD,IAAUA,IAAI,CAACnB,EAAL,KAAYA,EAA9C;AADK,SAAd;AAGD,OALD,CAKE,OAAO8B,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,aAAK3C,KAAL,CAAW8C,eAAX,CAA2B,OAA3B,EAAoC,qBAApC;AACD;AACF,KA1BkB;;AAAA,SA4BnBC,WA5BmB,GA4BL,OAAOC,IAAP,EAAa7E,QAAb,EAAuBN,IAAvB,EAA6BC,GAA7B,KAAqC;AACjD,WAAKyD,QAAL,CAAc;AAAExD,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMkF,SAAS,GAAGpF,IAAI,KAAKqF,SAAT,GAAqBrF,IAAI,IAAI,KAAKoC,KAAL,CAAWpC,IAAnB,IAA2B,EAAhD,GAAqDA,IAAvE;AACA,YAAMsF,QAAQ,GAAGrF,GAAG,KAAKoF,SAAR,GAAoBpF,GAAG,IAAI,KAAKmC,KAAL,CAAWnC,GAAlB,IAAyB,EAA7C,GAAkDA,GAAnE;;AAEA,UAAI;AACF,cAAM;AAAEsF,UAAAA,OAAF;AAAWC,UAAAA;AAAX,YAAoB,MAAM,KAAKd,OAAL,CAAae,OAAb,CAAqBN,IAArB,EAA2B7E,QAA3B,EAAqC8E,SAArC,EAAgDE,QAAhD,CAAhC;AACA,aAAK5B,QAAL,CAAc;AACZ3D,UAAAA,KAAK,EAAEyF,IADK;AAEZtF,UAAAA,OAAO,EAAE,KAFG;AAGZF,UAAAA,IAAI,EAAEoF,SAHM;AAIZnF,UAAAA,GAAG,EAAEqF,QAJO;AAKZlF,UAAAA,UAAU,EAAE,EACV,GAAG,KAAKgC,KAAL,CAAWhC,UADJ;AAEVG,YAAAA,KAAK,EAAEgF,OAFG;AAGVlF,YAAAA,OAAO,EAAE8E,IAHC;AAIV7E,YAAAA,QAAQ,EAAEA;AAJA;AALA,SAAd;AAYD,OAdD,CAcE,OAAOwE,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,aAAK3C,KAAL,CAAW8C,eAAX,CAA2B,OAA3B,EAAoC,uBAApC;AACD;AACF,KApDkB;;AAAA,SAsDnBS,gBAtDmB,GAsDCC,EAAD,IAAQ;AACzB,WAAKjC,QAAL,CAAc;AAAEvD,QAAAA,cAAc,EAAEwF,EAAE,CAACC,IAAH,GAAU;AAA5B,OAAd;AACD,KAxDkB;;AAAA,SA0DnBC,cA1DmB,GA0DDC,eAAD,IAAqB;AACpC,WAAKpC,QAAL,CAAc;AAAE5C,QAAAA,eAAe,EAAEgF;AAAnB,OAAd;AACD,KA5DkB;;AAAA,SA8FnBC,iBA9FmB,GA8FC,CAAC3F,UAAD,EAAa2D,OAAb,KAAyB;AAC3C,YAAM;AAAE/D,QAAAA,IAAF;AAAQ8D,QAAAA;AAAR,UAAiBC,OAAvB;AACA,WAAKmB,WAAL,CAAiB9E,UAAU,CAACC,OAA5B,EAAqCD,UAAU,CAACE,QAAhD,EAA0DN,IAAI,IAAIqF,SAAlE,EAA6EvB,IAAI,GAAGA,IAAI,CAACkC,IAAL,CAAU,GAAV,CAAH,GAAoB,EAArG;AACD,KAjGkB;;AAAA,SAmGnB1C,QAnGmB,GAmGPC,KAAD,IAAW;AACpB,YAAM;AAAEnD,QAAAA;AAAF,UAAiB,KAAKgC,KAA5B;AACA,WAAK8C,WAAL,CAAiB,CAAjB,EAAoB9E,UAAU,CAACE,QAA/B,EAAyCiD,KAAzC;AACD,KAtGkB;;AAAA,SAwGnB0C,uBAxGmB,GAwGO,MAAM;AAC9B,WAAKvC,QAAL,CAAc;AACZ7C,QAAAA,2BAA2B,EAAE;AADjB,OAAd;AAGD,KA5GkB;;AAAA,SA8GnBqF,wBA9GmB,GA8GQ,MAAM;AAC/B,WAAKxC,QAAL,CAAc;AACZ7C,QAAAA,2BAA2B,EAAE;AADjB,OAAd;AAGD,KAlHkB;;AAAA,SAoHnBsF,sBApHmB,GAoHOxD,IAAD,IAAU;AACjC,WAAKyD,WAAL,GAAmBzD,IAAnB;AACA,WAAK0D,cAAL,GAAsB,EAAtB;AACA,WAAK3C,QAAL,CAAc;AACZ/C,QAAAA,0BAA0B,EAAE,KADhB;AAEZC,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KA3HkB;;AAAA,SA6HnB0F,qBA7HmB,GA6HK,MAAM;AAC5B,WAAK5C,QAAL,CAAc;AACZ/C,QAAAA,0BAA0B,EAAE,KADhB;AAEZC,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KAlIkB;;AAAA,SAoInB2F,wBApImB,GAoIQ,MAAOxG,KAAP,IAAiB;AAC1C,WAAKsG,cAAL,GAAsBtG,KAAtB;AACA,WAAK2D,QAAL,CAAc;AACZ/C,QAAAA,0BAA0B,EAAE,KADhB;AAEZC,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;;AAIA,UAAI;AACF,cAAM,KAAK8D,OAAL,CAAa8B,WAAb,CAAyB,KAAKJ,WAA9B,EAA2C,KAAKC,cAAhD,EAAgE,KAAKX,gBAArE,CAAN;AACA,aAAKR,WAAL,CAAiB,KAAK9C,KAAL,CAAWhC,UAAX,CAAsBC,OAAvC,EAAgD,KAAK+B,KAAL,CAAWhC,UAAX,CAAsBE,QAAtE;AACD,OAHD,CAGE,OAAOwE,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,aAAK3C,KAAL,CAAW8C,eAAX,CAA2B,OAA3B,EAAoC,oBAApC;AACD;AACF,KAjJkB;;AAAA,SAmJnBwB,uBAnJmB,GAmJO,MAAM;AAC9B,WAAKL,WAAL,GAAmB,IAAnB;AACA,WAAKC,cAAL,GAAsB,EAAtB;AACA,WAAK3C,QAAL,CAAc;AACZ/C,QAAAA,0BAA0B,EAAE,KADhB;AAEZC,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KA1JkB;;AAAA,SA4JnB8F,gBA5JmB,GA4JA,OAAO1G,IAAP,EAAaD,KAAb,KAAuB;AACxC,YAAM4G,OAAO,GAAG5G,KAAK,CAACmE,GAAN,CAAWvB,IAAD,IAAUA,IAAI,CAACK,EAAzB,CAAhB;;AACA,UAAI;AACF,cAAMlE,aAAa,CAAC8H,GAAd,GAAoBC,cAApB,CAAmCF,OAAnC,EAA4C3G,IAA5C,CAAN;AACA,aAAKmC,KAAL,CAAW8C,eAAX,CAA2B,SAA3B,EAAsC,sBAAtC;AACD,OAHD,CAGE,OAAOH,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,aAAK3C,KAAL,CAAW8C,eAAX,CAA2B,OAA3B,EAAoC,wBAApC;AACD;;AAED,WAAKvB,QAAL,CAAc;AAAE5C,QAAAA,eAAe,EAAE,EAAnB;AAAuBD,QAAAA,2BAA2B,EAAE;AAApD,OAAd;AACD,KAvKkB;;AAEjB,SAAK6D,OAAL,GAAe,IAAIjG,eAAJ,EAAf;AACD;;AAEDgG,EAAAA,gBAAgB,CAACqC,KAAD,EAAQ;AACtB,QAAIA,KAAK,GAAG,IAAZ,EAAkB;AAChB,aAAQ,GAAEA,KAAM,QAAhB;AACD,KAFD,MAEO,IAAIA,KAAK,IAAI,IAAT,IAAiBA,KAAK,GAAG,OAA7B,EAAsC;AAC3C,aAAQ,GAAE,CAACA,KAAK,GAAG,IAAT,EAAeC,OAAf,CAAuB,CAAvB,CAA0B,KAApC;AACD,KAFM,MAEA,IAAID,KAAK,IAAI,OAAT,IAAoBA,KAAK,GAAG,UAAhC,EAA4C;AACjD,aAAQ,GAAE,CAACA,KAAK,GAAG,OAAT,EAAkBC,OAAlB,CAA0B,CAA1B,CAA6B,KAAvC;AACD;;AACD,WAAQ,GAAE,CAACD,KAAK,GAAG,UAAT,EAAqBC,OAArB,CAA6B,CAA7B,CAAgC,KAA1C;AACD;;AAgDDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK9B,WAAL,CAAiB,KAAK9C,KAAL,CAAWhC,UAAX,CAAsBC,OAAvC,EAAgD,KAAK+B,KAAL,CAAWhC,UAAX,CAAsBE,QAAtE;;AAEA,UAAM2G,YAAY,GAAG,MAAM;AACzB,UAAI,CAAC,KAAKC,qBAAV,EAAiC;AAC/B,cAAMjD,cAAc,GAAGnF,aAAa,CAACkF,SAAd,GAA0BC,cAAjD;AACA,aAAKiD,qBAAL,GAA6B,IAAIC,GAAJ,EAA7B;;AACA,aAAK,IAAI5C,MAAT,IAAmBN,cAAnB,EAAmC;AACjC,eAAKiD,qBAAL,CAA2BE,GAA3B,CAAgC,IAAG7C,MAAM,CAACF,WAAP,EAAqB,EAAxD,EAA2D,CAA3D;AACD;AACF;;AAED,WAAK,IAAI1B,IAAT,IAAiB,KAAKP,KAAL,CAAWrC,KAA5B,EAAmC;AACjC,YAAI,KAAKmH,qBAAL,CAA2BG,GAA3B,CAA+B1E,IAAI,CAACmB,IAAL,CAAUO,WAAV,EAA/B,KAA2D1B,IAAI,CAAC2E,QAAL,KAAkB,KAAjF,EAAwF,OAAO,IAAP;AACzF;;AACD,aAAO,KAAP;AACD,KAbD;;AAeA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,UAAIP,YAAY,EAAhB,EAAoB;AAClB,aAAK/B,WAAL,CAAiB,KAAK9C,KAAL,CAAWhC,UAAX,CAAsBC,OAAvC,EAAgD,KAAK+B,KAAL,CAAWhC,UAAX,CAAsBE,QAAtE;AACD;AACF,KAJ0B,EAIxB,IAJwB,CAA3B;AAMAxB,IAAAA,aAAa,CAAC8H,GAAd,GAAoBa,EAApB,CAAuB,iBAAvB,EAA0C,KAAK/B,gBAA/C;AACD;;AAEDgC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACAzI,IAAAA,aAAa,CAAC8H,GAAd,GAAoBgB,mBAApB,CAAwC,iBAAxC,EAA2D,KAAKlC,gBAAhE;AACD;;AA6EDjD,EAAAA,MAAM,GAAG;AACP,UAAM;AACJ9B,MAAAA,0BADI;AAEJC,MAAAA,4BAFI;AAGJC,MAAAA,2BAHI;AAIJd,MAAAA,KAJI;AAKJK,MAAAA,UALI;AAMJF,MAAAA,OANI;AAOJC,MAAAA,cAPI;AAQJW,MAAAA;AARI,QASF,KAAKsB,KATT;AAWA,UAAMyF,YAAY,GAAG;AACnB/B,MAAAA,eAAe,EAAEhF,eADE;AAEnBgH,MAAAA,QAAQ,EAAE,KAAKjC;AAFI,KAArB;;AAKA,UAAMkC,gCAAgC,GAAG,MAAM;AAC7C,aAAOpH,0BAA0B,gBAC/B,QAAC,aAAD;AACE,QAAA,cAAc,EAAE7B,aAAa,CAACkF,SAAd,GAA0BC,cAD5C;AAEE,QAAA,SAAS,EAAE,KAAKkC,sBAFlB;AAGE,QAAA,QAAQ,EAAE,KAAKG;AAHjB;AAAA;AAAA;AAAA;AAAA,cAD+B,GAM7B,IANJ;AAOD,KARD;;AAUA,UAAM0B,kCAAkC,GAAG,MAAM;AAC/C,aAAOpH,4BAA4B,gBACjC,QAAC,gBAAD;AACE,QAAA,SAAS,EAAE,KAAK2F,wBADlB;AAEE,QAAA,QAAQ,EAAE,KAAKE;AAFjB;AAAA;AAAA;AAAA;AAAA,cADiC,GAK/B,IALJ;AAMD,KAPD;;AASA,UAAMwB,iCAAiC,GAAG,MAAM;AAC9C,aAAOpH,2BAA2B,gBAChC,QAAC,cAAD;AACE,QAAA,KAAK,EAAEC,eADT;AAEE,QAAA,SAAS,EAAE,KAAK4F,gBAFlB;AAGE,QAAA,cAAc,EAAE,KAAKR;AAHvB;AAAA;AAAA;AAAA;AAAA,cADgC,GAM9B,IANJ;AAOD,KARD;;AAUA,UAAMgC,eAAe,GAAG,MAAM;AAC5B,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAE,KAAK7F,OAFhB;AAGE,UAAA,MAAM,EAAG8F,GAAD,IAASA,GAAG,CAACnF,EAHvB;AAIE,UAAA,UAAU,EAAEjD,KAJd;AAKE,UAAA,UAAU,EAAEK,UALd;AAME,UAAA,OAAO,EAAEF,OANX;AAOE,UAAA,QAAQ,EAAE,KAAK6F,iBAPjB;AAQE,UAAA,MAAM,EAAExE,UARV;AASE,UAAA,YAAY,EAAEsG;AAThB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBD;;AAkBA,UAAMO,qBAAqB,GAAG,MAAM;AAClC,0BACE;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEjI;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;;AAQA,UAAMkI,4BAA4B,GAAG,MAAM;AACzC,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,4DAAf;AAA4E,UAAA,KAAK,EAAE3G,YAAnF;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE,MAAM,KAAKgC,QAAL,CAAc;AAAE/C,gBAAAA,0BAA0B,EAAE;AAA9B,eAAd,CADjB;AAEE,cAAA,IAAI,eAAE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAE,EAAE,GAAGI;AAAL;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAFR;AAGE,cAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,MAAD;AACE,cAAA,QAAQ,EAAED,eAAe,CAACwH,MAAhB,GAAyB,CADrC;AAEE,cAAA,OAAO,EAAE,KAAKrC,uBAFhB;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,KAAK,EAAE;AAAEsC,gBAAAA,UAAU,EAAE;AAAd,eAJT;AAKE,cAAA,IAAI,eAAE,QAAC,mBAAD;AAAqB,gBAAA,KAAK,EAAE,EAAE,GAAGxH;AAAL;AAA5B;AAAA;AAAA;AAAA;AAAA,sBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BD;;AA4BA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEyH,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,iBACGJ,qBAAqB,EADxB,EAEGC,4BAA4B,EAF/B,EAGGH,eAAe,EAHlB,EAIGH,gCAAgC,EAJnC,EAKGC,kCAAkC,EALrC,EAMGC,iCAAiC,EANpC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA/b8C;;AAkcjD,eAAe7J,OAAO,CACnBgE,KAAD,KAAY,EAAE,GAAGA,KAAK,CAACrC,KAAX;AAAkB,KAAGqC,KAAK,CAACqG;AAA3B,CAAZ,CADoB,EAEnBC,QAAD,KAAe;AACbzD,EAAAA,eAAe,EAAE,CAACnB,IAAD,EAAOM,IAAP,KAAgBsE,QAAQ,CAACnK,YAAY,CAAC0G,eAAb,CAA6BnB,IAA7B,EAAmCM,IAAnC,CAAD;AAD5B,CAAf,CAFoB,CAAP,CAKbpC,kBALa,CAAf","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport defaultPreview from \"../../images/default-preview.png\";\nimport { actions as notification } from \"../../redux/notification\";\n\nimport moment from \"moment\";\nimport { FileListService } from \"./FileListService\";\n\nimport ProgressBar from \"../../components/ProgressBar\";\n\nimport DrawingReference from \"../../components/DrawingReference\";\nimport CreateDrawing from \"../../components/CreateDrawing\";\nimport CreateAssembly from \"../../components/CreateAssembly\";\nimport ClientFactory from \"./../../ClientFactory\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Table, Input, Tooltip, Space, Button } from \"antd\";\n\nimport {\n  CheckCircleOutlined,\n  SyncOutlined,\n  CloseCircleOutlined,\n  ClockCircleOutlined,\n  DeleteTwoTone,\n  RightSquareTwoTone,\n  SearchOutlined,\n  FileAddOutlined,\n  AppstoreAddOutlined,\n  CloudDownloadOutlined,\n} from \"@ant-design/icons\";\n\nconst defaultState = {\n  files: [],\n  name: \"\",\n  ext: \"\",\n  loading: true,\n  uploadProgress: 0,\n  pagination: {\n    current: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizeOptions: [20, 50, 75],\n    position: [\"bottomCenter\"],\n    showSizeChanger: true,\n  },\n\n  showCreateDrawingComponent: false,\n  showCreateReferenceComponent: false,\n  showCreateAssemblyComponent: false,\n\n  selectedFilesId: [],\n};\n\nconst ICON_VERTICAL_ALIGN = {\n  verticalAlign: \"baseline\",\n};\n\nconst PREVIEW_IMG_STYLE = {\n  width: \"120px\",\n  height: \"65px\",\n  objectFit: \"cover\",\n};\n\nconst PREVIEW_STYLE = {\n  width: \"120px\",\n  minWidth: \"65px\",\n};\n\nconst TABLE_RECT = {\n  x: true,\n  y: \"calc(100vh - 210px)\",\n};\n\nconst BUTTON_PANEL = {\n  padding: \"5px 2px\",\n};\n\nconst JOB_STATE = {\n  DONE: \"done\",\n  FAILED: \"failed\",\n  INPROGRESS: \"inprogress\",\n};\n\nclass filesListComponent extends React.Component {\n  state = { ...defaultState };\n\n  columns = [\n    {\n      title: \"\",\n      key: \"preview\",\n      dataIndex: \"preview\",\n      render: (preview) => {\n        return (\n          <div style={PREVIEW_STYLE}>\n            {preview ? (\n              <img src={preview} style={PREVIEW_IMG_STYLE} className=\"preview-icon\" alt=\"preview\"></img>\n            ) : (\n              <img src={defaultPreview} className=\"preview-icon\" alt=\"preview\"></img>\n            )}\n          </div>\n        );\n      },\n      width: 74,\n    },\n    {\n      title: \"File name\",\n      key: \"name\",\n      dataIndex: \"name\",\n      render: (name, file) => {\n        const isPropertyFinished =\n          file.propertiesStatus === JOB_STATE.DONE || file.propertiesStatus === JOB_STATE.FAILED;\n        const isGeometryFinished = file.geometryStatus === JOB_STATE.DONE;\n        return isGeometryFinished && isPropertyFinished ? <a href={\"#/file/\" + file.id}>{name}</a> : name;\n      },\n      filterDropdown: ({ _, selectedKeys }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={(node) => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search by name`}\n            value={selectedKeys[0]}\n            onPressEnter={() => this.onSearch(this.searchInput.state.value)}\n            style={{ marginBottom: 8, display: \"block\" }}\n          />\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => this.onSearch(this.searchInput.state.value)}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Search\n            </Button>\n            <Button\n              onClick={() => {\n                this.searchInput.setState({ value: \"\" });\n                this.onSearch(\"\");\n              }}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Reset\n            </Button>\n          </Space>\n        </div>\n      ),\n      filterIcon: (_) => (\n        <SearchOutlined\n          style={{\n            fontSize: \"18px\",\n            color: (this.searchInput ? this.searchInput.state.value : \"\") ? \"green\" : \"#1890ff\",\n          }}\n        />\n      ),\n      width: \"50%\",\n    },\n    {\n      title: \"\",\n      key: \"status\",\n      dataIndex: \"geometryStatus\",\n      render: (geometryStatus, file) => {\n        if (\n          geometryStatus === JOB_STATE.DONE &&\n          (file.propertiesStatus === JOB_STATE.DONE || file.propertiesStatus === JOB_STATE.FAILED)\n        ) {\n          return (\n            <Tooltip title=\"Done\">\n              <CheckCircleOutlined style={{ ...ICON_VERTICAL_ALIGN, color: \"green\" }} />\n            </Tooltip>\n          );\n        } else if (geometryStatus === JOB_STATE.INPROGRESS || file.propertiesStatus === JOB_STATE.INPROGRESS) {\n          return (\n            <Tooltip title=\"In progress\">\n              <SyncOutlined spin style={{ ...ICON_VERTICAL_ALIGN, color: \"#1890ff\" }} />\n            </Tooltip>\n          );\n        } else if (geometryStatus === JOB_STATE.FAILED && file.propertiesStatus === JOB_STATE.FAILED) {\n          return (\n            <Tooltip title=\"Failed\">\n              <CloseCircleOutlined style={{ ...ICON_VERTICAL_ALIGN, color: \"#ff4d4f\" }} />\n            </Tooltip>\n          );\n        }\n        return (\n          <Tooltip title=\"Waiting\">\n            <ClockCircleOutlined style={{ ...ICON_VERTICAL_ALIGN, color: \"black\" }} />\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n      render: (type) => {\n        return type;\n      },\n      filters: ClientFactory.getConfig().supportFormats.map((item) => ({\n        text: item,\n        value: `${item.toLowerCase()}`,\n      })),\n      width: \"10%\",\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: (created) => {\n        return `${moment(created).format(\"L\")}`;\n      },\n      width: \"10%\",\n    },\n    {\n      title: \"Size\",\n      dataIndex: \"size\",\n      key: \"size\",\n      render: (size) => {\n        return this.bytesToMegabytes(size);\n      },\n      width: \"10%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (_, file) => {\n        return (\n          <div>\n            <Tooltip placement=\"leftBottom\" title={\"Download original file\"}>\n              <CloudDownloadOutlined\n                style={{ fontSize: \"24px\", color: \"#359eff\" }}\n                onClick={() => this.service.downloadOriginalFile(file)}\n              />\n            </Tooltip>\n            <Tooltip placement=\"leftBottom\" title={\"Delete file\"}>\n              <DeleteTwoTone style={{ fontSize: \"24px\" }} onClick={() => this.removeById(file.id)} />\n            </Tooltip>\n            {file.geometryStatus === JOB_STATE.DONE ? (\n              <Link to={`/file/${file.id}`}>\n                <Tooltip placement=\"bottom\" title={\"Open file in viewer\"}>\n                  <RightSquareTwoTone style={{ fontSize: \"24px\" }} />\n                </Tooltip>\n              </Link>\n            ) : null}\n          </div>\n        );\n      },\n      width: \"10%\",\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n    this.service = new FileListService();\n  }\n\n  bytesToMegabytes(bytes) {\n    if (bytes < 1000) {\n      return `${bytes} bytes`;\n    } else if (bytes >= 1000 && bytes < 1000000) {\n      return `${(bytes / 1000).toFixed(2)} KB`;\n    } else if (bytes >= 1000000 && bytes < 1000000000) {\n      return `${(bytes / 1000000).toFixed(2)} MB`;\n    }\n    return `${(bytes / 1000000000).toFixed(2)} GB`;\n  }\n\n  removeById = async (id) => {\n    try {\n      await this.service.removeById(id);\n      this.setState({\n        files: this.state.files.filter((item) => item.id !== id),\n      });\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot remove files\");\n    }\n  };\n\n  getFilePage = async (page, pageSize, name, ext) => {\n    this.setState({ loading: true });\n\n    const fixedName = name === undefined ? name || this.state.name || \"\" : name;\n    const fixedExt = ext === undefined ? ext || this.state.ext || \"\" : ext;\n\n    try {\n      const { allSize, list } = await this.service.getPage(page, pageSize, fixedName, fixedExt);\n      this.setState({\n        files: list,\n        loading: false,\n        name: fixedName,\n        ext: fixedExt,\n        pagination: {\n          ...this.state.pagination,\n          total: allSize,\n          current: page,\n          pageSize: pageSize,\n        },\n      });\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot get files page\");\n    }\n  };\n\n  onUploadProgress = (ev) => {\n    this.setState({ uploadProgress: ev.data * 100 });\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({ selectedFilesId: selectedRowKeys });\n  };\n\n  componentDidMount() {\n    this.getFilePage(this.state.pagination.current, this.state.pagination.pageSize);\n\n    const isNeedUpdate = () => {\n      if (!this.supportFormatMapCache) {\n        const supportFormats = ClientFactory.getConfig().supportFormats;\n        this.supportFormatMapCache = new Map();\n        for (let format of supportFormats) {\n          this.supportFormatMapCache.set(`.${format.toLowerCase()}`, 0);\n        }\n      }\n\n      for (let file of this.state.files) {\n        if (this.supportFormatMapCache.has(file.type.toLowerCase()) && file.metadata === false) return true;\n      }\n      return false;\n    };\n\n    this.interval = setInterval(() => {\n      if (isNeedUpdate()) {\n        this.getFilePage(this.state.pagination.current, this.state.pagination.pageSize);\n      }\n    }, 5000);\n\n    ClientFactory.get().on(\"upload-progress\", this.onUploadProgress);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    ClientFactory.get().removeEventListener(\"upload-progress\", this.onUploadProgress);\n  }\n\n  handleTableChange = (pagination, filters) => {\n    const { name, type } = filters;\n    this.getFilePage(pagination.current, pagination.pageSize, name || undefined, type ? type.join(\"|\") : \"\");\n  };\n\n  onSearch = (value) => {\n    const { pagination } = this.state;\n    this.getFilePage(1, pagination.pageSize, value);\n  };\n\n  onShowCreateAssemblyDlg = () => {\n    this.setState({\n      showCreateAssemblyComponent: true,\n    });\n  };\n\n  onCloseCreateAssemblyDlg = () => {\n    this.setState({\n      showCreateAssemblyComponent: false,\n    });\n  };\n\n  onResolveCreateDrawing = (file) => {\n    this.drawingFile = file;\n    this.referenceFiles = [];\n    this.setState({\n      showCreateDrawingComponent: false,\n      showCreateReferenceComponent: true,\n    });\n  };\n\n  onRejectCreateDrawing = () => {\n    this.setState({\n      showCreateDrawingComponent: false,\n      showCreateReferenceComponent: false,\n    });\n  };\n\n  onResolveCreateReference = async (files) => {\n    this.referenceFiles = files;\n    this.setState({\n      showCreateDrawingComponent: false,\n      showCreateReferenceComponent: false,\n    });\n    try {\n      await this.service.uploadFiles(this.drawingFile, this.referenceFiles, this.onUploadProgress);\n      this.getFilePage(this.state.pagination.current, this.state.pagination.pageSize);\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot upload file\");\n    }\n  };\n\n  onRejectCreateReference = () => {\n    this.drawingFile = null;\n    this.referenceFiles = [];\n    this.setState({\n      showCreateDrawingComponent: false,\n      showCreateReferenceComponent: false,\n    });\n  };\n\n  onCreateAssembly = async (name, files) => {\n    const fileIds = files.map((file) => file.id);\n    try {\n      await ClientFactory.get().createAssembly(fileIds, name);\n      this.props.addNotification(\"success\", \"Create assembly done\");\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot create assembly\");\n    }\n\n    this.setState({ selectedFilesId: [], showCreateAssemblyComponent: false });\n  };\n\n  render() {\n    const {\n      showCreateDrawingComponent,\n      showCreateReferenceComponent,\n      showCreateAssemblyComponent,\n      files,\n      pagination,\n      loading,\n      uploadProgress,\n      selectedFilesId,\n    } = this.state;\n\n    const rowSelection = {\n      selectedRowKeys: selectedFilesId,\n      onChange: this.onSelectChange,\n    };\n\n    const initializeCreateDrawingComponent = () => {\n      return showCreateDrawingComponent ? (\n        <CreateDrawing\n          supportFormats={ClientFactory.getConfig().supportFormats}\n          onResolve={this.onResolveCreateDrawing}\n          onReject={this.onRejectCreateDrawing}\n        ></CreateDrawing>\n      ) : null;\n    };\n\n    const initializeCreateReferenceComponent = () => {\n      return showCreateReferenceComponent ? (\n        <DrawingReference\n          onResolve={this.onResolveCreateReference}\n          onReject={this.onRejectCreateReference}\n        ></DrawingReference>\n      ) : null;\n    };\n\n    const initializeCreateAssemblyComponent = () => {\n      return showCreateAssemblyComponent ? (\n        <CreateAssembly\n          files={selectedFilesId}\n          onResolve={this.onCreateAssembly}\n          onCloseHandler={this.onCloseCreateAssemblyDlg}\n        ></CreateAssembly>\n      ) : null;\n    };\n\n    const initializeTable = () => {\n      return (\n        <div className=\"d-flex flex-column\">\n          <Table\n            size=\"small\"\n            columns={this.columns}\n            rowKey={(row) => row.id}\n            dataSource={files}\n            pagination={pagination}\n            loading={loading}\n            onChange={this.handleTableChange}\n            scroll={TABLE_RECT}\n            rowSelection={rowSelection}\n          />\n        </div>\n      );\n    };\n\n    const initializeProgressBar = () => {\n      return (\n        <div>\n          <ProgressBar progress={uploadProgress} />\n        </div>\n      );\n    };\n\n    const initializeActionButtonHeader = () => {\n      return (\n        <div className=\"d-flex flex-column\">\n          <div className=\"tools-panel d-flex flex-wrap justify-content-between gap-2\" style={BUTTON_PANEL}>\n            <div className=\"d-flex flex-wrap gap-2\">\n              <Button\n                onClick={() => this.setState({ showCreateDrawingComponent: true })}\n                icon={<FileAddOutlined style={{ ...ICON_VERTICAL_ALIGN }} />}\n                size=\"large\"\n              >\n                Upload file\n              </Button>\n\n              <Button\n                disabled={selectedFilesId.length < 2}\n                onClick={this.onShowCreateAssemblyDlg}\n                size=\"large\"\n                style={{ marginLeft: \"5px\" }}\n                icon={<AppstoreAddOutlined style={{ ...ICON_VERTICAL_ALIGN }} />}\n              >\n                Create assembly\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <div style={{ overflow: \"hidden\" }}>\n        {initializeProgressBar()}\n        {initializeActionButtonHeader()}\n        {initializeTable()}\n        {initializeCreateDrawingComponent()}\n        {initializeCreateReferenceComponent()}\n        {initializeCreateAssemblyComponent()}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ ...state.files, ...state.plugins }),\n  (dispatch) => ({\n    addNotification: (type, text) => dispatch(notification.addNotification(type, text)),\n  })\n)(filesListComponent);\n"]},"metadata":{},"sourceType":"module"}