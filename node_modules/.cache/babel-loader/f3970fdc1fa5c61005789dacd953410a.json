{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/containers/Notifications.js\";\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as notification } from \"../redux/notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst types = {\n  error: \"danger\",\n  success: \"success\",\n  warning: \"warning\"\n};\n\nclass Notification extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      show: true\n    };\n\n    this.close = () => {\n      this.setState({\n        show: false\n      });\n      clearTimeout(this.timeoutID);\n\n      if (this.props.onClose) {\n        this.props.onClose();\n      }\n    };\n\n    this.timeoutID = -1;\n    this.timeout = 5000;\n  }\n\n  componentDidMount() {\n    this.timeoutID = setTimeout(() => {\n      if (this.props.onClose) this.props.onClose();\n    }, this.timeout);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeoutID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.ref,\n      className: `alert alert-${types[this.props.type]} alert-dismissible fade ${this.state.show ? \"show\" : \"hide\"}`,\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [this.props.type, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), \" \", this.props.text, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        \"aria-label\": \"Close\",\n        onClick: this.close,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Notifications extends Component {\n  render() {\n    const items = this.props.list.map((item, index) => /*#__PURE__*/_jsxDEV(Notification, { ...item,\n      onClose: () => this.props.removeNotification(item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default connect(state => state.notifications, dispatch => ({\n  removeNotification: id => dispatch(notification.removeNotification(id))\n}))(Notifications);","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/containers/Notifications.js"],"names":["React","Component","connect","actions","notification","types","error","success","warning","Notification","state","show","close","setState","clearTimeout","timeoutID","props","onClose","timeout","componentDidMount","setTimeout","componentWillUnmount","render","ref","type","text","Notifications","items","list","map","item","index","removeNotification","id","notifications","dispatch"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as notification } from \"../redux/notification\";\n\nconst types = {\n  error: \"danger\",\n  success: \"success\",\n  warning: \"warning\",\n};\n\nclass Notification extends Component {\n  state = { show: true };\n\n  close = () => {\n    this.setState({ show: false });\n    clearTimeout(this.timeoutID);\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n  timeoutID = -1;\n  timeout = 5000;\n\n  componentDidMount() {\n    this.timeoutID = setTimeout(() => {\n      if (this.props.onClose) this.props.onClose();\n    }, this.timeout);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeoutID);\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.ref}\n        className={`alert alert-${types[this.props.type]} alert-dismissible fade ${this.state.show ? \"show\" : \"hide\"}`}\n        role=\"alert\"\n      >\n        <strong>{this.props.type}:</strong> {this.props.text}\n        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.close}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nclass Notifications extends Component {\n  render() {\n    const items = this.props.list.map((item, index) => (\n      <Notification key={item.id} {...item} onClose={() => this.props.removeNotification(item.id)} />\n    ));\n\n    return <div className=\"notifications\">{items}</div>;\n  }\n}\n\nexport default connect(\n  (state) => state.notifications,\n  (dispatch) => ({\n    removeNotification: (id) => dispatch(notification.removeNotification(id)),\n  })\n)(Notifications);\n"]},"metadata":{},"sourceType":"module"}