{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/viewer/AssemblyTransformComponent/AssemblyTransformComponent.js\";\nimport { Component } from \"react\";\nimport Window from \"../../components/Window\";\nimport ClientFactory from \"../../ClientFactory\";\nimport \"antd/dist/antd.css\";\nimport { Form, Button, Select, InputNumber, Space, Col, Row, Skeleton, Alert } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst windowStyle = {\n  left: \"calc(50% - 300px)\",\n  top: \"calc(50% - 265px)\",\n  width: \"402px\",\n  height: \"450px\",\n  maxHeight: \"450px\",\n  maxWidth: \"402px\"\n};\nconst inputStyle = {\n  width: \"130px\"\n};\nconst inputRotation = {\n  width: \"90px\"\n};\nconst inputRotationAngle = {\n  width: \"120px\"\n};\nconst WindowTitle = \"Transform\";\n\nconst composingMatrixFromTransform = (translate, rotate, scale, modelCenter, matrix) => {\n  const translateMatrix = matrix.setTranslation([translate.x, translate.y, translate.z]);\n  const rotateMatrix = matrix.setToRotation(rotate.angle, [rotate.x, rotate.y, rotate.z], modelCenter);\n  const scaleMatrix = matrix.setToScaling(scale, modelCenter);\n  return translateMatrix.postMultBy(rotateMatrix).postMultBy(scaleMatrix);\n};\n\nexport class AssemblyTransformComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      models: [],\n      translate: {\n        x: 0.0,\n        y: 0.0,\n        z: 0.0\n      },\n      scale: 0.0,\n      rotate: {\n        x: 0.0,\n        y: 0.0,\n        z: 0.0,\n        angle: 0.0\n      },\n      isLoading: true,\n      isApplyProcess: false,\n      isError: false,\n      errorMessage: \"\"\n    };\n    this.selectedIndex = 0;\n\n    this.onChange = index => {\n      this.selectedIndex = index;\n      const viewer = this.props.viewer.visViewer();\n\n      if (this.selectionSet) {\n        viewer.activeView.highlightAll(this.selectionSet, false);\n        this.selectionSet.delete();\n      }\n\n      this.selectionSet = viewer.activeView.selectCrossing([0, 9999, 9999, 0], this.state.models[index].object);\n      viewer.activeView.highlightAll(this.selectionSet, true);\n      const transform = this.state.models[index].transform;\n      this.setState({\n        translate: transform.translate,\n        rotate: transform.rotation,\n        scale: transform.scale\n      });\n    };\n\n    this.onApply = async () => {\n      const uiModel = this.state.models[this.selectedIndex];\n      const model = uiModel.object;\n      const lib = this.props.viewer.visLib();\n      const extents = model.getExtents();\n      const newMatrix = composingMatrixFromTransform(this.state.translate, this.state.rotate, this.state.scale, extents.center(), new lib.Matrix3d());\n      model.setModelingMatrix(newMatrix, true);\n      const assembly = this.props.assembly;\n\n      try {\n        this.setState({\n          isApplyProcess: true\n        });\n        await assembly.setModelTransformMatrix(model.getDatabaseHandle(), {\n          translate: this.state.translate,\n          rotation: this.state.rotate,\n          scale: this.state.scale\n        });\n        this.state.models[this.selectedIndex].transform = {\n          translate: this.state.translate,\n          rotation: this.state.rotate,\n          scale: this.state.scale\n        };\n      } catch (error) {\n        this.setState({\n          isError: true,\n          errorMessage: \"Cannot apply transform for model\"\n        });\n      } finally {\n        this.setState({\n          isApplyProcess: false,\n          isError: false\n        });\n      }\n    };\n\n    this.onResetToDefault = () => {\n      this.setState({\n        translate: {\n          x: 0.0,\n          y: 0.0,\n          z: 0.0\n        },\n        scale: 1.0,\n        rotate: {\n          x: 0.0,\n          y: 0.0,\n          z: 1.0,\n          angle: 0.0\n        }\n      });\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        isLoading: true\n      });\n      const assembly = this.props.assembly;\n      const viewer = this.props.viewer.visViewer();\n      const modelList = [];\n      let index = 0;\n\n      for (const modelItr = viewer.getModelIterator(); !modelItr.done(); modelItr.step()) {\n        const model = modelItr.getModel();\n\n        if (model.getName()[0] !== \"$\") {\n          const file = await ClientFactory.get().getFile(assembly.files[index]);\n          index++;\n          const transform = assembly.getModelTransformMatrix(model.getDatabaseHandle()) || {\n            translate: {\n              x: 0.0,\n              y: 0.0,\n              z: 0.0\n            },\n            scale: 1.0,\n            rotation: {\n              x: 0.0,\n              y: 0.0,\n              z: 1.0,\n              angle: 0.0\n            }\n          };\n          modelList.push({\n            name: file.name,\n            object: model,\n            transform: transform\n          });\n        }\n      }\n\n      this.setState({\n        models: modelList,\n        isLoading: false\n      });\n      this.onChange(0);\n    } catch (err) {\n      this.setState({\n        isError: true,\n        errorMessage: \"Cannot load transform data from server\"\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const viewer = this.props.viewer.visViewer();\n\n    if (viewer && this.selectionSet) {\n      viewer.activeView.highlightAll(this.selectionSet, false);\n      this.selectionSet.delete();\n    }\n  }\n\n  render() {\n    const modelListTemplate = this.state.models.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: index,\n        children: value.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    });\n    const {\n      translate,\n      rotate,\n      scale,\n      isApplyProcess,\n      isLoading,\n      isError,\n      errorMessage\n    } = this.state;\n\n    const uiTransform = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        size: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Choose model for transformation\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: 0,\n            onChange: this.onChange,\n            children: modelListTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Translation\",\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            style: inputStyle,\n            addonBefore: \"X:\",\n            decimalSeparator: \".\",\n            value: translate.x,\n            step: 0.1,\n            onChange: value => this.setState({\n              translate: { ...translate,\n                x: value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n            style: inputStyle,\n            addonBefore: \"Y:\",\n            decimalSeparator: \".\",\n            value: translate.y,\n            step: 0.1,\n            onChange: value => this.setState({\n              translate: { ...translate,\n                y: value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n            style: inputStyle,\n            addonBefore: \"Z:\",\n            decimalSeparator: \".\",\n            value: translate.z,\n            step: 0.1,\n            onChange: value => this.setState({\n              translate: { ...translate,\n                z: value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Rotation\",\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            addonBefore: \"X:\",\n            style: inputRotation,\n            decimalSeparator: \".\",\n            value: rotate.x,\n            step: 0.1,\n            max: 1.0,\n            min: -1.0,\n            onChange: value => this.setState({\n              rotate: { ...rotate,\n                x: value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n            addonBefore: \"Y:\",\n            style: inputRotation,\n            decimalSeparator: \".\",\n            value: rotate.y,\n            step: 0.1,\n            max: 1.0,\n            min: -1.0,\n            onChange: value => this.setState({\n              rotate: { ...rotate,\n                y: value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n            addonBefore: \"Z:\",\n            style: inputRotation,\n            decimalSeparator: \".\",\n            value: rotate.z,\n            step: 0.1,\n            max: 1.0,\n            min: -1.0,\n            onChange: value => this.setState({\n              rotate: { ...rotate,\n                z: value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n            addonBefore: \"Angle:\",\n            style: inputRotationAngle,\n            decimalSeparator: \".\",\n            value: (rotate.angle * (180 / Math.PI)).toFixed(2),\n            step: 0.1,\n            min: 0.0,\n            max: 360.0,\n            onChange: value => this.setState({\n              rotate: { ...rotate,\n                angle: value * (Math.PI / 180)\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Scale\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            style: inputRotation,\n            decimalSeparator: \".\",\n            value: scale,\n            step: 0.1,\n            min: 0.1,\n            onChange: value => this.setState({\n              scale: value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"inline\",\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 48,\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              style: {\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                loading: isApplyProcess,\n                onClick: this.onApply,\n                children: \"Apply changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                loading: isApplyProcess,\n                onClick: this.onResetToDefault,\n                children: \"Reset to default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n\n    const uiLoading = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Window, {\n      className: \"properties-explorer\",\n      title: WindowTitle,\n      style: windowStyle,\n      onClose: this.props.onClose,\n      children: [isLoading ? uiLoading : uiTransform, isError ? /*#__PURE__*/_jsxDEV(Alert, {\n        style: {\n          position: \"absolute\",\n          top: \"56px\",\n          zIndex: \"1\",\n          left: \"0px\",\n          width: \"100%\"\n        },\n        message: \"Error\",\n        description: errorMessage,\n        type: \"error\",\n        onClose: () => this.setState({\n          isError: false\n        }),\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/viewer/AssemblyTransformComponent/AssemblyTransformComponent.js"],"names":["Component","Window","ClientFactory","Form","Button","Select","InputNumber","Space","Col","Row","Skeleton","Alert","windowStyle","left","top","width","height","maxHeight","maxWidth","inputStyle","inputRotation","inputRotationAngle","WindowTitle","composingMatrixFromTransform","translate","rotate","scale","modelCenter","matrix","translateMatrix","setTranslation","x","y","z","rotateMatrix","setToRotation","angle","scaleMatrix","setToScaling","postMultBy","AssemblyTransformComponent","state","models","isLoading","isApplyProcess","isError","errorMessage","selectedIndex","onChange","index","viewer","props","visViewer","selectionSet","activeView","highlightAll","delete","selectCrossing","object","transform","setState","rotation","onApply","uiModel","model","lib","visLib","extents","getExtents","newMatrix","center","Matrix3d","setModelingMatrix","assembly","setModelTransformMatrix","getDatabaseHandle","error","onResetToDefault","componentDidMount","modelList","modelItr","getModelIterator","done","step","getModel","getName","file","get","getFile","files","getModelTransformMatrix","push","name","err","componentWillUnmount","render","modelListTemplate","map","value","uiTransform","Math","PI","toFixed","uiLoading","onClose","position","zIndex"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\n\nimport Window from \"../../components/Window\";\n\nimport ClientFactory from \"../../ClientFactory\";\n\nimport \"antd/dist/antd.css\";\nimport { Form, Button, Select, InputNumber, Space, Col, Row, Skeleton, Alert } from \"antd\";\n\nconst windowStyle = {\n  left: \"calc(50% - 300px)\",\n  top: \"calc(50% - 265px)\",\n  width: \"402px\",\n  height: \"450px\",\n  maxHeight: \"450px\",\n  maxWidth: \"402px\",\n};\n\nconst inputStyle = {\n  width: \"130px\",\n};\nconst inputRotation = {\n  width: \"90px\",\n};\nconst inputRotationAngle = {\n  width: \"120px\",\n};\n\nconst WindowTitle = \"Transform\";\n\nconst composingMatrixFromTransform = (translate, rotate, scale, modelCenter, matrix) => {\n  const translateMatrix = matrix.setTranslation([translate.x, translate.y, translate.z]);\n\n  const rotateMatrix = matrix.setToRotation(rotate.angle, [rotate.x, rotate.y, rotate.z], modelCenter);\n\n  const scaleMatrix = matrix.setToScaling(scale, modelCenter);\n  return translateMatrix.postMultBy(rotateMatrix).postMultBy(scaleMatrix);\n};\n\nexport class AssemblyTransformComponent extends Component {\n  state = {\n    models: [],\n\n    translate: { x: 0.0, y: 0.0, z: 0.0 },\n    scale: 0.0,\n    rotate: { x: 0.0, y: 0.0, z: 0.0, angle: 0.0 },\n    isLoading: true,\n    isApplyProcess: false,\n    isError: false,\n    errorMessage: \"\",\n  };\n\n  selectedIndex = 0;\n\n  async componentDidMount() {\n    try {\n      this.setState({ isLoading: true });\n      const assembly = this.props.assembly;\n\n      const viewer = this.props.viewer.visViewer();\n      const modelList = [];\n      let index = 0;\n      for (const modelItr = viewer.getModelIterator(); !modelItr.done(); modelItr.step()) {\n        const model = modelItr.getModel();\n        if (model.getName()[0] !== \"$\") {\n          const file = await ClientFactory.get().getFile(assembly.files[index]);\n          index++;\n\n          const transform = assembly.getModelTransformMatrix(model.getDatabaseHandle()) || {\n            translate: { x: 0.0, y: 0.0, z: 0.0 },\n            scale: 1.0,\n            rotation: { x: 0.0, y: 0.0, z: 1.0, angle: 0.0 },\n          };\n\n          modelList.push({\n            name: file.name,\n            object: model,\n            transform: transform,\n          });\n        }\n      }\n\n      this.setState({ models: modelList, isLoading: false });\n      this.onChange(0);\n    } catch (err) {\n      this.setState({\n        isError: true,\n        errorMessage: \"Cannot load transform data from server\",\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const viewer = this.props.viewer.visViewer();\n    if (viewer && this.selectionSet) {\n      viewer.activeView.highlightAll(this.selectionSet, false);\n      this.selectionSet.delete();\n    }\n  }\n\n  onChange = (index) => {\n    this.selectedIndex = index;\n\n    const viewer = this.props.viewer.visViewer();\n    if (this.selectionSet) {\n      viewer.activeView.highlightAll(this.selectionSet, false);\n      this.selectionSet.delete();\n    }\n\n    this.selectionSet = viewer.activeView.selectCrossing([0, 9999, 9999, 0], this.state.models[index].object);\n\n    viewer.activeView.highlightAll(this.selectionSet, true);\n\n    const transform = this.state.models[index].transform;\n\n    this.setState({\n      translate: transform.translate,\n      rotate: transform.rotation,\n      scale: transform.scale,\n    });\n  };\n\n  onApply = async () => {\n    const uiModel = this.state.models[this.selectedIndex];\n    const model = uiModel.object;\n\n    const lib = this.props.viewer.visLib();\n\n    const extents = model.getExtents();\n    const newMatrix = composingMatrixFromTransform(\n      this.state.translate,\n      this.state.rotate,\n      this.state.scale,\n      extents.center(),\n      new lib.Matrix3d()\n    );\n\n    model.setModelingMatrix(newMatrix, true);\n\n    const assembly = this.props.assembly;\n    try {\n      this.setState({ isApplyProcess: true });\n      await assembly.setModelTransformMatrix(model.getDatabaseHandle(), {\n        translate: this.state.translate,\n        rotation: this.state.rotate,\n        scale: this.state.scale,\n      });\n\n      this.state.models[this.selectedIndex].transform = {\n        translate: this.state.translate,\n        rotation: this.state.rotate,\n        scale: this.state.scale,\n      };\n    } catch (error) {\n      this.setState({\n        isError: true,\n        errorMessage: \"Cannot apply transform for model\",\n      });\n    } finally {\n      this.setState({ isApplyProcess: false, isError: false });\n    }\n  };\n\n  onResetToDefault = () => {\n    this.setState({\n      translate: { x: 0.0, y: 0.0, z: 0.0 },\n      scale: 1.0,\n      rotate: { x: 0.0, y: 0.0, z: 1.0, angle: 0.0 },\n    });\n  };\n\n  render() {\n    const modelListTemplate = this.state.models.map((value, index) => {\n      return (\n        <Select.Option key={index} value={index}>\n          {value.name}\n        </Select.Option>\n      );\n    });\n\n    const { translate, rotate, scale, isApplyProcess, isLoading, isError, errorMessage } = this.state;\n\n    const uiTransform = (\n      <div>\n        <Form layout=\"vertical\" size=\"middle\">\n          <Form.Item label=\"Choose model for transformation\">\n            <Select defaultValue={0} onChange={this.onChange}>\n              {modelListTemplate}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Translation\">\n            <InputNumber\n              style={inputStyle}\n              addonBefore=\"X:\"\n              decimalSeparator=\".\"\n              value={translate.x}\n              step={0.1}\n              onChange={(value) => this.setState({ translate: { ...translate, x: value } })}\n            />\n\n            <InputNumber\n              style={inputStyle}\n              addonBefore=\"Y:\"\n              decimalSeparator=\".\"\n              value={translate.y}\n              step={0.1}\n              onChange={(value) => this.setState({ translate: { ...translate, y: value } })}\n            />\n\n            <InputNumber\n              style={inputStyle}\n              addonBefore=\"Z:\"\n              decimalSeparator=\".\"\n              value={translate.z}\n              step={0.1}\n              onChange={(value) => this.setState({ translate: { ...translate, z: value } })}\n            />\n          </Form.Item>\n        </Form>\n\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Rotation\">\n            <InputNumber\n              addonBefore=\"X:\"\n              style={inputRotation}\n              decimalSeparator=\".\"\n              value={rotate.x}\n              step={0.1}\n              max={1.0}\n              min={-1.0}\n              onChange={(value) => this.setState({ rotate: { ...rotate, x: value } })}\n            />\n\n            <InputNumber\n              addonBefore=\"Y:\"\n              style={inputRotation}\n              decimalSeparator=\".\"\n              value={rotate.y}\n              step={0.1}\n              max={1.0}\n              min={-1.0}\n              onChange={(value) => this.setState({ rotate: { ...rotate, y: value } })}\n            />\n\n            <InputNumber\n              addonBefore=\"Z:\"\n              style={inputRotation}\n              decimalSeparator=\".\"\n              value={rotate.z}\n              step={0.1}\n              max={1.0}\n              min={-1.0}\n              onChange={(value) => this.setState({ rotate: { ...rotate, z: value } })}\n            />\n\n            <InputNumber\n              addonBefore=\"Angle:\"\n              style={inputRotationAngle}\n              decimalSeparator=\".\"\n              value={(rotate.angle * (180 / Math.PI)).toFixed(2)}\n              step={0.1}\n              min={0.0}\n              max={360.0}\n              onChange={(value) =>\n                this.setState({\n                  rotate: { ...rotate, angle: value * (Math.PI / 180) },\n                })\n              }\n            />\n          </Form.Item>\n          <Form.Item label=\"Scale\">\n            <InputNumber\n              style={inputRotation}\n              decimalSeparator=\".\"\n              value={scale}\n              step={0.1}\n              min={0.1}\n              onChange={(value) => this.setState({ scale: value })}\n            />\n          </Form.Item>\n        </Form>\n\n        <Form layout=\"inline\" size=\"large\">\n          <Row>\n            <Col span={48}>\n              <Space style={{ width: \"100%\" }}>\n                <Button type=\"primary\" loading={isApplyProcess} onClick={this.onApply}>\n                  Apply changes\n                </Button>\n                <Button loading={isApplyProcess} onClick={this.onResetToDefault}>\n                  Reset to default\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n\n    const uiLoading = (\n      <div>\n        <Skeleton active />\n        <Skeleton active />\n      </div>\n    );\n\n    return (\n      <Window className=\"properties-explorer\" title={WindowTitle} style={windowStyle} onClose={this.props.onClose}>\n        {isLoading ? uiLoading : uiTransform}\n        {isError ? (\n          <Alert\n            style={{\n              position: \"absolute\",\n              top: \"56px\",\n              zIndex: \"1\",\n              left: \"0px\",\n              width: \"100%\",\n            }}\n            message=\"Error\"\n            description={errorMessage}\n            type=\"error\"\n            onClose={() => this.setState({ isError: false })}\n            closable\n          />\n        ) : null}\n      </Window>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}