{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/containers/AssembliesListComponent/AssembliesListComponent.js\";\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport defaultPreview from \"../../images/assembly-preview.png\";\nimport * as login from \"../../redux/login\";\nimport { actions as notification } from \"../../redux/notification\";\nimport moment from \"moment\";\nimport { AssembliesListService } from \"./AssembliesListService\";\nimport \"antd/dist/antd.css\";\nimport { Table, Input, Tooltip, Space, Button } from \"antd\";\nimport { CheckCircleOutlined, SyncOutlined, CloseCircleOutlined, ClockCircleOutlined, DeleteTwoTone, RightSquareTwoTone, SearchOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  assemblies: [],\n  name: \"\",\n  loading: true,\n  pagination: {\n    current: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizeOptions: [20, 50, 75],\n    position: [\"bottomCenter\"],\n    showSizeChanger: true\n  }\n};\nconst iconStyleFix = {\n  verticalAlign: \"baseline\"\n};\n\nclass AssembliesListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...defaultState\n    };\n    this.columns = [{\n      title: \"\",\n      key: \"preview\",\n      dataIndex: \"status\",\n      render: _ => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"74px\",\n            minWidth: \"74px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultPreview,\n            className: \"preview-icon\",\n            alt: \"preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      },\n      width: 74\n    }, {\n      title: \"Assembly name\",\n      key: \"name\",\n      dataIndex: \"name\",\n      render: (name, assembly) => {\n        return assembly.status === \"done\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/assembly/\" + assembly.id,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 45\n        }, this) : `${name}`;\n      },\n      filterDropdown: _ref => {\n        let {\n          setSelectedKeys,\n          selectedKeys,\n          confirm,\n          clearFilters\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ref: node => {\n              this.searchInput = node;\n            },\n            placeholder: `Search by name`,\n            value: selectedKeys[0],\n            onPressEnter: () => this.onSearch(this.searchInput.state.value),\n            style: {\n              marginBottom: 8,\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => this.onSearch(this.searchInput.state.value),\n              size: \"small\",\n              style: {\n                width: 90\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                this.searchInput.setState({\n                  value: \"\"\n                });\n                this.onSearch(\"\");\n              },\n              size: \"small\",\n              style: {\n                width: 90\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this);\n      },\n      filterIcon: _ => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          fontSize: \"18px\",\n          color: (this.searchInput ? this.searchInput.state.value : \"\") ? \"green\" : \"#1890ff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this),\n      width: \"70%\"\n    }, {\n      title: \"\",\n      key: \"status\",\n      dataIndex: \"status\",\n      render: status => {\n        if (status === \"done\") {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Done\",\n            children: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n              style: { ...iconStyleFix,\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this);\n        } else if (status === \"inprogress\") {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"In progress\",\n            children: /*#__PURE__*/_jsxDEV(SyncOutlined, {\n              spin: true,\n              style: { ...iconStyleFix,\n                color: \"#1890ff\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this);\n        } else if (status === \"failed\") {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Failed\",\n            children: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n              style: { ...iconStyleFix,\n                color: \"#ff4d4f\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Waiting\",\n          children: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {\n            style: { ...iconStyleFix,\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: created => {\n        return `${moment(created).format(\"L\")}`;\n      },\n      width: \"10%\"\n    }, {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (_, assembly) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: \"leftBottom\",\n            title: \"Delete assembly\",\n            children: /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n              style: {\n                fontSize: \"24px\"\n              },\n              onClick: () => this.removeAssemblyById(assembly.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), assembly.status === \"done\" ? /*#__PURE__*/_jsxDEV(Link, {\n            to: `#/assembly/${assembly.id}`,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              placement: \"bottom\",\n              title: \"Open assembly in viewer\",\n              children: /*#__PURE__*/_jsxDEV(RightSquareTwoTone, {\n                style: {\n                  fontSize: \"24px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this);\n      },\n      width: \"10%\"\n    }];\n\n    this.removeAssemblyById = id => {\n      try {\n        this.service.removeById(id);\n        this.setState({\n          assemblies: this.state.assemblies.filter(assemblyItem => assemblyItem.id !== id)\n        });\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot remove assemblies\");\n      }\n    };\n\n    this.getAssemblyPage = async (page, pageSize, name) => {\n      this.setState({\n        loading: true\n      });\n      const fixedName = name === undefined ? name || this.state.name || \"\" : name;\n\n      try {\n        const {\n          allSize,\n          list\n        } = await this.service.getPage(page, pageSize, fixedName);\n        this.setState({\n          assemblies: list,\n          loading: false,\n          name: fixedName,\n          pagination: { ...this.state.pagination,\n            total: allSize,\n            current: page,\n            pageSize: pageSize\n          }\n        });\n      } catch (e) {\n        console.error(e);\n        this.props.addNotification(\"error\", \"Cannot get assembly page\");\n      }\n    };\n\n    this.handleTableChange = pagination => {\n      this.getAssemblyPage(pagination.current, pagination.pageSize);\n    };\n\n    this.onSearch = value => {\n      const {\n        pagination\n      } = this.state;\n      this.getAssemblyPage(1, pagination.pageSize, value);\n    };\n\n    this.service = new AssembliesListService();\n  }\n\n  componentDidMount() {\n    this.getAssemblyPage(this.state.pagination.current, this.state.pagination.pageSize);\n\n    const isNeedUpdate = () => {\n      return this.state.assemblies.filter(assemblies => assemblies.status === \"waiting\" || assemblies.status === \"inprogress\").length;\n    };\n\n    this.interval = setInterval(() => {\n      if (isNeedUpdate()) {\n        this.getAssemblyPage(this.state.pagination.current, this.state.pagination.pageSize);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          columns: this.columns,\n          rowKey: row => row.id,\n          dataSource: this.state.assemblies,\n          pagination: this.state.pagination,\n          loading: this.state.loading,\n          onChange: this.handleTableChange,\n          scroll: {\n            x: true,\n            y: \"calc(100vh - 160px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({ ...state.files,\n  ...state.plugins\n}), dispatch => ({\n  logout: () => dispatch(login.actions.logout()),\n  addNotification: (type, text) => dispatch(notification.addNotification(type, text))\n}))(AssembliesListComponent);","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/containers/AssembliesListComponent/AssembliesListComponent.js"],"names":["React","Link","connect","defaultPreview","login","actions","notification","moment","AssembliesListService","Table","Input","Tooltip","Space","Button","CheckCircleOutlined","SyncOutlined","CloseCircleOutlined","ClockCircleOutlined","DeleteTwoTone","RightSquareTwoTone","SearchOutlined","defaultState","assemblies","name","loading","pagination","current","pageSize","total","pageSizeOptions","position","showSizeChanger","iconStyleFix","verticalAlign","AssembliesListComponent","Component","constructor","props","state","columns","title","key","dataIndex","render","_","width","minWidth","assembly","status","id","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","onSearch","value","marginBottom","display","setState","filterIcon","fontSize","color","created","format","removeAssemblyById","service","removeById","filter","assemblyItem","e","console","error","addNotification","getAssemblyPage","page","fixedName","undefined","allSize","list","getPage","handleTableChange","componentDidMount","isNeedUpdate","length","interval","setInterval","componentWillUnmount","clearInterval","overflow","row","x","y","files","plugins","dispatch","logout","type","text"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport defaultPreview from \"../../images/assembly-preview.png\";\nimport * as login from \"../../redux/login\";\nimport { actions as notification } from \"../../redux/notification\";\n\nimport moment from \"moment\";\nimport { AssembliesListService } from \"./AssembliesListService\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Table, Input, Tooltip, Space, Button } from \"antd\";\n\nimport {\n  CheckCircleOutlined,\n  SyncOutlined,\n  CloseCircleOutlined,\n  ClockCircleOutlined,\n  DeleteTwoTone,\n  RightSquareTwoTone,\n  SearchOutlined,\n} from \"@ant-design/icons\";\n\nconst defaultState = {\n  assemblies: [],\n  name: \"\",\n  loading: true,\n\n  pagination: {\n    current: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizeOptions: [20, 50, 75],\n    position: [\"bottomCenter\"],\n    showSizeChanger: true,\n  },\n};\n\nconst iconStyleFix = {\n  verticalAlign: \"baseline\",\n};\n\nclass AssembliesListComponent extends React.Component {\n  state = { ...defaultState };\n\n  columns = [\n    {\n      title: \"\",\n      key: \"preview\",\n      dataIndex: \"status\",\n      render: (_) => {\n        return (\n          <div style={{ width: \"74px\", minWidth: \"74px\" }}>\n            <img src={defaultPreview} className=\"preview-icon\" alt=\"preview\"></img>\n          </div>\n        );\n      },\n      width: 74,\n    },\n    {\n      title: \"Assembly name\",\n      key: \"name\",\n      dataIndex: \"name\",\n      render: (name, assembly) => {\n        return assembly.status === \"done\" ? <a href={\"#/assembly/\" + assembly.id}>{name}</a> : `${name}`;\n      },\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={(node) => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search by name`}\n            value={selectedKeys[0]}\n            onPressEnter={() => this.onSearch(this.searchInput.state.value)}\n            style={{ marginBottom: 8, display: \"block\" }}\n          />\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => this.onSearch(this.searchInput.state.value)}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Search\n            </Button>\n            <Button\n              onClick={() => {\n                this.searchInput.setState({ value: \"\" });\n                this.onSearch(\"\");\n              }}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Reset\n            </Button>\n          </Space>\n        </div>\n      ),\n      filterIcon: (_) => (\n        <SearchOutlined\n          style={{\n            fontSize: \"18px\",\n            color: (this.searchInput ? this.searchInput.state.value : \"\") ? \"green\" : \"#1890ff\",\n          }}\n        />\n      ),\n      width: \"70%\",\n    },\n    {\n      title: \"\",\n      key: \"status\",\n      dataIndex: \"status\",\n      render: (status) => {\n        if (status === \"done\") {\n          return (\n            <Tooltip title=\"Done\">\n              <CheckCircleOutlined style={{ ...iconStyleFix, color: \"green\" }} />\n            </Tooltip>\n          );\n        } else if (status === \"inprogress\") {\n          return (\n            <Tooltip title=\"In progress\">\n              <SyncOutlined spin style={{ ...iconStyleFix, color: \"#1890ff\" }} />\n            </Tooltip>\n          );\n        } else if (status === \"failed\") {\n          return (\n            <Tooltip title=\"Failed\">\n              <CloseCircleOutlined style={{ ...iconStyleFix, color: \"#ff4d4f\" }} />\n            </Tooltip>\n          );\n        }\n        return (\n          <Tooltip title=\"Waiting\">\n            <ClockCircleOutlined style={{ ...iconStyleFix, color: \"black\" }} />\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      key: \"created\",\n      render: (created) => {\n        return `${moment(created).format(\"L\")}`;\n      },\n      width: \"10%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (_, assembly) => {\n        return (\n          <div>\n            <Tooltip placement=\"leftBottom\" title={\"Delete assembly\"}>\n              <DeleteTwoTone style={{ fontSize: \"24px\" }} onClick={() => this.removeAssemblyById(assembly.id)} />\n            </Tooltip>\n            {assembly.status === \"done\" ? (\n              <Link to={`#/assembly/${assembly.id}`}>\n                <Tooltip placement=\"bottom\" title={\"Open assembly in viewer\"}>\n                  <RightSquareTwoTone style={{ fontSize: \"24px\" }} />\n                </Tooltip>\n              </Link>\n            ) : null}\n          </div>\n        );\n      },\n      width: \"10%\",\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n    this.service = new AssembliesListService();\n  }\n\n  removeAssemblyById = (id) => {\n    try {\n      this.service.removeById(id);\n      this.setState({\n        assemblies: this.state.assemblies.filter((assemblyItem) => assemblyItem.id !== id),\n      });\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot remove assemblies\");\n    }\n  };\n\n  getAssemblyPage = async (page, pageSize, name) => {\n    this.setState({ loading: true });\n    const fixedName = name === undefined ? name || this.state.name || \"\" : name;\n    try {\n      const { allSize, list } = await this.service.getPage(page, pageSize, fixedName);\n      this.setState({\n        assemblies: list,\n        loading: false,\n        name: fixedName,\n        pagination: {\n          ...this.state.pagination,\n          total: allSize,\n          current: page,\n          pageSize: pageSize,\n        },\n      });\n    } catch (e) {\n      console.error(e);\n      this.props.addNotification(\"error\", \"Cannot get assembly page\");\n    }\n  };\n\n  componentDidMount() {\n    this.getAssemblyPage(this.state.pagination.current, this.state.pagination.pageSize);\n\n    const isNeedUpdate = () => {\n      return this.state.assemblies.filter(\n        (assemblies) => assemblies.status === \"waiting\" || assemblies.status === \"inprogress\"\n      ).length;\n    };\n\n    this.interval = setInterval(() => {\n      if (isNeedUpdate()) {\n        this.getAssemblyPage(this.state.pagination.current, this.state.pagination.pageSize);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleTableChange = (pagination) => {\n    this.getAssemblyPage(pagination.current, pagination.pageSize);\n  };\n\n  onSearch = (value) => {\n    const { pagination } = this.state;\n    this.getAssemblyPage(1, pagination.pageSize, value);\n  };\n\n  render() {\n    return (\n      <div style={{ overflow: \"hidden\" }}>\n        <div className=\"d-flex flex-column\">\n          <Table\n            size=\"small\"\n            columns={this.columns}\n            rowKey={(row) => row.id}\n            dataSource={this.state.assemblies}\n            pagination={this.state.pagination}\n            loading={this.state.loading}\n            onChange={this.handleTableChange}\n            scroll={{ x: true, y: \"calc(100vh - 160px)\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ ...state.files, ...state.plugins }),\n  (dispatch) => ({\n    logout: () => dispatch(login.actions.logout()),\n    addNotification: (type, text) => dispatch(notification.addNotification(type, text)),\n  })\n)(AssembliesListComponent);\n"]},"metadata":{},"sourceType":"module"}