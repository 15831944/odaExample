{"ast":null,"code":"var _jsxFileName = \"/Users/yutianjian/test/oda/src/containers/RegisterPage.js\";\n///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../redux/registration\";\nimport Header from \"../components/Header\";\nimport clientFactory from \"./../ClientFactory\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmail = email => {\n  return email.match( // eslint-disable-next-line\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        email: {\n          value: \"\",\n          isError: false\n        },\n        username: {\n          value: \"\",\n          isError: false\n        },\n        password: {\n          value: \"\",\n          isError: false\n        }\n      },\n      submitted: false,\n      error: \"\",\n      isLoading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async registeredNewUser() {\n    this.setState({\n      isLoading: true\n    });\n    const {\n      user\n    } = this.state;\n    const userModel = {\n      email: user.email.value,\n      username: user.username.value,\n      password: user.password.value\n    };\n    const url = `${clientFactory.getConfig().registration_host}/register`;\n    const request = {\n      method: \"POST\",\n      body: JSON.stringify(userModel),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await fetch(url, request);\n      const answer = await response.json();\n\n      if (response.ok) {\n        this.setState({\n          submitted: true\n        });\n      } else if (answer.isOk === false && answer.description) {\n        const userWithError = { ...user\n        };\n        userWithError.email.isError = true;\n        this.setState({\n          user: userWithError,\n          error: answer.description\n        });\n      } else {\n        this.setState({\n          error: \"Registration server unavailable, please try again later\"\n        });\n      }\n    } catch (err) {\n      this.setState({\n        error: \"Registration server unavailable, please try again later\"\n      });\n    } finally {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const {\n      user\n    } = this.state;\n    const newUser = { ...user\n    };\n\n    if (name !== \"email\") {\n      newUser[name] = {\n        value: value,\n        isError: !value\n      };\n    } else {\n      newUser[name] = {\n        value: value,\n        isError: !validateEmail(value)\n      };\n      this.setState({\n        error: !validateEmail(value) ? \"Invalid email format\" : \"\"\n      });\n    }\n\n    this.setState({\n      user: newUser\n    });\n  }\n\n  async handleSubmit() {\n    const {\n      user\n    } = this.state;\n\n    if (!user.email.isError && !user.username.isError && !user.password.isError) {\n      await this.registeredNewUser();\n    }\n  }\n\n  checkIsInvalid() {\n    const {\n      user\n    } = this.state;\n    return !(!user.email.isError && !user.username.isError && !user.password.isError && user.email.value && user.username.value && user.password.value);\n  }\n\n  componentDidMount() {\n    this.props.clearError();\n  }\n\n  render() {\n    //const { registering } = this.props;\n    const {\n      user,\n      submitted,\n      error,\n      isLoading\n    } = this.state;\n\n    if (!this.props.emailVerify && submitted) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oda-content container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xs-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4 auth-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-left\",\n              style: {\n                padding: \"20px\",\n                color: \"#18208a\"\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              layout: \"vertical\",\n              onFinish: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                required: true,\n                label: \"Email\",\n                validateStatus: user.email.isError || error ? \"error\" : \"success\",\n                help: error,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Input you email\",\n                  name: \"email\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                required: true,\n                label: \"Name\",\n                validateStatus: user.username.isError ? \"error\" : \"success\",\n                help: \"\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Input you name\",\n                  name: \"username\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                required: true,\n                label: \"Password\",\n                validateStatus: user.password.isError ? \"error\" : \"success\",\n                help: \"\",\n                children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                  name: \"password\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  loading: isLoading,\n                  disabled: this.checkIsInvalid(),\n                  htmlType: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  htmlType: \"button\",\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/login\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xs-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4 text-center\",\n            children: this.props.emailVerify && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green text-center\",\n              children: [\" \", \"User has been registered. To verify the data provided we have sent you a confirmation email. Please read your email, and click on the web link it contains. A registered user without verification will have access for several days.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => state.registration, dispatch => ({\n  register: user => dispatch(actions.register(user)),\n  clearError: () => dispatch(actions.clearError())\n}))(RegisterPage);","map":{"version":3,"sources":["/Users/yutianjian/test/oda/src/containers/RegisterPage.js"],"names":["React","Link","Redirect","connect","actions","Header","clientFactory","Form","Input","Button","validateEmail","email","match","RegisterPage","Component","constructor","props","state","user","value","isError","username","password","submitted","error","isLoading","handleChange","bind","handleSubmit","registeredNewUser","setState","userModel","url","getConfig","registration_host","request","method","body","JSON","stringify","headers","response","fetch","answer","json","ok","isOk","description","userWithError","err","event","name","target","newUser","checkIsInvalid","componentDidMount","clearError","render","emailVerify","padding","color","marginLeft","registration","dispatch","register"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n// Copyright (C) 2002-2021, Open Design Alliance (the \"Alliance\").\n// All rights reserved.\n//\n// This software and its documentation and related materials are owned by\n// the Alliance. The software may only be incorporated into application\n// programs owned by members of the Alliance, subject to a signed\n// Membership Agreement and Supplemental Software License Agreement with the\n// Alliance. The structure and organization of this software are the valuable\n// trade secrets of the Alliance and its suppliers. The software is also\n// protected by copyright law and international treaty provisions. Application\n// programs incorporating this software must include the following statement\n// with their copyright notices:\n//\n//   This application incorporates Open Design Alliance software pursuant to a\n//   license agreement with Open Design Alliance.\n//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.\n//   All rights reserved.\n//\n// By use of this software, its documentation or related materials, you\n// acknowledge and accept the above terms.\n///////////////////////////////////////////////////////////////////////////////\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../redux/registration\";\nimport Header from \"../components/Header\";\n\nimport clientFactory from \"./../ClientFactory\";\n\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button } from \"antd\";\n\nconst validateEmail = (email) => {\n  return email.match(\n    // eslint-disable-next-line\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n};\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: { value: \"\", isError: false },\n        username: { value: \"\", isError: false },\n        password: { value: \"\", isError: false },\n      },\n      submitted: false,\n      error: \"\",\n      isLoading: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async registeredNewUser() {\n    this.setState({ isLoading: true });\n\n    const { user } = this.state;\n\n    const userModel = {\n      email: user.email.value,\n      username: user.username.value,\n      password: user.password.value,\n    };\n\n    const url = `${clientFactory.getConfig().registration_host}/register`;\n    const request = {\n      method: \"POST\",\n      body: JSON.stringify(userModel),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const response = await fetch(url, request);\n      const answer = await response.json();\n\n      if (response.ok) {\n        this.setState({ submitted: true });\n      } else if (answer.isOk === false && answer.description) {\n        const userWithError = { ...user };\n        userWithError.email.isError = true;\n        this.setState({ user: userWithError, error: answer.description });\n      } else {\n        this.setState({\n          error: \"Registration server unavailable, please try again later\",\n        });\n      }\n    } catch (err) {\n      this.setState({\n        error: \"Registration server unavailable, please try again later\",\n      });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    const { user } = this.state;\n    const newUser = { ...user };\n\n    if (name !== \"email\") {\n      newUser[name] = { value: value, isError: !value };\n    } else {\n      newUser[name] = { value: value, isError: !validateEmail(value) };\n      this.setState({\n        error: !validateEmail(value) ? \"Invalid email format\" : \"\",\n      });\n    }\n    this.setState({ user: newUser });\n  }\n\n  async handleSubmit() {\n    const { user } = this.state;\n\n    if (!user.email.isError && !user.username.isError && !user.password.isError) {\n      await this.registeredNewUser();\n    }\n  }\n\n  checkIsInvalid() {\n    const { user } = this.state;\n\n    return !(\n      !user.email.isError &&\n      !user.username.isError &&\n      !user.password.isError &&\n      user.email.value &&\n      user.username.value &&\n      user.password.value\n    );\n  }\n\n  componentDidMount() {\n    this.props.clearError();\n  }\n\n  render() {\n    //const { registering } = this.props;\n    const { user, submitted, error, isLoading } = this.state;\n\n    if (!this.props.emailVerify && submitted) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <Header></Header>\n        <div className=\"oda-content container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4 auth-box\">\n              <h2 className=\"text-left\" style={{ padding: \"20px\", color: \"#18208a\" }}>\n                Register\n              </h2>\n              <Form layout=\"vertical\" onFinish={this.handleSubmit}>\n                <Form.Item\n                  required\n                  label=\"Email\"\n                  validateStatus={user.email.isError || error ? \"error\" : \"success\"}\n                  help={error}\n                >\n                  <Input placeholder=\"Input you email\" name=\"email\" onChange={this.handleChange} />\n                </Form.Item>\n\n                <Form.Item required label=\"Name\" validateStatus={user.username.isError ? \"error\" : \"success\"} help=\"\">\n                  <Input placeholder=\"Input you name\" name=\"username\" onChange={this.handleChange} />\n                </Form.Item>\n\n                <Form.Item\n                  required\n                  label=\"Password\"\n                  validateStatus={user.password.isError ? \"error\" : \"success\"}\n                  help=\"\"\n                >\n                  <Input.Password name=\"password\" onChange={this.handleChange} />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" loading={isLoading} disabled={this.checkIsInvalid()} htmlType=\"submit\">\n                    Register\n                  </Button>\n                  <Button htmlType=\"button\" style={{ marginLeft: \"10px\" }}>\n                    <Link to=\"/login\">Cancel</Link>\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4 text-center\">\n              {this.props.emailVerify && (\n                <span className=\"text-green text-center\">\n                  {\" \"}\n                  User has been registered. To verify the data provided we have sent you a confirmation email. Please\n                  read your email, and click on the web link it contains. A registered user without verification will\n                  have access for several days.\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => state.registration,\n  (dispatch) => ({\n    register: (user) => dispatch(actions.register(user)),\n    clearError: () => dispatch(actions.clearError()),\n  })\n)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}