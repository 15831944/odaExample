///////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2002-2021, Open Design Alliance (the "Alliance").
// All rights reserved.
//
// This software and its documentation and related materials are owned by
// the Alliance. The software may only be incorporated into application
// programs owned by members of the Alliance, subject to a signed
// Membership Agreement and Supplemental Software License Agreement with the
// Alliance. The structure and organization of this software are the valuable
// trade secrets of the Alliance and its suppliers. The software is also
// protected by copyright law and international treaty provisions. Application
// programs incorporating this software must include the following statement
// with their copyright notices:
//
//   This application incorporates Open Design Alliance software pursuant to a
//   license agreement with Open Design Alliance.
//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.
//   All rights reserved.
//
// By use of this software, its documentation or related materials, you
// acknowledge and accept the above terms.

import { User } from "./User";

///////////////////////////////////////////////////////////////////////////////

/**
 * @class
 */
export class Job {
  constructor(impl, app) {
    this._impl = impl;
    this._app = app;
  }

  /**
   * Owner
   * @type {User}
   */
  get user() {
    return new User(this.impl.user, this._app)
  }

  /**
   * Job id
   * @type {string}
   */
  get id() { return this._impl.id }

  /**
   * Job done status
   * @type {boolean}
   */
  get done() { return this._impl.done }

  /**
   * Job state
   * @type {string}
   */
  get state() { return this._impl.state }

  /**
   * Job fileId
   * @type {string}
   */
  get fileId() { return this._impl.fileId }

  /**
   * Job assemblyId
   * @type {string}
   */
   get assemblyId() { return this._impl.assemblyId }
   
  /**
   * Job created at
   * @type {string}
   */
  get createdAt() { return this._impl.createdAt }

  /**
   * Job started at
   * @type {string}
   */
  get startedAt() { return this._impl.startedAt }

  /**
   * Job last update
   * @type {string}
   */
  get lastUpdate() { return this._impl.lastUpdate }

  /**
   * Update current job status
   * @async 
   */
  refresh() {
    return this._impl.refresh()
  }

  /**
   * Update some parameters for specific job (available only for admins)
   * @async 
   */
  editJob(data) {
    return this._impl.editJob(data)
  }

  /**
   * Delete job
   * @async 
   */
  delete() {
    return this._impl.delete()
  }
}