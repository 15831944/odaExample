///////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2002-2021, Open Design Alliance (the "Alliance").
// All rights reserved.
//
// This software and its documentation and related materials are owned by
// the Alliance. The software may only be incorporated into application
// programs owned by members of the Alliance, subject to a signed
// Membership Agreement and Supplemental Software License Agreement with the
// Alliance. The structure and organization of this software are the valuable
// trade secrets of the Alliance and its suppliers. The software is also
// protected by copyright law and international treaty provisions. Application
// programs incorporating this software must include the following statement
// with their copyright notices:
//
//   This application incorporates Open Design Alliance software pursuant to a
//   license agreement with Open Design Alliance.
//   Open Design Alliance Copyright (C) 2002-2021 by Open Design Alliance.
//   All rights reserved.
//
// By use of this software, its documentation or related materials, you
// acknowledge and accept the above terms.
///////////////////////////////////////////////////////////////////////////////

import { ProjectImpl } from "./impl/ProjectImpl";
import { Project } from "./Project";

/**
 * @class
 */
export class User {
  constructor(impl, plugin) {
    this._impl = impl;
    this._plugin = plugin;
  }


  /**
   * Raw object of user
   * @type {Object}
   */
  get data() {
    return this._impl.data;
  }

  /**
   * Get avatar image url
   * @returns {string}
   *//**
* Set avatar image url, and send save request
* @param {string} val
* @returns {this}
*/
  get avatarImage() { return this._impl.data.avatarImage }
  set avatarImage(v) { this._impl.data.avatarImage = v; this._impl.save() }

  /**
   * Is user possible to create a project
   * @type {Boolean}
   */
  get canCreateProject() { return this._impl.data.canCreateProject }

  /**
   * Time when user was created
   * @type {string}
   */
  get createAt() { return this._impl.data.createAt }

  /**
   * Custom fields object, to save custom data
   * @type {*}
   */
  get customFields() { return this._impl.data.customFields }

  /**
   * User email
   * @type {string} 
   */
  get email() { return this._impl.data.email }

  /**
   * Get first name of user
   * @returns {string}
   *//**
* Set first name of user, and send save request
* @param {string} val
* @returns {this}
*/
  get firstName() { return this._impl.data.firstName }
  set firstName(v) { this._impl.data.firstName = v; this._impl.save() }

  /**
   * Date of last modify user data
   * @type {string}
   */
  get lastModified() { return this._impl.data.lastModified }

  /**
 * Get last name of user
 * @returns {string}
 *//**
   * Set last name of user, and send save request
   * @param {string} val
   * @returns {this}
   */
  get lastName() { return this._impl.data.lastName }
  set lastName(v) { this._impl.data.lastName = v; this._impl.save() }


  /**
   * Date of last sign in
   * @type {string}
   */
  get lastSignIn() { return this._impl.data.lastSignIn }

  /**
   * Projects limit to create
   * @type {Number}
   */
  get projectsLimit() { return this._impl.data.projectsLimit }


  /**
* Get user name of user
* @returns {string}
*//**
   * Set user name of user, and send save request
   * @param {string} val
   * @returns {this}
   */
  get userName() { return this._impl.data.userName }
  set userName(v) { this._impl.data.userName = v; this._impl.save() }


/**
 * Returns result with array of available users
 * @returns {Object} 
 */
  getUsers() {
    return this._impl.getUsers()
  }
}