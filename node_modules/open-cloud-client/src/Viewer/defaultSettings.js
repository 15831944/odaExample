export function setupViewerSettings(lib) {
  const viewer = lib.getViewer();
  const device = viewer.getActiveDevice();
  const view   = device.getActiveView();

  { // setup light
    view.enableDefaultLighting(true, lib.DefaultLightingType.kTwoLights)
    view.setDefaultLightingIntensity(1.25)
  }

  // setup visual style
  const visualStyleId = viewer.createVisualStyle("OpenCloud")
  {
    const visualStylePtr = visualStyleId.openObject()
    const colorDef       = new lib.OdTvColorDef(66, 66, 66)
    const shadedVsId     = viewer.findVisualStyle("Realistic")

    visualStylePtr.copyFrom(shadedVsId)
    visualStylePtr.setOptionInt32(lib.VisualStyleOptions.kFaceModifiers, 0, lib.VisualStyleOperations.kSet)
    //visualStylePtr.setOptionInt32(lib.VisualStyleOptions.kEdgeModel, 1, lib.VisualStyleOperations.kSet);
    visualStylePtr.setOptionInt32(lib.VisualStyleOptions.kEdgeModel, 2, lib.VisualStyleOperations.kSet)
    visualStylePtr.setOptionDouble(lib.VisualStyleOptions.kEdgeCreaseAngle, 60, lib.VisualStyleOperations.kSet)
    visualStylePtr.setOptionInt32(lib.VisualStyleOptions.kEdgeStyles, 0, lib.VisualStyleOperations.kSet)
    visualStylePtr.setOptionInt32(lib.VisualStyleOptions.kEdgeModifiers, 8, lib.VisualStyleOperations.kSet)
    visualStylePtr.setOptionColor(lib.VisualStyleOptions.kEdgeColorValue, colorDef, lib.VisualStyleOperations.kSet)

    visualStylePtr.delete()
  }

  view.visualStyle = visualStyleId
  view.delete()
  device.delete()
}