/////////////////////////////////////////////////////////////////////////////// 
// Copyright (C) 2002-2022, Open Design Alliance (the "Alliance"). 
// All rights reserved. 
// 
// This software and its documentation and related materials are owned by 
// the Alliance. The software may only be incorporated into application 
// programs owned by members of the Alliance, subject to a signed 
// Membership Agreement and Supplemental Software License Agreement with the
// Alliance. The structure and organization of this software are the valuable  
// trade secrets of the Alliance and its suppliers. The software is also 
// protected by copyright law and international treaty provisions. Application  
// programs incorporating this software must include the following statement 
// with their copyright notices:
//   
//   This application incorporates Open Design Alliance software pursuant to a license
//   agreement with Open Design Alliance.
//   Open Design Alliance Copyright (C) 2002-2022 by Open Design Alliance. 
//   All rights reserved.
//
// By use of this software, its documentation or related materials, you 
// acknowledge and accept the above terms.
///////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////////
// This code auto-generated by ODA internal tool OdSwigProductsSynchronization
// Tool location: https://svn.opendesign.com/svn/internal/trunk/swig/tools/SwigTools/
///////////////////////////////////////////////////////////////////////////////


/***
Rule for type: OdDbDatabase;
For Case VarDefs: Drawing\Include\SysVarDefs.h;
Case locatated in file: Drawing\Include\DbDatabase.h;
Case locatated in line: 1392;
***/
%extend OdDbDatabase
{
  public:
    SVARS_FUNC_MODIFIER ODTORIENT getANGBASE() const
    {
      return self->getANGBASE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getANGDIR() const
    {
      return self->getANGDIR();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getORTHOMODE() const
    {
      return self->getORTHOMODE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getREGENMODE() const
    {
      return self->getREGENMODE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getFILLMODE() const
    {
      return self->getFILLMODE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getQTEXTMODE() const
    {
      return self->getQTEXTMODE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getMIRRTEXT() const
    {
      return self->getMIRRTEXT();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS4 getLTSCALE() const
    {
      return self->getLTSCALE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getATTMODE() const
    {
      return self->getATTMODE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getTRACEWID() const
    {
      return self->getTRACEWID();
    }
    SVARS_FUNC_MODIFIER ODTLAYERID getCLAYER() const
    {
      return self->getCLAYER();
    }
    SVARS_FUNC_MODIFIER ODTLINETYPEID getCELTYPE() const
    {
      return self->getCELTYPE();
    }
    SVARS_FUNC_MODIFIER OdCmColor getCECOLOR() const
    {
      return self->getCECOLOR();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS4 getCELTSCALE() const
    {
      return self->getCELTSCALE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getCHAMFERA() const
    {
      return self->getCHAMFERA();
    }
    SVARS_FUNC_MODIFIER ODTDIST getCHAMFERB() const
    {
      return self->getCHAMFERB();
    }
    SVARS_FUNC_MODIFIER ODTDIST getCHAMFERC() const
    {
      return self->getCHAMFERC();
    }
    SVARS_FUNC_MODIFIER ODTORIENT getCHAMFERD() const
    {
      return self->getCHAMFERD();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getDISPSILH() const
    {
      return self->getDISPSILH();
    }
    SVARS_FUNC_MODIFIER ODTDIMSTYLEID getDIMSTYLE() const
    {
      return self->getDIMSTYLE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getDIMASO() const
    {
      return self->getDIMASO();
    }
    SVARS_FUNC_MODIFIER bool getDIMSHO() const
    {
      return self->getDIMSHO();
    }
    SVARS_FUNC_MODIFIER OdInt16 getLUNITS() const
    {
      return self->getLUNITS();
    }
    SVARS_FUNC_MODIFIER OdInt16 getLUPREC() const
    {
      return self->getLUPREC();
    }
    SVARS_FUNC_MODIFIER ODTDIST getSKETCHINC() const
    {
      return self->getSKETCHINC();
    }
    SVARS_FUNC_MODIFIER ODTDIST getFILLETRAD() const
    {
      return self->getFILLETRAD();
    }
    SVARS_FUNC_MODIFIER OdInt16 getAUNITS() const
    {
      return self->getAUNITS();
    }
    SVARS_FUNC_MODIFIER OdInt16 getAUPREC() const
    {
      return self->getAUPREC();
    }
    SVARS_FUNC_MODIFIER ODTDIST getTHICKNESS() const
    {
      return self->getTHICKNESS();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getSKPOLY() const
    {
      return self->getSKPOLY();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPDMODE() const
    {
      return self->getPDMODE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getPDSIZE() const
    {
      return self->getPDSIZE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getPLINEWID() const
    {
      return self->getPLINEWID();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getSPLFRAME() const
    {
      return self->getSPLFRAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSPLINETYPE() const
    {
      return self->getSPLINETYPE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSPLINESEGS() const
    {
      return self->getSPLINESEGS();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSURFTAB1() const
    {
      return self->getSURFTAB1();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSURFTAB2() const
    {
      return self->getSURFTAB2();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSURFTYPE() const
    {
      return self->getSURFTYPE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSURFU() const
    {
      return self->getSURFU();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSURFV() const
    {
      return self->getSURFV();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUSERI1() const
    {
      return self->getUSERI1();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUSERI2() const
    {
      return self->getUSERI2();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUSERI3() const
    {
      return self->getUSERI3();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUSERI4() const
    {
      return self->getUSERI4();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUSERI5() const
    {
      return self->getUSERI5();
    }
    SVARS_FUNC_MODIFIER ODTDIST getUSERR1() const
    {
      return self->getUSERR1();
    }
    SVARS_FUNC_MODIFIER ODTDIST getUSERR2() const
    {
      return self->getUSERR2();
    }
    SVARS_FUNC_MODIFIER ODTDIST getUSERR3() const
    {
      return self->getUSERR3();
    }
    SVARS_FUNC_MODIFIER ODTDIST getUSERR4() const
    {
      return self->getUSERR4();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPDFUNDERLAYSHADEDMODE() const
    {
      return self->getPDFUNDERLAYSHADEDMODE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getUSERR5() const
    {
      return self->getUSERR5();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getWORLDVIEW() const
    {
      return self->getWORLDVIEW();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSHADEDGE() const
    {
      return self->getSHADEDGE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSHADEDIF() const
    {
      return self->getSHADEDIF();
    }
    SVARS_FUNC_MODIFIER OdInt16 getMAXACTVP() const
    {
      return self->getMAXACTVP();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUNITMODE() const
    {
      return self->getUNITMODE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getVISRETAIN() const
    {
      return self->getVISRETAIN();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPLINEGEN() const
    {
      return self->getPLINEGEN();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPSLTSCALE() const
    {
      return self->getPSLTSCALE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getTREEDEPTH() const
    {
      return self->getTREEDEPTH();
    }
    SVARS_FUNC_MODIFIER ODTMLSTYLEID getCMLSTYLE() const
    {
      return self->getCMLSTYLE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getCMLJUST() const
    {
      return self->getCMLJUST();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS4 getCMLSCALE() const
    {
      return self->getCMLSCALE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPROXYGRAPHICS() const
    {
      return self->getPROXYGRAPHICS();
    }
    SVARS_FUNC_MODIFIER ODTDB_MEASUREMENTVALUE getMEASUREMENT() const
    {
      return self->getMEASUREMENT();
    }
    SVARS_FUNC_MODIFIER ODTDB_LINEWEIGHT getCELWEIGHT() const
    {
      return self->getCELWEIGHT();
    }
    SVARS_FUNC_MODIFIER bool getLWDISPLAY() const
    {
      return self->getLWDISPLAY();
    }
    SVARS_FUNC_MODIFIER ODTDB_UNITSVALUE getINSUNITS() const
    {
      return self->getINSUNITS();
    }
    SVARS_FUNC_MODIFIER OdUInt16 getTSTACKALIGN() const
    {
      return self->getTSTACKALIGN();
    }
    SVARS_FUNC_MODIFIER OdUInt16 getTSTACKSIZE() const
    {
      return self->getTSTACKSIZE();
    }
    SVARS_FUNC_MODIFIER OdString getHYPERLINKBASE() const
    {
      return self->getHYPERLINKBASE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getXEDIT() const
    {
      return self->getXEDIT();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getEXTNAMES() const
    {
      return self->getEXTNAMES();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS8 getPSVPSCALE() const
    {
      return self->getPSVPSCALE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getOLESTARTUP() const
    {
      return self->getOLESTARTUP();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPELLIPSE() const
    {
      return self->getPELLIPSE();
    }
    SVARS_FUNC_MODIFIER OdUInt16 getISOLINES() const
    {
      return self->getISOLINES();
    }
    SVARS_FUNC_MODIFIER OdUInt16 getTEXTQLTY() const
    {
      return self->getTEXTQLTY();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS4 getFACETRES() const
    {
      return self->getFACETRES();
    }
    SVARS_FUNC_MODIFIER ODTUCSID getPUCSBASE() const
    {
      return self->getPUCSBASE();
    }
    SVARS_FUNC_MODIFIER ODTUCSID getUCSBASE() const
    {
      return self->getUCSBASE();
    }
    SVARS_FUNC_MODIFIER OdInt8 getSOLIDHIST() const
    {
      return self->getSOLIDHIST();
    }
    SVARS_FUNC_MODIFIER OdInt8 getSHOWHIST() const
    {
      return self->getSHOWHIST();
    }
    SVARS_FUNC_MODIFIER ODTDB_LOFTPARAMTYPE getLOFTPARAM() const
    {
      return self->getLOFTPARAM();
    }
    SVARS_FUNC_MODIFIER ODTDB_LOFTNORMALSTYPE getLOFTNORMALS() const
    {
      return self->getLOFTNORMALS();
    }
    SVARS_FUNC_MODIFIER ODTORIENT getLOFTANG1() const
    {
      return self->getLOFTANG1();
    }
    SVARS_FUNC_MODIFIER ODTORIENT getLOFTANG2() const
    {
      return self->getLOFTANG2();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS8 getLOFTMAG1() const
    {
      return self->getLOFTMAG1();
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS8 getLOFTMAG2() const
    {
      return self->getLOFTMAG2();
    }
    SVARS_FUNC_MODIFIER double getLATITUDE() const
    {
      return self->getLATITUDE();
    }
    SVARS_FUNC_MODIFIER double getLONGITUDE() const
    {
      return self->getLONGITUDE();
    }
    SVARS_FUNC_MODIFIER ODTORIENT getNORTHDIRECTION() const
    {
      return self->getNORTHDIRECTION();
    }
    SVARS_FUNC_MODIFIER ODTDB_TIMEZONE getTIMEZONE() const
    {
      return self->getTIMEZONE();
    }
    SVARS_FUNC_MODIFIER OdInt8 getLIGHTGLYPHDISPLAY() const
    {
      return self->getLIGHTGLYPHDISPLAY();
    }
    SVARS_FUNC_MODIFIER OdInt8 getTILEMODELIGHTSYNCH() const
    {
      return self->getTILEMODELIGHTSYNCH();
    }
    SVARS_FUNC_MODIFIER OdCmColor getINTERFERECOLOR() const
    {
      return self->getINTERFERECOLOR();
    }
    SVARS_FUNC_MODIFIER ODVISTYLEID getINTERFEREOBJVS() const
    {
      return self->getINTERFEREOBJVS();
    }
    SVARS_FUNC_MODIFIER ODVISTYLEID getINTERFEREVPVS() const
    {
      return self->getINTERFEREVPVS();
    }
    SVARS_FUNC_MODIFIER ODVISTYLEID getDRAGVS() const
    {
      return self->getDRAGVS();
    }
    SVARS_FUNC_MODIFIER ODTDB_SHADOWFLAGS getCSHADOW() const
    {
      return self->getCSHADOW();
    }
    SVARS_FUNC_MODIFIER ODTDIST getSHADOWPLANELOCATION() const
    {
      return self->getSHADOWPLANELOCATION();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getCAMERADISPLAY() const
    {
      return self->getCAMERADISPLAY();
    }
    SVARS_FUNC_MODIFIER ODTDIST getLENSLENGTH() const
    {
      return self->getLENSLENGTH();
    }
    SVARS_FUNC_MODIFIER ODTDIST getCAMERAHEIGHT() const
    {
      return self->getCAMERAHEIGHT();
    }
    SVARS_FUNC_MODIFIER ODTDIST getSTEPSPERSEC() const
    {
      return self->getSTEPSPERSEC();
    }
    SVARS_FUNC_MODIFIER ODTDIST getSTEPSIZE() const
    {
      return self->getSTEPSIZE();
    }
    SVARS_FUNC_MODIFIER ODTDIST get3DDWFPREC() const
    {
      return self->get3DDWFPREC();
    }
    SVARS_FUNC_MODIFIER ODTMATERIALID getCMATERIAL() const
    {
      return self->getCMATERIAL();
    }
    SVARS_FUNC_MODIFIER bool getREALWORLDSCALE() const
    {
      return self->getREALWORLDSCALE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getDYNCONSTRAINTDISPLAY() const
    {
      return self->getDYNCONSTRAINTDISPLAY();
    }
    SVARS_FUNC_MODIFIER OdDbDate getTDUCREATE() const
    {
      return self->getTDUCREATE();
    }
    SVARS_FUNC_MODIFIER OdDbDate getTDUUPDATE() const
    {
      return self->getTDUUPDATE();
    }
    SVARS_FUNC_MODIFIER OdDbDate getTDINDWG() const
    {
      return self->getTDINDWG();
    }
    SVARS_FUNC_MODIFIER OdDbDate getTDUSRTIMER() const
    {
      return self->getTDUSRTIMER();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPSTYLEMODE() const
    {
      return self->getPSTYLEMODE();
    }
    SVARS_FUNC_MODIFIER OdCodePageId getDWGCODEPAGE() const
    {
      return self->getDWGCODEPAGE();
    }
    SVARS_FUNC_MODIFIER OdInt64 getREQUIREDVERSIONS() const
    {
      return self->getREQUIREDVERSIONS();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORG() const
    {
      return self->getUCSORG();
    }
    SVARS_FUNC_MODIFIER OdGeVector3d getUCSXDIR() const
    {
      return self->getUCSXDIR();
    }
    SVARS_FUNC_MODIFIER OdGeVector3d getUCSYDIR() const
    {
      return self->getUCSYDIR();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORG() const
    {
      return self->getPUCSORG();
    }
    SVARS_FUNC_MODIFIER OdGeVector3d getPUCSXDIR() const
    {
      return self->getPUCSXDIR();
    }
    SVARS_FUNC_MODIFIER OdGeVector3d getPUCSYDIR() const
    {
      return self->getPUCSYDIR();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getINSBASE() const
    {
      return self->getINSBASE();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getEXTMIN() const
    {
      return self->getEXTMIN();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getEXTMAX() const
    {
      return self->getEXTMAX();
    }
    SVARS_FUNC_MODIFIER OdGePoint2d getLIMMIN() const
    {
      return self->getLIMMIN();
    }
    SVARS_FUNC_MODIFIER OdGePoint2d getLIMMAX() const
    {
      return self->getLIMMAX();
    }
    SVARS_FUNC_MODIFIER OdString getMENUNAME() const
    {
      return self->getMENUNAME();
    }
    SVARS_FUNC_MODIFIER ODTDIST getELEVATION() const
    {
      return self->getELEVATION();
    }
    SVARS_FUNC_MODIFIER ODTDIST getPELEVATION() const
    {
      return self->getPELEVATION();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getLIMCHECK() const
    {
      return self->getLIMCHECK();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getUSRTIMER() const
    {
      return self->getUSRTIMER();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPINSBASE() const
    {
      return self->getPINSBASE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPLIMCHECK() const
    {
      return self->getPLIMCHECK();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPEXTMIN() const
    {
      return self->getPEXTMIN();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPEXTMAX() const
    {
      return self->getPEXTMAX();
    }
    SVARS_FUNC_MODIFIER OdGePoint2d getPLIMMIN() const
    {
      return self->getPLIMMIN();
    }
    SVARS_FUNC_MODIFIER OdGePoint2d getPLIMMAX() const
    {
      return self->getPLIMMAX();
    }
    SVARS_FUNC_MODIFIER ODDBHARDPOINTERID getUCSNAME() const
    {
      return self->getUCSNAME();
    }
    SVARS_FUNC_MODIFIER ODDBHARDPOINTERID getPUCSNAME() const
    {
      return self->getPUCSNAME();
    }
    SVARS_FUNC_MODIFIER ODTDB_ENDCAPS getENDCAPS() const
    {
      return self->getENDCAPS();
    }
    SVARS_FUNC_MODIFIER ODTDB_JOINSTYLE getJOINSTYLE() const
    {
      return self->getJOINSTYLE();
    }
    SVARS_FUNC_MODIFIER OdString getSTYLESHEET() const
    {
      return self->getSTYLESHEET();
    }
    SVARS_FUNC_MODIFIER ODTDB_PLOTSTYLENAMETYPE getCEPSNTYPE() const
    {
      return self->getCEPSNTYPE();
    }
    SVARS_FUNC_MODIFIER ODDBHARDPOINTERID getCEPSNID() const
    {
      return self->getCEPSNID();
    }
    SVARS_FUNC_MODIFIER OdString getFINGERPRINTGUID() const
    {
      return self->getFINGERPRINTGUID();
    }
    SVARS_FUNC_MODIFIER OdString getVERSIONGUID() const
    {
      return self->getVERSIONGUID();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPUCSORTHOVIEW() const
    {
      return self->getPUCSORTHOVIEW();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORGTOP() const
    {
      return self->getPUCSORGTOP();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORGBOTTOM() const
    {
      return self->getPUCSORGBOTTOM();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORGLEFT() const
    {
      return self->getPUCSORGLEFT();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORGRIGHT() const
    {
      return self->getPUCSORGRIGHT();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORGFRONT() const
    {
      return self->getPUCSORGFRONT();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getPUCSORGBACK() const
    {
      return self->getPUCSORGBACK();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUCSORTHOVIEW() const
    {
      return self->getUCSORTHOVIEW();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORGTOP() const
    {
      return self->getUCSORGTOP();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORGBOTTOM() const
    {
      return self->getUCSORGBOTTOM();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORGLEFT() const
    {
      return self->getUCSORGLEFT();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORGRIGHT() const
    {
      return self->getUCSORGRIGHT();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORGFRONT() const
    {
      return self->getUCSORGFRONT();
    }
    SVARS_FUNC_MODIFIER OdGePoint3d getUCSORGBACK() const
    {
      return self->getUCSORGBACK();
    }
    SVARS_FUNC_MODIFIER OdInt8 getDGNFRAME() const
    {
      return self->getDGNFRAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getDBCSTATE() const
    {
      return self->getDBCSTATE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getINTERSECTIONCOLOR() const
    {
      return self->getINTERSECTIONCOLOR();
    }
    SVARS_FUNC_MODIFIER bool getINTERSECTIONDISPLAY() const
    {
      return self->getINTERSECTIONDISPLAY();
    }
    SVARS_FUNC_MODIFIER OdInt16 getHALOGAP() const
    {
      return self->getHALOGAP();
    }
    SVARS_FUNC_MODIFIER OdInt16 getOBSCUREDCOLOR() const
    {
      return self->getOBSCUREDCOLOR();
    }
    SVARS_FUNC_MODIFIER OdInt16 getOBSCUREDLTYPE() const
    {
      return self->getOBSCUREDLTYPE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getINDEXCTL() const
    {
      return self->getINDEXCTL();
    }
    SVARS_FUNC_MODIFIER OdString getPROJECTNAME() const
    {
      return self->getPROJECTNAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSORTENTS() const
    {
      return self->getSORTENTS();
    }
    SVARS_FUNC_MODIFIER OdInt16 getDIMASSOC() const
    {
      return self->getDIMASSOC();
    }
    SVARS_FUNC_MODIFIER bool getHIDETEXT() const
    {
      return self->getHIDETEXT();
    }
    SVARS_FUNC_MODIFIER ODTDIST getPSOLWIDTH() const
    {
      return self->getPSOLWIDTH();
    }
    SVARS_FUNC_MODIFIER ODTDIST getPSOLHEIGHT() const
    {
      return self->getPSOLHEIGHT();
    }
    SVARS_FUNC_MODIFIER ODTTABLESTYLEID getCTABLESTYLE() const
    {
      return self->getCTABLESTYLE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getANNOALLVISIBLE() const
    {
      return self->getANNOALLVISIBLE();
    }
    SVARS_FUNC_MODIFIER OdInt8 getANNOTATIVEDWG() const
    {
      return self->getANNOTATIVEDWG();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getMSLTSCALE() const
    {
      return self->getMSLTSCALE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getLAYEREVAL() const
    {
      return self->getLAYEREVAL();
    }
    SVARS_FUNC_MODIFIER OdInt16 getLAYERNOTIFY() const
    {
      return self->getLAYERNOTIFY();
    }
    SVARS_FUNC_MODIFIER OdInt16 getLIGHTINGUNITS() const
    {
      return self->getLIGHTINGUNITS();
    }
    SVARS_FUNC_MODIFIER OdInt16 getLIGHTSINBLOCKS() const
    {
      return self->getLIGHTSINBLOCKS();
    }
    SVARS_FUNC_MODIFIER OdInt8 getDRAWORDERCTL() const
    {
      return self->getDRAWORDERCTL();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getHPINHERIT() const
    {
      return self->getHPINHERIT();
    }
    SVARS_FUNC_MODIFIER OdGePoint2d getHPORIGIN() const
    {
      return self->getHPORIGIN();
    }
    SVARS_FUNC_MODIFIER OdInt16 getFIELDEVAL() const
    {
      return self->getFIELDEVAL();
    }
    SVARS_FUNC_MODIFIER double getMSOLESCALE() const
    {
      return self->getMSOLESCALE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getUPDATETHUMBNAIL() const
    {
      return self->getUPDATETHUMBNAIL();
    }
    SVARS_FUNC_MODIFIER OdInt16 getDXEVAL() const
    {
      return self->getDXEVAL();
    }
    SVARS_FUNC_MODIFIER OdInt16 getGEOLATLONGFORMAT() const
    {
      return self->getGEOLATLONGFORMAT();
    }
    SVARS_FUNC_MODIFIER OdInt16 getGEOMARKERVISIBILITY() const
    {
      return self->getGEOMARKERVISIBILITY();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPREVIEWTYPE() const
    {
      return self->getPREVIEWTYPE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getEXPORTMODELSPACE() const
    {
      return self->getEXPORTMODELSPACE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getEXPORTPAPERSPACE() const
    {
      return self->getEXPORTPAPERSPACE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getEXPORTPAGESETUP() const
    {
      return self->getEXPORTPAGESETUP();
    }
    SVARS_FUNC_MODIFIER OdInt16 getMESHTYPE() const
    {
      return self->getMESHTYPE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getSKYSTATUS() const
    {
      return self->getSKYSTATUS();
    }
    SVARS_FUNC_MODIFIER ODTDIST getVSACURVATUREHIGH() const
    {
      return self->getVSACURVATUREHIGH();
    }
    SVARS_FUNC_MODIFIER ODTDIST getVSACURVATURELOW() const
    {
      return self->getVSACURVATURELOW();
    }
    SVARS_FUNC_MODIFIER OdInt16 getVSACURVATURETYPE() const
    {
      return self->getVSACURVATURETYPE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getVSADRAFTANGLEHIGH() const
    {
      return self->getVSADRAFTANGLEHIGH();
    }
    SVARS_FUNC_MODIFIER ODTDIST getVSADRAFTANGLELOW() const
    {
      return self->getVSADRAFTANGLELOW();
    }
    SVARS_FUNC_MODIFIER OdString getVSAZEBRACOLOR1() const
    {
      return self->getVSAZEBRACOLOR1();
    }
    SVARS_FUNC_MODIFIER OdString getVSAZEBRACOLOR2() const
    {
      return self->getVSAZEBRACOLOR2();
    }
    SVARS_FUNC_MODIFIER OdInt16 getVSAZEBRADIRECTION() const
    {
      return self->getVSAZEBRADIRECTION();
    }
    SVARS_FUNC_MODIFIER OdInt16 getVSAZEBRASIZE() const
    {
      return self->getVSAZEBRASIZE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getVSAZEBRATYPE() const
    {
      return self->getVSAZEBRATYPE();
    }
    SVARS_FUNC_MODIFIER OdString getHPLAYER() const
    {
      return self->getHPLAYER();
    }
    SVARS_FUNC_MODIFIER OdInt16 getMIRRHATCH() const
    {
      return self->getMIRRHATCH();
    }
    SVARS_FUNC_MODIFIER ODTTRANSPARENCYDEF getHPTRANSPARENCY() const
    {
      return self->getHPTRANSPARENCY();
    }
    SVARS_FUNC_MODIFIER ODTCOLORDEF getHPCOLOR() const
    {
      return self->getHPCOLOR();
    }
    SVARS_FUNC_MODIFIER ODTCOLORDEF getHPBACKGROUNDCOLOR() const
    {
      return self->getHPBACKGROUNDCOLOR();
    }
    SVARS_FUNC_MODIFIER OdCmTransparency getCETRANSPARENCY() const
    {
      return self->getCETRANSPARENCY();
    }
    SVARS_FUNC_MODIFIER ODTVIEWDETAILSTYLEID getCVIEWDETAILSTYLE() const
    {
      return self->getCVIEWDETAILSTYLE();
    }
    SVARS_FUNC_MODIFIER ODTVIEWSECTIONSTYLEID getCVIEWSECTIONSTYLE() const
    {
      return self->getCVIEWSECTIONSTYLE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getWIPEOUTFRAME() const
    {
      return self->getWIPEOUTFRAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDCLIPFRAME() const
    {
      return self->getPOINTCLOUDCLIPFRAME();
    }
    SVARS_FUNC_MODIFIER double getMLEADERSCALE() const
    {
      return self->getMLEADERSCALE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getVIEWUPDATEAUTO() const
    {
      return self->getVIEWUPDATEAUTO();
    }
    SVARS_FUNC_MODIFIER double getGEOMARKPOSITIONSIZE() const
    {
      return self->getGEOMARKPOSITIONSIZE();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDPOINTSIZE() const
    {
      return self->getPOINTCLOUDPOINTSIZE();
    }
    SVARS_FUNC_MODIFIER OdString getDIMLAYER() const
    {
      return self->getDIMLAYER();
    }
    SVARS_FUNC_MODIFIER ODTDIST getSECTIONOFFSETINC() const
    {
      return self->getSECTIONOFFSETINC();
    }
    SVARS_FUNC_MODIFIER ODTDIST getSECTIONTHICKNESSINC() const
    {
      return self->getSECTIONTHICKNESSINC();
    }
    SVARS_FUNC_MODIFIER OdInt16 getXREFOVERRIDE() const
    {
      return self->getXREFOVERRIDE();
    }
    SVARS_FUNC_MODIFIER OdString getCENTERCROSSGAP() const
    {
      return self->getCENTERCROSSGAP();
    }
    SVARS_FUNC_MODIFIER OdString getCENTERCROSSSIZE() const
    {
      return self->getCENTERCROSSSIZE();
    }
    SVARS_FUNC_MODIFIER double getCENTEREXE() const
    {
      return self->getCENTEREXE();
    }
    SVARS_FUNC_MODIFIER OdString getCENTERLAYER() const
    {
      return self->getCENTERLAYER();
    }
    SVARS_FUNC_MODIFIER double getCENTERLTSCALE() const
    {
      return self->getCENTERLTSCALE();
    }
    SVARS_FUNC_MODIFIER OdString getCENTERLTYPE() const
    {
      return self->getCENTERLTYPE();
    }
    SVARS_FUNC_MODIFIER OdString getCENTERLTYPEFILE() const
    {
      return self->getCENTERLTYPEFILE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getCENTERMARKEXE() const
    {
      return self->getCENTERMARKEXE();
    }
    SVARS_FUNC_MODIFIER ODANNOSCALE getCANNOSCALE() const
    {
      return self->getCANNOSCALE();
    }
    SVARS_FUNC_MODIFIER ODTMLEADERSTYLEID getCMLEADERSTYLE() const
    {
      return self->getCMLEADERSTYLE();
    }
    SVARS_FUNC_MODIFIER ODTDIST getTEXTSIZE() const
    {
      return self->getTEXTSIZE();
    }
    SVARS_FUNC_MODIFIER ODTTEXTSTYLEID getTEXTSTYLE() const
    {
      return self->getTEXTSTYLE();
    }
    SVARS_FUNC_MODIFIER ODTBOOL getTILEMODE() const
    {
      return self->getTILEMODE();
    }
    SVARS_FUNC_MODIFIER OdInt8 getDWFFRAME() const
    {
      return self->getDWFFRAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getFRAME() const
    {
      return self->getFRAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getPDFFRAME() const
    {
      return self->getPDFFRAME();
    }
    SVARS_FUNC_MODIFIER OdInt16 getXCLIPFRAME() const
    {
      return self->getXCLIPFRAME();
    }
}



/***
Rule for type: OdDbDatabase;
For Case VarDefs: Drawing\Include\SysVarDefs.h;
Case locatated in file: Drawing\Include\DbDatabase.h;
Case locatated in line: 1401;
***/
%extend OdDbDatabase
{
  public:
    SVARS_FUNC_MODIFIER void setANGBASE(ODTORIENT val)
    {
       self->setANGBASE(val);
    }
    SVARS_FUNC_MODIFIER void setANGDIR(ODTBOOL val)
    {
       self->setANGDIR(val);
    }
    SVARS_FUNC_MODIFIER void setORTHOMODE(ODTBOOL val)
    {
       self->setORTHOMODE(val);
    }
    SVARS_FUNC_MODIFIER void setREGENMODE(ODTBOOL val)
    {
       self->setREGENMODE(val);
    }
    SVARS_FUNC_MODIFIER void setFILLMODE(ODTBOOL val)
    {
       self->setFILLMODE(val);
    }
    SVARS_FUNC_MODIFIER void setQTEXTMODE(ODTBOOL val)
    {
       self->setQTEXTMODE(val);
    }
    SVARS_FUNC_MODIFIER void setMIRRTEXT(ODTBOOL val)
    {
       self->setMIRRTEXT(val);
    }
    SVARS_FUNC_MODIFIER void setLTSCALE(ODTUNITLESS4 val)
    {
       self->setLTSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setATTMODE(OdInt16 val)
    {
       self->setATTMODE(val);
    }
    SVARS_FUNC_MODIFIER void setTRACEWID(ODTDIST val)
    {
       self->setTRACEWID(val);
    }
    SVARS_FUNC_MODIFIER void setCLAYER(ODTLAYERID val)
    {
       self->setCLAYER(val);
    }
    SVARS_FUNC_MODIFIER void setCELTYPE(ODTLINETYPEID val)
    {
       self->setCELTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setCECOLOR(OdCmColor val)
    {
       self->setCECOLOR(val);
    }
    SVARS_FUNC_MODIFIER void setCELTSCALE(ODTUNITLESS4 val)
    {
       self->setCELTSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setCHAMFERA(ODTDIST val)
    {
       self->setCHAMFERA(val);
    }
    SVARS_FUNC_MODIFIER void setCHAMFERB(ODTDIST val)
    {
       self->setCHAMFERB(val);
    }
    SVARS_FUNC_MODIFIER void setCHAMFERC(ODTDIST val)
    {
       self->setCHAMFERC(val);
    }
    SVARS_FUNC_MODIFIER void setCHAMFERD(ODTORIENT val)
    {
       self->setCHAMFERD(val);
    }
    SVARS_FUNC_MODIFIER void setDISPSILH(ODTBOOL val)
    {
       self->setDISPSILH(val);
    }
    SVARS_FUNC_MODIFIER void setDIMSTYLE(ODTDIMSTYLEID val)
    {
       self->setDIMSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setDIMASO(ODTBOOL val)
    {
       self->setDIMASO(val);
    }
    SVARS_FUNC_MODIFIER void setDIMSHO(bool val)
    {
       self->setDIMSHO(val);
    }
    SVARS_FUNC_MODIFIER void setLUNITS(OdInt16 val)
    {
       self->setLUNITS(val);
    }
    SVARS_FUNC_MODIFIER void setLUPREC(OdInt16 val)
    {
       self->setLUPREC(val);
    }
    SVARS_FUNC_MODIFIER void setSKETCHINC(ODTDIST val)
    {
       self->setSKETCHINC(val);
    }
    SVARS_FUNC_MODIFIER void setFILLETRAD(ODTDIST val)
    {
       self->setFILLETRAD(val);
    }
    SVARS_FUNC_MODIFIER void setAUNITS(OdInt16 val)
    {
       self->setAUNITS(val);
    }
    SVARS_FUNC_MODIFIER void setAUPREC(OdInt16 val)
    {
       self->setAUPREC(val);
    }
    SVARS_FUNC_MODIFIER void setTHICKNESS(ODTDIST val)
    {
       self->setTHICKNESS(val);
    }
    SVARS_FUNC_MODIFIER void setSKPOLY(ODTBOOL val)
    {
       self->setSKPOLY(val);
    }
    SVARS_FUNC_MODIFIER void setPDMODE(OdInt16 val)
    {
       self->setPDMODE(val);
    }
    SVARS_FUNC_MODIFIER void setPDSIZE(ODTDIST val)
    {
       self->setPDSIZE(val);
    }
    SVARS_FUNC_MODIFIER void setPLINEWID(ODTDIST val)
    {
       self->setPLINEWID(val);
    }
    SVARS_FUNC_MODIFIER void setSPLFRAME(ODTBOOL val)
    {
       self->setSPLFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setSPLINETYPE(OdInt16 val)
    {
       self->setSPLINETYPE(val);
    }
    SVARS_FUNC_MODIFIER void setSPLINESEGS(OdInt16 val)
    {
       self->setSPLINESEGS(val);
    }
    SVARS_FUNC_MODIFIER void setSURFTAB1(OdInt16 val)
    {
       self->setSURFTAB1(val);
    }
    SVARS_FUNC_MODIFIER void setSURFTAB2(OdInt16 val)
    {
       self->setSURFTAB2(val);
    }
    SVARS_FUNC_MODIFIER void setSURFTYPE(OdInt16 val)
    {
       self->setSURFTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setSURFU(OdInt16 val)
    {
       self->setSURFU(val);
    }
    SVARS_FUNC_MODIFIER void setSURFV(OdInt16 val)
    {
       self->setSURFV(val);
    }
    SVARS_FUNC_MODIFIER void setUSERI1(OdInt16 val)
    {
       self->setUSERI1(val);
    }
    SVARS_FUNC_MODIFIER void setUSERI2(OdInt16 val)
    {
       self->setUSERI2(val);
    }
    SVARS_FUNC_MODIFIER void setUSERI3(OdInt16 val)
    {
       self->setUSERI3(val);
    }
    SVARS_FUNC_MODIFIER void setUSERI4(OdInt16 val)
    {
       self->setUSERI4(val);
    }
    SVARS_FUNC_MODIFIER void setUSERI5(OdInt16 val)
    {
       self->setUSERI5(val);
    }
    SVARS_FUNC_MODIFIER void setUSERR1(ODTDIST val)
    {
       self->setUSERR1(val);
    }
    SVARS_FUNC_MODIFIER void setUSERR2(ODTDIST val)
    {
       self->setUSERR2(val);
    }
    SVARS_FUNC_MODIFIER void setUSERR3(ODTDIST val)
    {
       self->setUSERR3(val);
    }
    SVARS_FUNC_MODIFIER void setUSERR4(ODTDIST val)
    {
       self->setUSERR4(val);
    }
    SVARS_FUNC_MODIFIER void setPDFUNDERLAYSHADEDMODE(ODTBOOL val)
    {
       self->setPDFUNDERLAYSHADEDMODE(val);
    }
    SVARS_FUNC_MODIFIER void setUSERR5(ODTDIST val)
    {
       self->setUSERR5(val);
    }
    SVARS_FUNC_MODIFIER void setWORLDVIEW(ODTBOOL val)
    {
       self->setWORLDVIEW(val);
    }
    SVARS_FUNC_MODIFIER void setSHADEDGE(OdInt16 val)
    {
       self->setSHADEDGE(val);
    }
    SVARS_FUNC_MODIFIER void setSHADEDIF(OdInt16 val)
    {
       self->setSHADEDIF(val);
    }
    SVARS_FUNC_MODIFIER void setMAXACTVP(OdInt16 val)
    {
       self->setMAXACTVP(val);
    }
    SVARS_FUNC_MODIFIER void setUNITMODE(OdInt16 val)
    {
       self->setUNITMODE(val);
    }
    SVARS_FUNC_MODIFIER void setVISRETAIN(ODTBOOL val)
    {
       self->setVISRETAIN(val);
    }
    SVARS_FUNC_MODIFIER void setPLINEGEN(ODTBOOL val)
    {
       self->setPLINEGEN(val);
    }
    SVARS_FUNC_MODIFIER void setPSLTSCALE(ODTBOOL val)
    {
       self->setPSLTSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setTREEDEPTH(OdInt16 val)
    {
       self->setTREEDEPTH(val);
    }
    SVARS_FUNC_MODIFIER void setCMLSTYLE(ODTMLSTYLEID val)
    {
       self->setCMLSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setCMLJUST(OdInt16 val)
    {
       self->setCMLJUST(val);
    }
    SVARS_FUNC_MODIFIER void setCMLSCALE(ODTUNITLESS4 val)
    {
       self->setCMLSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setPROXYGRAPHICS(OdInt16 val)
    {
       self->setPROXYGRAPHICS(val);
    }
    SVARS_FUNC_MODIFIER void setMEASUREMENT(ODTDB_MEASUREMENTVALUE val)
    {
       self->setMEASUREMENT(val);
    }
    SVARS_FUNC_MODIFIER void setCELWEIGHT(ODTDB_LINEWEIGHT val)
    {
       self->setCELWEIGHT(val);
    }
    SVARS_FUNC_MODIFIER void setLWDISPLAY(bool val)
    {
       self->setLWDISPLAY(val);
    }
    SVARS_FUNC_MODIFIER void setINSUNITS(ODTDB_UNITSVALUE val)
    {
       self->setINSUNITS(val);
    }
    SVARS_FUNC_MODIFIER void setTSTACKALIGN(OdUInt16 val)
    {
       self->setTSTACKALIGN(val);
    }
    SVARS_FUNC_MODIFIER void setTSTACKSIZE(OdUInt16 val)
    {
       self->setTSTACKSIZE(val);
    }
    SVARS_FUNC_MODIFIER void setHYPERLINKBASE(OdString val)
    {
       self->setHYPERLINKBASE(val);
    }
    SVARS_FUNC_MODIFIER void setXEDIT(ODTBOOL val)
    {
       self->setXEDIT(val);
    }
    SVARS_FUNC_MODIFIER void setEXTNAMES(ODTBOOL val)
    {
       self->setEXTNAMES(val);
    }
    SVARS_FUNC_MODIFIER void setPSVPSCALE(ODTUNITLESS8 val)
    {
       self->setPSVPSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setOLESTARTUP(ODTBOOL val)
    {
       self->setOLESTARTUP(val);
    }
    SVARS_FUNC_MODIFIER void setPELLIPSE(ODTBOOL val)
    {
       self->setPELLIPSE(val);
    }
    SVARS_FUNC_MODIFIER void setISOLINES(OdUInt16 val)
    {
       self->setISOLINES(val);
    }
    SVARS_FUNC_MODIFIER void setTEXTQLTY(OdUInt16 val)
    {
       self->setTEXTQLTY(val);
    }
    SVARS_FUNC_MODIFIER void setFACETRES(ODTUNITLESS4 val)
    {
       self->setFACETRES(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSBASE(ODTUCSID val)
    {
       self->setPUCSBASE(val);
    }
    SVARS_FUNC_MODIFIER void setUCSBASE(ODTUCSID val)
    {
       self->setUCSBASE(val);
    }
    SVARS_FUNC_MODIFIER void setSOLIDHIST(OdInt8 val)
    {
       self->setSOLIDHIST(val);
    }
    SVARS_FUNC_MODIFIER void setSHOWHIST(OdInt8 val)
    {
       self->setSHOWHIST(val);
    }
    SVARS_FUNC_MODIFIER void setLOFTPARAM(ODTDB_LOFTPARAMTYPE val)
    {
       self->setLOFTPARAM(val);
    }
    SVARS_FUNC_MODIFIER void setLOFTNORMALS(ODTDB_LOFTNORMALSTYPE val)
    {
       self->setLOFTNORMALS(val);
    }
    SVARS_FUNC_MODIFIER void setLOFTANG1(ODTORIENT val)
    {
       self->setLOFTANG1(val);
    }
    SVARS_FUNC_MODIFIER void setLOFTANG2(ODTORIENT val)
    {
       self->setLOFTANG2(val);
    }
    SVARS_FUNC_MODIFIER void setLOFTMAG1(ODTUNITLESS8 val)
    {
       self->setLOFTMAG1(val);
    }
    SVARS_FUNC_MODIFIER void setLOFTMAG2(ODTUNITLESS8 val)
    {
       self->setLOFTMAG2(val);
    }
    SVARS_FUNC_MODIFIER void setLATITUDE(double val)
    {
       self->setLATITUDE(val);
    }
    SVARS_FUNC_MODIFIER void setLONGITUDE(double val)
    {
       self->setLONGITUDE(val);
    }
    SVARS_FUNC_MODIFIER void setNORTHDIRECTION(ODTORIENT val)
    {
       self->setNORTHDIRECTION(val);
    }
    SVARS_FUNC_MODIFIER void setTIMEZONE(ODTDB_TIMEZONE val)
    {
       self->setTIMEZONE(val);
    }
    SVARS_FUNC_MODIFIER void setLIGHTGLYPHDISPLAY(OdInt8 val)
    {
       self->setLIGHTGLYPHDISPLAY(val);
    }
    SVARS_FUNC_MODIFIER void setTILEMODELIGHTSYNCH(OdInt8 val)
    {
       self->setTILEMODELIGHTSYNCH(val);
    }
    SVARS_FUNC_MODIFIER void setINTERFERECOLOR(OdCmColor val)
    {
       self->setINTERFERECOLOR(val);
    }
    SVARS_FUNC_MODIFIER void setINTERFEREOBJVS(ODVISTYLEID val)
    {
       self->setINTERFEREOBJVS(val);
    }
    SVARS_FUNC_MODIFIER void setINTERFEREVPVS(ODVISTYLEID val)
    {
       self->setINTERFEREVPVS(val);
    }
    SVARS_FUNC_MODIFIER void setDRAGVS(ODVISTYLEID val)
    {
       self->setDRAGVS(val);
    }
    SVARS_FUNC_MODIFIER void setCSHADOW(ODTDB_SHADOWFLAGS val)
    {
       self->setCSHADOW(val);
    }
    SVARS_FUNC_MODIFIER void setSHADOWPLANELOCATION(ODTDIST val)
    {
       self->setSHADOWPLANELOCATION(val);
    }
    SVARS_FUNC_MODIFIER void setCAMERADISPLAY(ODTBOOL val)
    {
       self->setCAMERADISPLAY(val);
    }
    SVARS_FUNC_MODIFIER void setLENSLENGTH(ODTDIST val)
    {
       self->setLENSLENGTH(val);
    }
    SVARS_FUNC_MODIFIER void setCAMERAHEIGHT(ODTDIST val)
    {
       self->setCAMERAHEIGHT(val);
    }
    SVARS_FUNC_MODIFIER void setSTEPSPERSEC(ODTDIST val)
    {
       self->setSTEPSPERSEC(val);
    }
    SVARS_FUNC_MODIFIER void setSTEPSIZE(ODTDIST val)
    {
       self->setSTEPSIZE(val);
    }
    SVARS_FUNC_MODIFIER void set3DDWFPREC(ODTDIST val)
    {
       self->set3DDWFPREC(val);
    }
    SVARS_FUNC_MODIFIER void setCMATERIAL(ODTMATERIALID val)
    {
       self->setCMATERIAL(val);
    }
    SVARS_FUNC_MODIFIER void setREALWORLDSCALE(bool val)
    {
       self->setREALWORLDSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setDYNCONSTRAINTDISPLAY(ODTBOOL val)
    {
       self->setDYNCONSTRAINTDISPLAY(val);
    }
    SVARS_FUNC_MODIFIER void setINSBASE(OdGePoint3d val)
    {
       self->setINSBASE(val);
    }
    SVARS_FUNC_MODIFIER void setEXTMIN(OdGePoint3d val)
    {
       self->setEXTMIN(val);
    }
    SVARS_FUNC_MODIFIER void setEXTMAX(OdGePoint3d val)
    {
       self->setEXTMAX(val);
    }
    SVARS_FUNC_MODIFIER void setLIMMIN(OdGePoint2d val)
    {
       self->setLIMMIN(val);
    }
    SVARS_FUNC_MODIFIER void setLIMMAX(OdGePoint2d val)
    {
       self->setLIMMAX(val);
    }
    SVARS_FUNC_MODIFIER void setMENUNAME(OdString val)
    {
       self->setMENUNAME(val);
    }
    SVARS_FUNC_MODIFIER void setELEVATION(ODTDIST val)
    {
       self->setELEVATION(val);
    }
    SVARS_FUNC_MODIFIER void setPELEVATION(ODTDIST val)
    {
       self->setPELEVATION(val);
    }
    SVARS_FUNC_MODIFIER void setLIMCHECK(ODTBOOL val)
    {
       self->setLIMCHECK(val);
    }
    SVARS_FUNC_MODIFIER void setUSRTIMER(ODTBOOL val)
    {
       self->setUSRTIMER(val);
    }
    SVARS_FUNC_MODIFIER void setPINSBASE(OdGePoint3d val)
    {
       self->setPINSBASE(val);
    }
    SVARS_FUNC_MODIFIER void setPLIMCHECK(ODTBOOL val)
    {
       self->setPLIMCHECK(val);
    }
    SVARS_FUNC_MODIFIER void setPEXTMIN(OdGePoint3d val)
    {
       self->setPEXTMIN(val);
    }
    SVARS_FUNC_MODIFIER void setPEXTMAX(OdGePoint3d val)
    {
       self->setPEXTMAX(val);
    }
    SVARS_FUNC_MODIFIER void setPLIMMIN(OdGePoint2d val)
    {
       self->setPLIMMIN(val);
    }
    SVARS_FUNC_MODIFIER void setPLIMMAX(OdGePoint2d val)
    {
       self->setPLIMMAX(val);
    }
    SVARS_FUNC_MODIFIER void setUCSNAME(ODDBHARDPOINTERID val)
    {
       self->setUCSNAME(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSNAME(ODDBHARDPOINTERID val)
    {
       self->setPUCSNAME(val);
    }
    SVARS_FUNC_MODIFIER void setENDCAPS(ODTDB_ENDCAPS val)
    {
       self->setENDCAPS(val);
    }
    SVARS_FUNC_MODIFIER void setJOINSTYLE(ODTDB_JOINSTYLE val)
    {
       self->setJOINSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setSTYLESHEET(OdString val)
    {
       self->setSTYLESHEET(val);
    }
    SVARS_FUNC_MODIFIER void setCEPSNTYPE(ODTDB_PLOTSTYLENAMETYPE val)
    {
       self->setCEPSNTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setCEPSNID(ODDBHARDPOINTERID val)
    {
       self->setCEPSNID(val);
    }
    SVARS_FUNC_MODIFIER void setFINGERPRINTGUID(OdString val)
    {
       self->setFINGERPRINTGUID(val);
    }
    SVARS_FUNC_MODIFIER void setVERSIONGUID(OdString val)
    {
       self->setVERSIONGUID(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORTHOVIEW(OdInt16 val)
    {
       self->setPUCSORTHOVIEW(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORGTOP(OdGePoint3d val)
    {
       self->setPUCSORGTOP(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORGBOTTOM(OdGePoint3d val)
    {
       self->setPUCSORGBOTTOM(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORGLEFT(OdGePoint3d val)
    {
       self->setPUCSORGLEFT(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORGRIGHT(OdGePoint3d val)
    {
       self->setPUCSORGRIGHT(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORGFRONT(OdGePoint3d val)
    {
       self->setPUCSORGFRONT(val);
    }
    SVARS_FUNC_MODIFIER void setPUCSORGBACK(OdGePoint3d val)
    {
       self->setPUCSORGBACK(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORTHOVIEW(OdInt16 val)
    {
       self->setUCSORTHOVIEW(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORGTOP(OdGePoint3d val)
    {
       self->setUCSORGTOP(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORGBOTTOM(OdGePoint3d val)
    {
       self->setUCSORGBOTTOM(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORGLEFT(OdGePoint3d val)
    {
       self->setUCSORGLEFT(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORGRIGHT(OdGePoint3d val)
    {
       self->setUCSORGRIGHT(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORGFRONT(OdGePoint3d val)
    {
       self->setUCSORGFRONT(val);
    }
    SVARS_FUNC_MODIFIER void setUCSORGBACK(OdGePoint3d val)
    {
       self->setUCSORGBACK(val);
    }
    SVARS_FUNC_MODIFIER void setDGNFRAME(OdInt8 val)
    {
       self->setDGNFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setDBCSTATE(OdInt16 val)
    {
       self->setDBCSTATE(val);
    }
    SVARS_FUNC_MODIFIER void setINTERSECTIONCOLOR(OdInt16 val)
    {
       self->setINTERSECTIONCOLOR(val);
    }
    SVARS_FUNC_MODIFIER void setINTERSECTIONDISPLAY(bool val)
    {
       self->setINTERSECTIONDISPLAY(val);
    }
    SVARS_FUNC_MODIFIER void setHALOGAP(OdInt16 val)
    {
       self->setHALOGAP(val);
    }
    SVARS_FUNC_MODIFIER void setOBSCUREDCOLOR(OdInt16 val)
    {
       self->setOBSCUREDCOLOR(val);
    }
    SVARS_FUNC_MODIFIER void setOBSCUREDLTYPE(OdInt16 val)
    {
       self->setOBSCUREDLTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setINDEXCTL(OdInt16 val)
    {
       self->setINDEXCTL(val);
    }
    SVARS_FUNC_MODIFIER void setPROJECTNAME(OdString val)
    {
       self->setPROJECTNAME(val);
    }
    SVARS_FUNC_MODIFIER void setSORTENTS(OdInt16 val)
    {
       self->setSORTENTS(val);
    }
    SVARS_FUNC_MODIFIER void setDIMASSOC(OdInt16 val)
    {
       self->setDIMASSOC(val);
    }
    SVARS_FUNC_MODIFIER void setHIDETEXT(bool val)
    {
       self->setHIDETEXT(val);
    }
    SVARS_FUNC_MODIFIER void setPSOLWIDTH(ODTDIST val)
    {
       self->setPSOLWIDTH(val);
    }
    SVARS_FUNC_MODIFIER void setPSOLHEIGHT(ODTDIST val)
    {
       self->setPSOLHEIGHT(val);
    }
    SVARS_FUNC_MODIFIER void setCTABLESTYLE(ODTTABLESTYLEID val)
    {
       self->setCTABLESTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setANNOALLVISIBLE(ODTBOOL val)
    {
       self->setANNOALLVISIBLE(val);
    }
    SVARS_FUNC_MODIFIER void setANNOTATIVEDWG(OdInt8 val)
    {
       self->setANNOTATIVEDWG(val);
    }
    SVARS_FUNC_MODIFIER void setMSLTSCALE(ODTBOOL val)
    {
       self->setMSLTSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setLAYEREVAL(OdInt16 val)
    {
       self->setLAYEREVAL(val);
    }
    SVARS_FUNC_MODIFIER void setLAYERNOTIFY(OdInt16 val)
    {
       self->setLAYERNOTIFY(val);
    }
    SVARS_FUNC_MODIFIER void setLIGHTINGUNITS(OdInt16 val)
    {
       self->setLIGHTINGUNITS(val);
    }
    SVARS_FUNC_MODIFIER void setLIGHTSINBLOCKS(OdInt16 val)
    {
       self->setLIGHTSINBLOCKS(val);
    }
    SVARS_FUNC_MODIFIER void setDRAWORDERCTL(OdInt8 val)
    {
       self->setDRAWORDERCTL(val);
    }
    SVARS_FUNC_MODIFIER void setHPINHERIT(ODTBOOL val)
    {
       self->setHPINHERIT(val);
    }
    SVARS_FUNC_MODIFIER void setHPORIGIN(OdGePoint2d val)
    {
       self->setHPORIGIN(val);
    }
    SVARS_FUNC_MODIFIER void setFIELDEVAL(OdInt16 val)
    {
       self->setFIELDEVAL(val);
    }
    SVARS_FUNC_MODIFIER void setMSOLESCALE(double val)
    {
       self->setMSOLESCALE(val);
    }
    SVARS_FUNC_MODIFIER void setUPDATETHUMBNAIL(OdInt16 val)
    {
       self->setUPDATETHUMBNAIL(val);
    }
    SVARS_FUNC_MODIFIER void setDXEVAL(OdInt16 val)
    {
       self->setDXEVAL(val);
    }
    SVARS_FUNC_MODIFIER void setGEOLATLONGFORMAT(OdInt16 val)
    {
       self->setGEOLATLONGFORMAT(val);
    }
    SVARS_FUNC_MODIFIER void setGEOMARKERVISIBILITY(OdInt16 val)
    {
       self->setGEOMARKERVISIBILITY(val);
    }
    SVARS_FUNC_MODIFIER void setPREVIEWTYPE(OdInt16 val)
    {
       self->setPREVIEWTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setEXPORTMODELSPACE(OdInt16 val)
    {
       self->setEXPORTMODELSPACE(val);
    }
    SVARS_FUNC_MODIFIER void setEXPORTPAPERSPACE(OdInt16 val)
    {
       self->setEXPORTPAPERSPACE(val);
    }
    SVARS_FUNC_MODIFIER void setEXPORTPAGESETUP(OdInt16 val)
    {
       self->setEXPORTPAGESETUP(val);
    }
    SVARS_FUNC_MODIFIER void setMESHTYPE(OdInt16 val)
    {
       self->setMESHTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setSKYSTATUS(OdInt16 val)
    {
       self->setSKYSTATUS(val);
    }
    SVARS_FUNC_MODIFIER void setVSACURVATUREHIGH(ODTDIST val)
    {
       self->setVSACURVATUREHIGH(val);
    }
    SVARS_FUNC_MODIFIER void setVSACURVATURELOW(ODTDIST val)
    {
       self->setVSACURVATURELOW(val);
    }
    SVARS_FUNC_MODIFIER void setVSACURVATURETYPE(OdInt16 val)
    {
       self->setVSACURVATURETYPE(val);
    }
    SVARS_FUNC_MODIFIER void setVSADRAFTANGLEHIGH(ODTDIST val)
    {
       self->setVSADRAFTANGLEHIGH(val);
    }
    SVARS_FUNC_MODIFIER void setVSADRAFTANGLELOW(ODTDIST val)
    {
       self->setVSADRAFTANGLELOW(val);
    }
    SVARS_FUNC_MODIFIER void setVSAZEBRACOLOR1(OdString val)
    {
       self->setVSAZEBRACOLOR1(val);
    }
    SVARS_FUNC_MODIFIER void setVSAZEBRACOLOR2(OdString val)
    {
       self->setVSAZEBRACOLOR2(val);
    }
    SVARS_FUNC_MODIFIER void setVSAZEBRADIRECTION(OdInt16 val)
    {
       self->setVSAZEBRADIRECTION(val);
    }
    SVARS_FUNC_MODIFIER void setVSAZEBRASIZE(OdInt16 val)
    {
       self->setVSAZEBRASIZE(val);
    }
    SVARS_FUNC_MODIFIER void setVSAZEBRATYPE(OdInt16 val)
    {
       self->setVSAZEBRATYPE(val);
    }
    SVARS_FUNC_MODIFIER void setHPLAYER(OdString val)
    {
       self->setHPLAYER(val);
    }
    SVARS_FUNC_MODIFIER void setMIRRHATCH(OdInt16 val)
    {
       self->setMIRRHATCH(val);
    }
    SVARS_FUNC_MODIFIER void setHPTRANSPARENCY(ODTTRANSPARENCYDEF val)
    {
       self->setHPTRANSPARENCY(val);
    }
    SVARS_FUNC_MODIFIER void setHPCOLOR(ODTCOLORDEF val)
    {
       self->setHPCOLOR(val);
    }
    SVARS_FUNC_MODIFIER void setHPBACKGROUNDCOLOR(ODTCOLORDEF val)
    {
       self->setHPBACKGROUNDCOLOR(val);
    }
    SVARS_FUNC_MODIFIER void setCETRANSPARENCY(OdCmTransparency val)
    {
       self->setCETRANSPARENCY(val);
    }
    SVARS_FUNC_MODIFIER void setCVIEWDETAILSTYLE(ODTVIEWDETAILSTYLEID val)
    {
       self->setCVIEWDETAILSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setCVIEWSECTIONSTYLE(ODTVIEWSECTIONSTYLEID val)
    {
       self->setCVIEWSECTIONSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setWIPEOUTFRAME(OdInt16 val)
    {
       self->setWIPEOUTFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDCLIPFRAME(OdInt16 val)
    {
       self->setPOINTCLOUDCLIPFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setMLEADERSCALE(double val)
    {
       self->setMLEADERSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setVIEWUPDATEAUTO(OdInt16 val)
    {
       self->setVIEWUPDATEAUTO(val);
    }
    SVARS_FUNC_MODIFIER void setGEOMARKPOSITIONSIZE(double val)
    {
       self->setGEOMARKPOSITIONSIZE(val);
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDPOINTSIZE(OdInt16 val)
    {
       self->setPOINTCLOUDPOINTSIZE(val);
    }
    SVARS_FUNC_MODIFIER void setDIMLAYER(OdString val)
    {
       self->setDIMLAYER(val);
    }
    SVARS_FUNC_MODIFIER void setSECTIONOFFSETINC(ODTDIST val)
    {
       self->setSECTIONOFFSETINC(val);
    }
    SVARS_FUNC_MODIFIER void setSECTIONTHICKNESSINC(ODTDIST val)
    {
       self->setSECTIONTHICKNESSINC(val);
    }
    SVARS_FUNC_MODIFIER void setXREFOVERRIDE(OdInt16 val)
    {
       self->setXREFOVERRIDE(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERCROSSGAP(OdString val)
    {
       self->setCENTERCROSSGAP(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERCROSSSIZE(OdString val)
    {
       self->setCENTERCROSSSIZE(val);
    }
    SVARS_FUNC_MODIFIER void setCENTEREXE(double val)
    {
       self->setCENTEREXE(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERLAYER(OdString val)
    {
       self->setCENTERLAYER(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERLTSCALE(double val)
    {
       self->setCENTERLTSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERLTYPE(OdString val)
    {
       self->setCENTERLTYPE(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERLTYPEFILE(OdString val)
    {
       self->setCENTERLTYPEFILE(val);
    }
    SVARS_FUNC_MODIFIER void setCENTERMARKEXE(ODTBOOL val)
    {
       self->setCENTERMARKEXE(val);
    }
    SVARS_FUNC_MODIFIER void setCANNOSCALE(ODANNOSCALE val)
    {
       self->setCANNOSCALE(val);
    }
    SVARS_FUNC_MODIFIER void setCMLEADERSTYLE(ODTMLEADERSTYLEID val)
    {
       self->setCMLEADERSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setTEXTSIZE(ODTDIST val)
    {
       self->setTEXTSIZE(val);
    }
    SVARS_FUNC_MODIFIER void setTEXTSTYLE(ODTTEXTSTYLEID val)
    {
       self->setTEXTSTYLE(val);
    }
    SVARS_FUNC_MODIFIER void setTILEMODE(ODTBOOL val)
    {
       self->setTILEMODE(val);
    }
    SVARS_FUNC_MODIFIER void setDWFFRAME(OdInt8 val)
    {
       self->setDWFFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setFRAME(OdInt16 val)
    {
       self->setFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setPDFFRAME(OdInt16 val)
    {
       self->setPDFFRAME(val);
    }
    SVARS_FUNC_MODIFIER void setXCLIPFRAME(OdInt16 val)
    {
       self->setXCLIPFRAME(val);
    }
}



/***
Rule for type: OdDbDatabaseReactor;
For Case VarDefs: Drawing\Include\SysVarDefs.h;
Case locatated in file: Drawing\Include\DbDatabaseReactor.h;
Case locatated in line: 177;
***/
%extend OdDbDatabaseReactor
{
  public:
    SVARS_FUNC_MODIFIER void headerSysVar_ANGBASE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANGBASE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ANGDIR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANGDIR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ORTHOMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ORTHOMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_REGENMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_REGENMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FILLMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FILLMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_QTEXTMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_QTEXTMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MIRRTEXT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MIRRTEXT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LTSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LTSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ATTMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ATTMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TRACEWID_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TRACEWID_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CLAYER_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CLAYER_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CELTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CELTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CECOLOR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CECOLOR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CELTSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CELTSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERA_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERA_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERB_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERB_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERD_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERD_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DISPSILH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DISPSILH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMASO_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMASO_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMSHO_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMSHO_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LUNITS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LUNITS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LUPREC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LUPREC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SKETCHINC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SKETCHINC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FILLETRAD_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FILLETRAD_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_AUNITS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_AUNITS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_AUPREC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_AUPREC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_THICKNESS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_THICKNESS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SKPOLY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SKPOLY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLINEWID_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLINEWID_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SPLFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SPLFRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SPLINETYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SPLINETYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SPLINESEGS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SPLINESEGS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFTAB1_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFTAB1_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFTAB2_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFTAB2_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFU_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFU_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFV_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFV_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI1_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI1_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI2_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI2_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI3_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI3_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI4_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI4_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI5_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI5_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR1_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR1_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR2_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR2_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR3_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR3_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR4_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR4_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDFUNDERLAYSHADEDMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDFUNDERLAYSHADEDMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR5_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR5_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_WORLDVIEW_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_WORLDVIEW_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHADEDGE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHADEDGE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHADEDIF_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHADEDIF_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MAXACTVP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MAXACTVP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UNITMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UNITMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VISRETAIN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VISRETAIN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLINEGEN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLINEGEN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSLTSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSLTSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TREEDEPTH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TREEDEPTH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLJUST_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLJUST_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PROXYGRAPHICS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PROXYGRAPHICS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MEASUREMENT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MEASUREMENT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CELWEIGHT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CELWEIGHT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LWDISPLAY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LWDISPLAY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INSUNITS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INSUNITS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TSTACKALIGN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TSTACKALIGN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TSTACKSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TSTACKSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HYPERLINKBASE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HYPERLINKBASE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_XEDIT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_XEDIT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXTNAMES_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXTNAMES_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSVPSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSVPSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_OLESTARTUP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_OLESTARTUP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PELLIPSE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PELLIPSE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ISOLINES_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ISOLINES_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TEXTQLTY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TEXTQLTY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FACETRES_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FACETRES_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSBASE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSBASE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSBASE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSBASE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SOLIDHIST_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SOLIDHIST_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHOWHIST_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHOWHIST_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTPARAM_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTPARAM_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTNORMALS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTNORMALS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTANG1_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTANG1_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTANG2_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTANG2_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTMAG1_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTMAG1_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTMAG2_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTMAG2_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LATITUDE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LATITUDE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LONGITUDE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LONGITUDE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_NORTHDIRECTION_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_NORTHDIRECTION_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TIMEZONE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TIMEZONE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIGHTGLYPHDISPLAY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIGHTGLYPHDISPLAY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TILEMODELIGHTSYNCH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TILEMODELIGHTSYNCH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERFERECOLOR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERFERECOLOR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERFEREOBJVS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERFEREOBJVS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERFEREVPVS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERFEREVPVS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DRAGVS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DRAGVS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CSHADOW_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CSHADOW_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHADOWPLANELOCATION_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHADOWPLANELOCATION_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CAMERADISPLAY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CAMERADISPLAY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LENSLENGTH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LENSLENGTH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CAMERAHEIGHT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CAMERAHEIGHT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_STEPSPERSEC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_STEPSPERSEC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_STEPSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_STEPSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_3DDWFPREC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_3DDWFPREC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMATERIAL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMATERIAL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_REALWORLDSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_REALWORLDSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DYNCONSTRAINTDISPLAY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DYNCONSTRAINTDISPLAY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INSBASE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INSBASE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXTMIN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXTMIN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXTMAX_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXTMAX_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIMMIN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIMMIN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIMMAX_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIMMAX_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MENUNAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MENUNAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ELEVATION_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ELEVATION_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PELEVATION_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PELEVATION_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIMCHECK_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIMCHECK_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USRTIMER_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USRTIMER_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PINSBASE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PINSBASE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLIMCHECK_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLIMCHECK_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PEXTMIN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PEXTMIN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PEXTMAX_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PEXTMAX_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLIMMIN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLIMMIN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLIMMAX_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLIMMAX_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSNAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSNAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSNAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSNAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ENDCAPS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ENDCAPS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_JOINSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_JOINSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_STYLESHEET_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_STYLESHEET_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CEPSNTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CEPSNTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CEPSNID_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CEPSNID_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FINGERPRINTGUID_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FINGERPRINTGUID_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VERSIONGUID_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VERSIONGUID_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORTHOVIEW_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORTHOVIEW_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGTOP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGTOP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGBOTTOM_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGBOTTOM_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGLEFT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGLEFT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGRIGHT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGRIGHT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGFRONT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGFRONT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGBACK_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGBACK_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORTHOVIEW_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORTHOVIEW_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGTOP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGTOP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGBOTTOM_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGBOTTOM_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGLEFT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGLEFT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGRIGHT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGRIGHT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGFRONT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGFRONT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGBACK_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGBACK_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DGNFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DGNFRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DBCSTATE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DBCSTATE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERSECTIONCOLOR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERSECTIONCOLOR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERSECTIONDISPLAY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERSECTIONDISPLAY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HALOGAP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HALOGAP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_OBSCUREDCOLOR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_OBSCUREDCOLOR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_OBSCUREDLTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_OBSCUREDLTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INDEXCTL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INDEXCTL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PROJECTNAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PROJECTNAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SORTENTS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SORTENTS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMASSOC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMASSOC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HIDETEXT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HIDETEXT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSOLWIDTH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSOLWIDTH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSOLHEIGHT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSOLHEIGHT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CTABLESTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CTABLESTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ANNOALLVISIBLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANNOALLVISIBLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ANNOTATIVEDWG_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANNOTATIVEDWG_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MSLTSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MSLTSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LAYEREVAL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LAYEREVAL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LAYERNOTIFY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LAYERNOTIFY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIGHTINGUNITS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIGHTINGUNITS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIGHTSINBLOCKS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIGHTSINBLOCKS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DRAWORDERCTL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DRAWORDERCTL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPINHERIT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPINHERIT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPORIGIN_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPORIGIN_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FIELDEVAL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FIELDEVAL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MSOLESCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MSOLESCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UPDATETHUMBNAIL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UPDATETHUMBNAIL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DXEVAL_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DXEVAL_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_GEOLATLONGFORMAT_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_GEOLATLONGFORMAT_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_GEOMARKERVISIBILITY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_GEOMARKERVISIBILITY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PREVIEWTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PREVIEWTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXPORTMODELSPACE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXPORTMODELSPACE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXPORTPAPERSPACE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXPORTPAPERSPACE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXPORTPAGESETUP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXPORTPAGESETUP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MESHTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MESHTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SKYSTATUS_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SKYSTATUS_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSACURVATUREHIGH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSACURVATUREHIGH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSACURVATURELOW_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSACURVATURELOW_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSACURVATURETYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSACURVATURETYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSADRAFTANGLEHIGH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSADRAFTANGLEHIGH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSADRAFTANGLELOW_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSADRAFTANGLELOW_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRACOLOR1_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRACOLOR1_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRACOLOR2_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRACOLOR2_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRADIRECTION_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRADIRECTION_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRASIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRASIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRATYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRATYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPLAYER_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPLAYER_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MIRRHATCH_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MIRRHATCH_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPTRANSPARENCY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPTRANSPARENCY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPCOLOR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPCOLOR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPBACKGROUNDCOLOR_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPBACKGROUNDCOLOR_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CETRANSPARENCY_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CETRANSPARENCY_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CVIEWDETAILSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CVIEWDETAILSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CVIEWSECTIONSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CVIEWSECTIONSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_WIPEOUTFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_WIPEOUTFRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_POINTCLOUDCLIPFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_POINTCLOUDCLIPFRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MLEADERSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MLEADERSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VIEWUPDATEAUTO_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VIEWUPDATEAUTO_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_GEOMARKPOSITIONSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_GEOMARKPOSITIONSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_POINTCLOUDPOINTSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_POINTCLOUDPOINTSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMLAYER_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMLAYER_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SECTIONOFFSETINC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SECTIONOFFSETINC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SECTIONTHICKNESSINC_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SECTIONTHICKNESSINC_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_XREFOVERRIDE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_XREFOVERRIDE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERCROSSGAP_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERCROSSGAP_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERCROSSSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERCROSSSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTEREXE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTEREXE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLAYER_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLAYER_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLTSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLTSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLTYPE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLTYPE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLTYPEFILE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLTYPEFILE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERMARKEXE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERMARKEXE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CANNOSCALE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CANNOSCALE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLEADERSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLEADERSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TEXTSIZE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TEXTSIZE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TEXTSTYLE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TEXTSTYLE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TILEMODE_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TILEMODE_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DWFFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DWFFRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDFFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDFFRAME_WillChange(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_XCLIPFRAME_WillChange(const OdDbDatabase* pDb)
    {
       self->headerSysVar_XCLIPFRAME_WillChange(pDb);
    }
}



/***
Rule for type: OdDbDatabaseReactor;
For Case VarDefs: Drawing\Include\SysVarDefs.h;
Case locatated in file: Drawing\Include\DbDatabaseReactor.h;
Case locatated in line: 226;
***/
%extend OdDbDatabaseReactor
{
  public:
    SVARS_FUNC_MODIFIER void headerSysVar_ANGBASE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANGBASE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ANGDIR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANGDIR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ORTHOMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ORTHOMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_REGENMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_REGENMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FILLMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FILLMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_QTEXTMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_QTEXTMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MIRRTEXT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MIRRTEXT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LTSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LTSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ATTMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ATTMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TRACEWID_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TRACEWID_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CLAYER_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CLAYER_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CELTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CELTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CECOLOR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CECOLOR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CELTSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CELTSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERA_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERA_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERB_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERB_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CHAMFERD_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CHAMFERD_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DISPSILH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DISPSILH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMASO_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMASO_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMSHO_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMSHO_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LUNITS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LUNITS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LUPREC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LUPREC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SKETCHINC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SKETCHINC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FILLETRAD_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FILLETRAD_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_AUNITS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_AUNITS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_AUPREC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_AUPREC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_THICKNESS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_THICKNESS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SKPOLY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SKPOLY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLINEWID_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLINEWID_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SPLFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SPLFRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SPLINETYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SPLINETYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SPLINESEGS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SPLINESEGS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFTAB1_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFTAB1_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFTAB2_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFTAB2_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFU_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFU_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SURFV_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SURFV_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI1_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI1_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI2_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI2_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI3_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI3_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI4_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI4_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERI5_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERI5_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR1_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR1_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR2_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR2_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR3_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR3_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR4_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR4_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDFUNDERLAYSHADEDMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDFUNDERLAYSHADEDMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USERR5_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USERR5_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_WORLDVIEW_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_WORLDVIEW_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHADEDGE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHADEDGE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHADEDIF_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHADEDIF_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MAXACTVP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MAXACTVP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UNITMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UNITMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VISRETAIN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VISRETAIN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLINEGEN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLINEGEN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSLTSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSLTSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TREEDEPTH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TREEDEPTH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLJUST_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLJUST_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PROXYGRAPHICS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PROXYGRAPHICS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MEASUREMENT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MEASUREMENT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CELWEIGHT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CELWEIGHT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LWDISPLAY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LWDISPLAY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INSUNITS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INSUNITS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TSTACKALIGN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TSTACKALIGN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TSTACKSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TSTACKSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HYPERLINKBASE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HYPERLINKBASE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_XEDIT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_XEDIT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXTNAMES_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXTNAMES_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSVPSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSVPSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_OLESTARTUP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_OLESTARTUP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PELLIPSE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PELLIPSE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ISOLINES_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ISOLINES_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TEXTQLTY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TEXTQLTY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FACETRES_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FACETRES_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSBASE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSBASE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSBASE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSBASE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SOLIDHIST_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SOLIDHIST_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHOWHIST_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHOWHIST_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTPARAM_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTPARAM_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTNORMALS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTNORMALS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTANG1_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTANG1_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTANG2_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTANG2_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTMAG1_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTMAG1_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LOFTMAG2_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LOFTMAG2_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LATITUDE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LATITUDE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LONGITUDE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LONGITUDE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_NORTHDIRECTION_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_NORTHDIRECTION_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TIMEZONE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TIMEZONE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIGHTGLYPHDISPLAY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIGHTGLYPHDISPLAY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TILEMODELIGHTSYNCH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TILEMODELIGHTSYNCH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERFERECOLOR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERFERECOLOR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERFEREOBJVS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERFEREOBJVS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERFEREVPVS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERFEREVPVS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DRAGVS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DRAGVS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CSHADOW_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CSHADOW_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SHADOWPLANELOCATION_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SHADOWPLANELOCATION_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CAMERADISPLAY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CAMERADISPLAY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LENSLENGTH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LENSLENGTH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CAMERAHEIGHT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CAMERAHEIGHT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_STEPSPERSEC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_STEPSPERSEC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_STEPSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_STEPSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_3DDWFPREC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_3DDWFPREC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMATERIAL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMATERIAL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_REALWORLDSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_REALWORLDSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DYNCONSTRAINTDISPLAY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DYNCONSTRAINTDISPLAY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TDUCREATE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TDUCREATE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TDUUPDATE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TDUUPDATE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TDINDWG_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TDINDWG_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TDUSRTIMER_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TDUSRTIMER_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSTYLEMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSTYLEMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DWGCODEPAGE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DWGCODEPAGE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_REQUIREDVERSIONS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_REQUIREDVERSIONS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORG_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORG_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSXDIR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSXDIR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSYDIR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSYDIR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORG_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORG_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSXDIR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSXDIR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSYDIR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSYDIR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INSBASE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INSBASE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXTMIN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXTMIN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXTMAX_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXTMAX_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIMMIN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIMMIN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIMMAX_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIMMAX_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MENUNAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MENUNAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ELEVATION_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ELEVATION_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PELEVATION_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PELEVATION_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIMCHECK_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIMCHECK_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_USRTIMER_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_USRTIMER_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PINSBASE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PINSBASE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLIMCHECK_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLIMCHECK_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PEXTMIN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PEXTMIN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PEXTMAX_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PEXTMAX_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLIMMIN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLIMMIN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PLIMMAX_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PLIMMAX_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSNAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSNAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSNAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSNAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ENDCAPS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ENDCAPS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_JOINSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_JOINSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_STYLESHEET_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_STYLESHEET_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CEPSNTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CEPSNTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CEPSNID_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CEPSNID_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FINGERPRINTGUID_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FINGERPRINTGUID_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VERSIONGUID_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VERSIONGUID_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORTHOVIEW_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORTHOVIEW_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGTOP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGTOP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGBOTTOM_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGBOTTOM_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGLEFT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGLEFT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGRIGHT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGRIGHT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGFRONT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGFRONT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PUCSORGBACK_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PUCSORGBACK_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORTHOVIEW_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORTHOVIEW_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGTOP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGTOP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGBOTTOM_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGBOTTOM_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGLEFT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGLEFT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGRIGHT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGRIGHT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGFRONT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGFRONT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UCSORGBACK_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UCSORGBACK_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DGNFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DGNFRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DBCSTATE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DBCSTATE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERSECTIONCOLOR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERSECTIONCOLOR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INTERSECTIONDISPLAY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INTERSECTIONDISPLAY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HALOGAP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HALOGAP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_OBSCUREDCOLOR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_OBSCUREDCOLOR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_OBSCUREDLTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_OBSCUREDLTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_INDEXCTL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_INDEXCTL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PROJECTNAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PROJECTNAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SORTENTS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SORTENTS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMASSOC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMASSOC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HIDETEXT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HIDETEXT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSOLWIDTH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSOLWIDTH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PSOLHEIGHT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PSOLHEIGHT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CTABLESTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CTABLESTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ANNOALLVISIBLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANNOALLVISIBLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_ANNOTATIVEDWG_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_ANNOTATIVEDWG_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MSLTSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MSLTSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LAYEREVAL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LAYEREVAL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LAYERNOTIFY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LAYERNOTIFY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIGHTINGUNITS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIGHTINGUNITS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_LIGHTSINBLOCKS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_LIGHTSINBLOCKS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DRAWORDERCTL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DRAWORDERCTL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPINHERIT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPINHERIT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPORIGIN_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPORIGIN_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FIELDEVAL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FIELDEVAL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MSOLESCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MSOLESCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_UPDATETHUMBNAIL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_UPDATETHUMBNAIL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DXEVAL_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DXEVAL_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_GEOLATLONGFORMAT_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_GEOLATLONGFORMAT_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_GEOMARKERVISIBILITY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_GEOMARKERVISIBILITY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PREVIEWTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PREVIEWTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXPORTMODELSPACE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXPORTMODELSPACE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXPORTPAPERSPACE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXPORTPAPERSPACE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_EXPORTPAGESETUP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_EXPORTPAGESETUP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MESHTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MESHTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SKYSTATUS_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SKYSTATUS_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSACURVATUREHIGH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSACURVATUREHIGH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSACURVATURELOW_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSACURVATURELOW_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSACURVATURETYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSACURVATURETYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSADRAFTANGLEHIGH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSADRAFTANGLEHIGH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSADRAFTANGLELOW_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSADRAFTANGLELOW_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRACOLOR1_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRACOLOR1_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRACOLOR2_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRACOLOR2_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRADIRECTION_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRADIRECTION_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRASIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRASIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VSAZEBRATYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VSAZEBRATYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPLAYER_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPLAYER_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MIRRHATCH_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MIRRHATCH_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPTRANSPARENCY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPTRANSPARENCY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPCOLOR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPCOLOR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_HPBACKGROUNDCOLOR_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_HPBACKGROUNDCOLOR_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CETRANSPARENCY_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CETRANSPARENCY_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CVIEWDETAILSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CVIEWDETAILSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CVIEWSECTIONSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CVIEWSECTIONSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_WIPEOUTFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_WIPEOUTFRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_POINTCLOUDCLIPFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_POINTCLOUDCLIPFRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_MLEADERSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_MLEADERSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_VIEWUPDATEAUTO_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_VIEWUPDATEAUTO_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_GEOMARKPOSITIONSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_GEOMARKPOSITIONSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_POINTCLOUDPOINTSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_POINTCLOUDPOINTSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DIMLAYER_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DIMLAYER_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SECTIONOFFSETINC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SECTIONOFFSETINC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_SECTIONTHICKNESSINC_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_SECTIONTHICKNESSINC_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_XREFOVERRIDE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_XREFOVERRIDE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERCROSSGAP_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERCROSSGAP_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERCROSSSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERCROSSSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTEREXE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTEREXE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLAYER_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLAYER_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLTSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLTSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLTYPE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLTYPE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERLTYPEFILE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERLTYPEFILE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CENTERMARKEXE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CENTERMARKEXE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CANNOSCALE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CANNOSCALE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_CMLEADERSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_CMLEADERSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TEXTSIZE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TEXTSIZE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TEXTSTYLE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TEXTSTYLE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_TILEMODE_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_TILEMODE_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_DWFFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_DWFFRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_FRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_FRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_PDFFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_PDFFRAME_Changed(pDb);
    }
    SVARS_FUNC_MODIFIER void headerSysVar_XCLIPFRAME_Changed(const OdDbDatabase* pDb)
    {
       self->headerSysVar_XCLIPFRAME_Changed(pDb);
    }
}



/***
Rule for type: OdDbHostAppServices;
For Case VarDefs: Drawing\Include\SysVarDefs.h;
Case locatated in file: Drawing\Include\DbHostAppServices.h;
Case locatated in line: 444;
***/
%extend OdDbHostAppServices
{
  public:
    SVARS_FUNC_MODIFIER OdUInt16 getPLOTTRANSPARENCYOVERRIDE() const
    {
      return self->getPLOTTRANSPARENCYOVERRIDE();
    }
    SVARS_FUNC_MODIFIER void setPLOTTRANSPARENCYOVERRIDE(OdUInt16 val)
    {
       self->setPLOTTRANSPARENCYOVERRIDE(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getATTREQ() const
    {
      return self->getATTREQ();
    }
    SVARS_FUNC_MODIFIER void setATTREQ(ODTBOOL val)
    {
       self->setATTREQ(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getATTDIA() const
    {
      return self->getATTDIA();
    }
    SVARS_FUNC_MODIFIER void setATTDIA(ODTBOOL val)
    {
       self->setATTDIA(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getBLIPMODE() const
    {
      return self->getBLIPMODE();
    }
    SVARS_FUNC_MODIFIER void setBLIPMODE(ODTBOOL val)
    {
       self->setBLIPMODE(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getDELOBJ() const
    {
      return self->getDELOBJ();
    }
    SVARS_FUNC_MODIFIER void setDELOBJ(ODTBOOL val)
    {
       self->setDELOBJ(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getFILEDIA() const
    {
      return self->getFILEDIA();
    }
    SVARS_FUNC_MODIFIER void setFILEDIA(ODTBOOL val)
    {
       self->setFILEDIA(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getCOORDS() const
    {
      return self->getCOORDS();
    }
    SVARS_FUNC_MODIFIER void setCOORDS(OdInt16 val)
    {
       self->setCOORDS(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getDRAGMODE() const
    {
      return self->getDRAGMODE();
    }
    SVARS_FUNC_MODIFIER void setDRAGMODE(OdInt16 val)
    {
       self->setDRAGMODE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getOSMODE() const
    {
      return self->getOSMODE();
    }
    SVARS_FUNC_MODIFIER void setOSMODE(OdInt16 val)
    {
       self->setOSMODE(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPICKFIRST() const
    {
      return self->getPICKFIRST();
    }
    SVARS_FUNC_MODIFIER void setPICKFIRST(ODTBOOL val)
    {
       self->setPICKFIRST(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPICKBOX() const
    {
      return self->getPICKBOX();
    }
    SVARS_FUNC_MODIFIER void setPICKBOX(OdInt16 val)
    {
       self->setPICKBOX(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getAPERTURE() const
    {
      return self->getAPERTURE();
    }
    SVARS_FUNC_MODIFIER void setAPERTURE(OdInt16 val)
    {
       self->setAPERTURE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPICKADD() const
    {
      return self->getPICKADD();
    }
    SVARS_FUNC_MODIFIER void setPICKADD(OdInt16 val)
    {
       self->setPICKADD(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPICKSTYLE() const
    {
      return self->getPICKSTYLE();
    }
    SVARS_FUNC_MODIFIER void setPICKSTYLE(OdInt16 val)
    {
       self->setPICKSTYLE(val);
    }
    SVARS_FUNC_MODIFIER ODTUNITLESS4 getLWDISPSCALE() const
    {
      return self->getLWDISPSCALE();
    }
    SVARS_FUNC_MODIFIER void setLWDISPSCALE(ODTUNITLESS4 val)
    {
       self->setLWDISPSCALE(val);
    }
    SVARS_FUNC_MODIFIER ODTDB_LINEWEIGHT getLWDEFAULT() const
    {
      return self->getLWDEFAULT();
    }
    SVARS_FUNC_MODIFIER void setLWDEFAULT(ODTDB_LINEWEIGHT val)
    {
       self->setLWDEFAULT(val);
    }
    SVARS_FUNC_MODIFIER OdString getFONTALT() const
    {
      return self->getFONTALT();
    }
    SVARS_FUNC_MODIFIER void setFONTALT(OdString val)
    {
       self->setFONTALT(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPLINETYPE() const
    {
      return self->getPLINETYPE();
    }
    SVARS_FUNC_MODIFIER void setPLINETYPE(OdInt16 val)
    {
       self->setPLINETYPE(val);
    }
    SVARS_FUNC_MODIFIER ODTDB_PROXYIMAGE getPROXYSHOW() const
    {
      return self->getPROXYSHOW();
    }
    SVARS_FUNC_MODIFIER void setPROXYSHOW(ODTDB_PROXYIMAGE val)
    {
       self->setPROXYSHOW(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getTEXTFILL() const
    {
      return self->getTEXTFILL();
    }
    SVARS_FUNC_MODIFIER void setTEXTFILL(ODTBOOL val)
    {
       self->setTEXTFILL(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPHOVER() const
    {
      return self->getGRIPHOVER();
    }
    SVARS_FUNC_MODIFIER void setGRIPHOVER(OdInt16 val)
    {
       self->setGRIPHOVER(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPOBJLIMIT() const
    {
      return self->getGRIPOBJLIMIT();
    }
    SVARS_FUNC_MODIFIER void setGRIPOBJLIMIT(OdInt16 val)
    {
       self->setGRIPOBJLIMIT(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPTIPS() const
    {
      return self->getGRIPTIPS();
    }
    SVARS_FUNC_MODIFIER void setGRIPTIPS(OdInt16 val)
    {
       self->setGRIPTIPS(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getHPASSOC() const
    {
      return self->getHPASSOC();
    }
    SVARS_FUNC_MODIFIER void setHPASSOC(OdInt16 val)
    {
       self->setHPASSOC(val);
    }
    SVARS_FUNC_MODIFIER OdString getLOCALROOTPREFIX() const
    {
      return self->getLOCALROOTPREFIX();
    }
    SVARS_FUNC_MODIFIER void setLOCALROOTPREFIX(OdString val)
    {
       self->setLOCALROOTPREFIX(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getLOGFILEMODE() const
    {
      return self->getLOGFILEMODE();
    }
    SVARS_FUNC_MODIFIER void setLOGFILEMODE(OdInt16 val)
    {
       self->setLOGFILEMODE(val);
    }
    SVARS_FUNC_MODIFIER OdUInt32 getMAXHATCHDENSITY() const
    {
      return self->getMAXHATCHDENSITY();
    }
    SVARS_FUNC_MODIFIER void setMAXHATCHDENSITY(OdUInt32 val)
    {
       self->setMAXHATCHDENSITY(val);
    }
    SVARS_FUNC_MODIFIER OdUInt32 getHPMAXCONTOURPOINTS() const
    {
      return self->getHPMAXCONTOURPOINTS();
    }
    SVARS_FUNC_MODIFIER void setHPMAXCONTOURPOINTS(OdUInt32 val)
    {
       self->setHPMAXCONTOURPOINTS(val);
    }
    SVARS_FUNC_MODIFIER OdUInt32 getHPCUTPOINTSLIMIT() const
    {
      return self->getHPCUTPOINTSLIMIT();
    }
    SVARS_FUNC_MODIFIER void setHPCUTPOINTSLIMIT(OdUInt32 val)
    {
       self->setHPCUTPOINTSLIMIT(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getHPSMOOTHEVALUATE() const
    {
      return self->getHPSMOOTHEVALUATE();
    }
    SVARS_FUNC_MODIFIER void setHPSMOOTHEVALUATE(OdInt16 val)
    {
       self->setHPSMOOTHEVALUATE(val);
    }
    SVARS_FUNC_MODIFIER bool getHPNEWDRAW() const
    {
      return self->getHPNEWDRAW();
    }
    SVARS_FUNC_MODIFIER void setHPNEWDRAW(bool val)
    {
       self->setHPNEWDRAW(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getSILHGENMODE() const
    {
      return self->getSILHGENMODE();
    }
    SVARS_FUNC_MODIFIER void setSILHGENMODE(OdInt16 val)
    {
       self->setSILHGENMODE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getSILHWIDTH() const
    {
      return self->getSILHWIDTH();
    }
    SVARS_FUNC_MODIFIER void setSILHWIDTH(OdInt16 val)
    {
       self->setSILHWIDTH(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getFIELDDISPLAY() const
    {
      return self->getFIELDDISPLAY();
    }
    SVARS_FUNC_MODIFIER void setFIELDDISPLAY(OdInt16 val)
    {
       self->setFIELDDISPLAY(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getUCSVIEW() const
    {
      return self->getUCSVIEW();
    }
    SVARS_FUNC_MODIFIER void setUCSVIEW(OdInt16 val)
    {
       self->setUCSVIEW(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPBLOCK() const
    {
      return self->getGRIPBLOCK();
    }
    SVARS_FUNC_MODIFIER void setGRIPBLOCK(OdInt16 val)
    {
       self->setGRIPBLOCK(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPCOLOR() const
    {
      return self->getGRIPCOLOR();
    }
    SVARS_FUNC_MODIFIER void setGRIPCOLOR(OdInt16 val)
    {
       self->setGRIPCOLOR(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPCONTOUR() const
    {
      return self->getGRIPCONTOUR();
    }
    SVARS_FUNC_MODIFIER void setGRIPCONTOUR(OdInt16 val)
    {
       self->setGRIPCONTOUR(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPDYNCOLOR() const
    {
      return self->getGRIPDYNCOLOR();
    }
    SVARS_FUNC_MODIFIER void setGRIPDYNCOLOR(OdInt16 val)
    {
       self->setGRIPDYNCOLOR(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPHOT() const
    {
      return self->getGRIPHOT();
    }
    SVARS_FUNC_MODIFIER void setGRIPHOT(OdInt16 val)
    {
       self->setGRIPHOT(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPS() const
    {
      return self->getGRIPS();
    }
    SVARS_FUNC_MODIFIER void setGRIPS(OdInt16 val)
    {
       self->setGRIPS(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getGRIPSIZE() const
    {
      return self->getGRIPSIZE();
    }
    SVARS_FUNC_MODIFIER void setGRIPSIZE(OdInt16 val)
    {
       self->setGRIPSIZE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getSAVEFIDELITY() const
    {
      return self->getSAVEFIDELITY();
    }
    SVARS_FUNC_MODIFIER void setSAVEFIDELITY(OdInt16 val)
    {
       self->setSAVEFIDELITY(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getDWFOSNAP() const
    {
      return self->getDWFOSNAP();
    }
    SVARS_FUNC_MODIFIER void setDWFOSNAP(ODTBOOL val)
    {
       self->setDWFOSNAP(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getDGNOSNAP() const
    {
      return self->getDGNOSNAP();
    }
    SVARS_FUNC_MODIFIER void setDGNOSNAP(ODTBOOL val)
    {
       self->setDGNOSNAP(val);
    }
    SVARS_FUNC_MODIFIER OdUInt8 getOLEQUALITY() const
    {
      return self->getOLEQUALITY();
    }
    SVARS_FUNC_MODIFIER void setOLEQUALITY(OdUInt8 val)
    {
       self->setOLEQUALITY(val);
    }
    SVARS_FUNC_MODIFIER OdInt8 getOLEHIDE() const
    {
      return self->getOLEHIDE();
    }
    SVARS_FUNC_MODIFIER void setOLEHIDE(OdInt8 val)
    {
       self->setOLEHIDE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getISAVEPERCENT() const
    {
      return self->getISAVEPERCENT();
    }
    SVARS_FUNC_MODIFIER void setISAVEPERCENT(OdInt16 val)
    {
       self->setISAVEPERCENT(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getDEMANDLOAD() const
    {
      return self->getDEMANDLOAD();
    }
    SVARS_FUNC_MODIFIER void setDEMANDLOAD(OdInt16 val)
    {
       self->setDEMANDLOAD(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getLAYLOCKFADECTL() const
    {
      return self->getLAYLOCKFADECTL();
    }
    SVARS_FUNC_MODIFIER void setLAYLOCKFADECTL(OdInt16 val)
    {
       self->setLAYLOCKFADECTL(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getTHUMBSIZE() const
    {
      return self->getTHUMBSIZE();
    }
    SVARS_FUNC_MODIFIER void setTHUMBSIZE(OdInt16 val)
    {
       self->setTHUMBSIZE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPUBLISHHATCH() const
    {
      return self->getPUBLISHHATCH();
    }
    SVARS_FUNC_MODIFIER void setPUBLISHHATCH(OdInt16 val)
    {
       self->setPUBLISHHATCH(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getOPENPARTIAL() const
    {
      return self->getOPENPARTIAL();
    }
    SVARS_FUNC_MODIFIER void setOPENPARTIAL(OdInt16 val)
    {
       self->setOPENPARTIAL(val);
    }
    SVARS_FUNC_MODIFIER double getDGNIMPORTMAX() const
    {
      return self->getDGNIMPORTMAX();
    }
    SVARS_FUNC_MODIFIER void setDGNIMPORTMAX(double val)
    {
       self->setDGNIMPORTMAX(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPLINECONVERTMODE() const
    {
      return self->getPLINECONVERTMODE();
    }
    SVARS_FUNC_MODIFIER void setPLINECONVERTMODE(OdInt16 val)
    {
       self->setPLINECONVERTMODE(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPDFOSNAP() const
    {
      return self->getPDFOSNAP();
    }
    SVARS_FUNC_MODIFIER void setPDFOSNAP(ODTBOOL val)
    {
       self->setPDFOSNAP(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getXFADECTL() const
    {
      return self->getXFADECTL();
    }
    SVARS_FUNC_MODIFIER void setXFADECTL(OdInt16 val)
    {
       self->setXFADECTL(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getXDWGFADECTL() const
    {
      return self->getXDWGFADECTL();
    }
    SVARS_FUNC_MODIFIER void setXDWGFADECTL(OdInt16 val)
    {
       self->setXDWGFADECTL(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPARAMETERCOPYMODE() const
    {
      return self->getPARAMETERCOPYMODE();
    }
    SVARS_FUNC_MODIFIER void setPARAMETERCOPYMODE(OdInt16 val)
    {
       self->setPARAMETERCOPYMODE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getOBJECTISOLATIONMODE() const
    {
      return self->getOBJECTISOLATIONMODE();
    }
    SVARS_FUNC_MODIFIER void setOBJECTISOLATIONMODE(OdInt16 val)
    {
       self->setOBJECTISOLATIONMODE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getARRAYTYPE() const
    {
      return self->getARRAYTYPE();
    }
    SVARS_FUNC_MODIFIER void setARRAYTYPE(OdInt16 val)
    {
       self->setARRAYTYPE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDAUTOUPDATE() const
    {
      return self->getPOINTCLOUDAUTOUPDATE();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDAUTOUPDATE(OdInt16 val)
    {
       self->setPOINTCLOUDAUTOUPDATE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDDENSITY() const
    {
      return self->getPOINTCLOUDDENSITY();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDDENSITY(OdInt16 val)
    {
       self->setPOINTCLOUDDENSITY(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDLOCK() const
    {
      return self->getPOINTCLOUDLOCK();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDLOCK(OdInt16 val)
    {
       self->setPOINTCLOUDLOCK(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDRTDENSITY() const
    {
      return self->getPOINTCLOUDRTDENSITY();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDRTDENSITY(OdInt16 val)
    {
       self->setPOINTCLOUDRTDENSITY(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getARRAYASSOCIATIVITY() const
    {
      return self->getARRAYASSOCIATIVITY();
    }
    SVARS_FUNC_MODIFIER void setARRAYASSOCIATIVITY(OdInt16 val)
    {
       self->setARRAYASSOCIATIVITY(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDBOUNDARY() const
    {
      return self->getPOINTCLOUDBOUNDARY();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDBOUNDARY(OdInt16 val)
    {
       self->setPOINTCLOUDBOUNDARY(val);
    }
    SVARS_FUNC_MODIFIER OdUInt32 getPOINTCLOUDPOINTMAX() const
    {
      return self->getPOINTCLOUDPOINTMAX();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDPOINTMAX(OdUInt32 val)
    {
       self->setPOINTCLOUDPOINTMAX(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getTEXTALIGNMODE() const
    {
      return self->getTEXTALIGNMODE();
    }
    SVARS_FUNC_MODIFIER void setTEXTALIGNMODE(OdInt16 val)
    {
       self->setTEXTALIGNMODE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getLINESMOOTHING() const
    {
      return self->getLINESMOOTHING();
    }
    SVARS_FUNC_MODIFIER void setLINESMOOTHING(OdInt16 val)
    {
       self->setLINESMOOTHING(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getHPLINETYPE() const
    {
      return self->getHPLINETYPE();
    }
    SVARS_FUNC_MODIFIER void setHPLINETYPE(OdInt16 val)
    {
       self->setHPLINETYPE(val);
    }
    SVARS_FUNC_MODIFIER OdInt32 getPOINTCLOUDPOINTMAXLEGACY() const
    {
      return self->getPOINTCLOUDPOINTMAXLEGACY();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDPOINTMAXLEGACY(OdInt32 val)
    {
       self->setPOINTCLOUDPOINTMAXLEGACY(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getPOINTCLOUDLOD() const
    {
      return self->getPOINTCLOUDLOD();
    }
    SVARS_FUNC_MODIFIER void setPOINTCLOUDLOD(OdInt16 val)
    {
       self->setPOINTCLOUDLOD(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getREVCLOUDCREATEMODE() const
    {
      return self->getREVCLOUDCREATEMODE();
    }
    SVARS_FUNC_MODIFIER void setREVCLOUDCREATEMODE(OdInt16 val)
    {
       self->setREVCLOUDCREATEMODE(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getREVCLOUDGRIPS() const
    {
      return self->getREVCLOUDGRIPS();
    }
    SVARS_FUNC_MODIFIER void setREVCLOUDGRIPS(OdInt16 val)
    {
       self->setREVCLOUDGRIPS(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getLTGAPSELECTION() const
    {
      return self->getLTGAPSELECTION();
    }
    SVARS_FUNC_MODIFIER void setLTGAPSELECTION(ODTBOOL val)
    {
       self->setLTGAPSELECTION(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getSELECTIONEFFECTCOLOR() const
    {
      return self->getSELECTIONEFFECTCOLOR();
    }
    SVARS_FUNC_MODIFIER void setSELECTIONEFFECTCOLOR(OdInt16 val)
    {
       self->setSELECTIONEFFECTCOLOR(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getSELECTIONEFFECT() const
    {
      return self->getSELECTIONEFFECT();
    }
    SVARS_FUNC_MODIFIER void setSELECTIONEFFECT(OdInt16 val)
    {
       self->setSELECTIONEFFECT(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getIMAGEHLT() const
    {
      return self->getIMAGEHLT();
    }
    SVARS_FUNC_MODIFIER void setIMAGEHLT(OdInt16 val)
    {
       self->setIMAGEHLT(val);
    }
    SVARS_FUNC_MODIFIER bool getSAVEROUNDTRIP() const
    {
      return self->getSAVEROUNDTRIP();
    }
    SVARS_FUNC_MODIFIER void setSAVEROUNDTRIP(bool val)
    {
       self->setSAVEROUNDTRIP(val);
    }
    SVARS_FUNC_MODIFIER ODTDIST getR12SaveDeviation() const
    {
      return self->getR12SaveDeviation();
    }
    SVARS_FUNC_MODIFIER void setR12SaveDeviation(ODTDIST val)
    {
       self->setR12SaveDeviation(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getR12SaveAccuracy() const
    {
      return self->getR12SaveAccuracy();
    }
    SVARS_FUNC_MODIFIER void setR12SaveAccuracy(OdInt16 val)
    {
       self->setR12SaveAccuracy(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getAcisSaveAsMode() const
    {
      return self->getAcisSaveAsMode();
    }
    SVARS_FUNC_MODIFIER void setAcisSaveAsMode(OdInt16 val)
    {
       self->setAcisSaveAsMode(val);
    }
    SVARS_FUNC_MODIFIER OdInt8 getAcisProxyMode() const
    {
      return self->getAcisProxyMode();
    }
    SVARS_FUNC_MODIFIER void setAcisProxyMode(OdInt8 val)
    {
       self->setAcisProxyMode(val);
    }
    SVARS_FUNC_MODIFIER ODTBOOL getPLINECACHE() const
    {
      return self->getPLINECACHE();
    }
    SVARS_FUNC_MODIFIER void setPLINECACHE(ODTBOOL val)
    {
       self->setPLINECACHE(val);
    }
    SVARS_FUNC_MODIFIER bool getDxfTextAdjustAlignment() const
    {
      return self->getDxfTextAdjustAlignment();
    }
    SVARS_FUNC_MODIFIER void setDxfTextAdjustAlignment(bool val)
    {
       self->setDxfTextAdjustAlignment(val);
    }
    SVARS_FUNC_MODIFIER bool getRecomputeDimBlocksRequired() const
    {
      return self->getRecomputeDimBlocksRequired();
    }
    SVARS_FUNC_MODIFIER void setRecomputeDimBlocksRequired(bool val)
    {
       self->setRecomputeDimBlocksRequired(val);
    }
    SVARS_FUNC_MODIFIER bool getAllowSavingEmptyAcisObjects() const
    {
      return self->getAllowSavingEmptyAcisObjects();
    }
    SVARS_FUNC_MODIFIER void setAllowSavingEmptyAcisObjects(bool val)
    {
       self->setAllowSavingEmptyAcisObjects(val);
    }
    SVARS_FUNC_MODIFIER bool getRestoreHatchFromBlkRef() const
    {
      return self->getRestoreHatchFromBlkRef();
    }
    SVARS_FUNC_MODIFIER void setRestoreHatchFromBlkRef(bool val)
    {
       self->setRestoreHatchFromBlkRef(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getMtMode() const
    {
      return self->getMtMode();
    }
    SVARS_FUNC_MODIFIER void setMtMode(OdInt16 val)
    {
       self->setMtMode(val);
    }
    SVARS_FUNC_MODIFIER bool getNegativeHandlesReserved() const
    {
      return self->getNegativeHandlesReserved();
    }
    SVARS_FUNC_MODIFIER void setNegativeHandlesReserved(bool val)
    {
       self->setNegativeHandlesReserved(val);
    }
    SVARS_FUNC_MODIFIER OdUInt32 getVerticalApplicationsMode() const
    {
      return self->getVerticalApplicationsMode();
    }
    SVARS_FUNC_MODIFIER void setVerticalApplicationsMode(OdUInt32 val)
    {
       self->setVerticalApplicationsMode(val);
    }
    SVARS_FUNC_MODIFIER bool getEnableAcisAudit() const
    {
      return self->getEnableAcisAudit();
    }
    SVARS_FUNC_MODIFIER void setEnableAcisAudit(bool val)
    {
       self->setEnableAcisAudit(val);
    }
    SVARS_FUNC_MODIFIER bool getHonourLockedLayer() const
    {
      return self->getHonourLockedLayer();
    }
    SVARS_FUNC_MODIFIER void setHonourLockedLayer(bool val)
    {
       self->setHonourLockedLayer(val);
    }
    SVARS_FUNC_MODIFIER bool getTableIndicator() const
    {
      return self->getTableIndicator();
    }
    SVARS_FUNC_MODIFIER void setTableIndicator(bool val)
    {
       self->setTableIndicator(val);
    }
    SVARS_FUNC_MODIFIER bool getTableLinkIndicator() const
    {
      return self->getTableLinkIndicator();
    }
    SVARS_FUNC_MODIFIER void setTableLinkIndicator(bool val)
    {
       self->setTableLinkIndicator(val);
    }
    SVARS_FUNC_MODIFIER bool getTableSelectIndicator() const
    {
      return self->getTableSelectIndicator();
    }
    SVARS_FUNC_MODIFIER void setTableSelectIndicator(bool val)
    {
       self->setTableSelectIndicator(val);
    }
    SVARS_FUNC_MODIFIER OdUInt32 getTableIndicatorColor() const
    {
      return self->getTableIndicatorColor();
    }
    SVARS_FUNC_MODIFIER void setTableIndicatorColor(OdUInt32 val)
    {
       self->setTableIndicatorColor(val);
    }
    SVARS_FUNC_MODIFIER OdString getPDFIMPORTIMAGEPATH() const
    {
      return self->getPDFIMPORTIMAGEPATH();
    }
    SVARS_FUNC_MODIFIER void setPDFIMPORTIMAGEPATH(OdString val)
    {
       self->setPDFIMPORTIMAGEPATH(val);
    }
    SVARS_FUNC_MODIFIER bool getPartialViewingMode() const
    {
      return self->getPartialViewingMode();
    }
    SVARS_FUNC_MODIFIER void setPartialViewingMode(bool val)
    {
       self->setPartialViewingMode(val);
    }
    SVARS_FUNC_MODIFIER OdInt16 getXREFREGAPPCTL() const
    {
      return self->getXREFREGAPPCTL();
    }
    SVARS_FUNC_MODIFIER void setXREFREGAPPCTL(OdInt16 val)
    {
       self->setXREFREGAPPCTL(val);
    }
}



