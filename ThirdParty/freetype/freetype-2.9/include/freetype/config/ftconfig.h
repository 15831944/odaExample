/***************************************************************************/
/*                                                                         */
/*  ftconfig.h                                                             */
/*                                                                         */
/*    ANSI-specific configuration file (specification only).               */
/*                                                                         */
/*  Copyright 1996-2018 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* This header file contains a number of macro definitions that are used */
  /* by the rest of the engine.  Most of the macros here are automatically */
  /* determined at compile time, and you should not need to change it to   */
  /* port FreeType, except to compile the library with a non-ANSI          */
  /* compiler.                                                             */
  /*                                                                       */
  /* Note however that if some specific modifications are needed, we       */
  /* advise you to place a modified copy in your build directory.          */
  /*                                                                       */
  /* The build directory is usually `builds/<system>', and contains        */
  /* system-specific files that are always included first when building    */
  /* the library.                                                          */
  /*                                                                       */
  /* This ANSI version should stay in `include/config/'.                   */
  /*                                                                       */
  /*************************************************************************/

#ifndef FTCONFIG_H_
#define FTCONFIG_H_

#include <ft2build.h>
#include FT_CONFIG_OPTIONS_H
#include FT_CONFIG_STANDARD_LIBRARY_H


FT_BEGIN_HEADER

 /*
 * If you *really* need a unique prefix for all types and library functions,
 * compile with -DFREETYPE_PREFIX. The "standard" zlib should be compiled without it.
 * Even better than compiling with -DFREETYPE_PREFIX would be to use configure to set
 * this permanently in zconf.h using "./configure --zprefix".
 */
#ifndef FREETYPE_PREFIX
#define FREETYPE_PREFIX
#endif
#ifdef FREETYPE_PREFIX     /* may be set to #if 1 by ./configure */
#  define FREETYPE_PREFIX_SET

#define ODA_FT(a) oda_##a
// Prefix 'x' prevents symbols from being redefined when FREETYPE_PREFIX is defined 
#define ODA_FREETYPE_UNIQUE_Z(a) x##a
/* all linked symbols and init macros */

//Types
#  define FT_Int16            ODA_FT(FT_Int16)
#  define FT_UInt16            ODA_FT(FT_UInt16)
#  define FT_Int32            ODA_FT(FT_Int32)
#  define FT_UInt32            ODA_FT(FT_UInt32)
#  define FT_Int64            ODA_FT(FT_Int64)
#  define FT_UInt64            ODA_FT(FT_UInt64)
#  define FT_Fast            ODA_FT(FT_Fast)
#  define FT_UFast            ODA_FT(FT_UFast)

//freetype.h

#  define FT_Module_Interface ODA_FT(FT_Module_Interface)
#  define FT_Glyph_Metrics_            ODA_FT(FT_Glyph_Metrics_)
#  define FT_Bitmap_Size_              ODA_FT(FT_Bitmap_Size_)
#  define FT_Library            ODA_FT(FT_Library)
#  define FT_Module            ODA_FT(FT_Module)
#  define FT_Driver                ODA_FT(FT_Driver)
#  define FT_Renderer            ODA_FT(FT_Renderer)
#  define FT_Face            ODA_FT(FT_Face)
#  define FT_Size            ODA_FT(FT_Size)
#  define FT_GlyphSlot            ODA_FT(FT_GlyphSlot)
#  define FT_CharMap            ODA_FT(FT_CharMap)
#  define FT_CharMapRec            ODA_FT(FT_CharMapRec)
#  define FT_Face_Internal            ODA_FT(FT_Face_Internal)
#  define FT_FaceRec            ODA_FT(FT_FaceRec)
#  define FT_SubGlyph            ODA_FT(FT_SubGlyph)
#  define FT_Slot_Internal            ODA_FT(FT_Slot_Internal)
#  define FT_GlyphSlotRec            ODA_FT(FT_GlyphSlotRec)
#  define FT_Size_Metrics ODA_FT(FT_Size_Metrics)
#  define FT_SizeRec  ODA_FT(FT_SizeRec)
//methods
#  define FT_Init_FreeType            ODA_FT(FT_Init_FreeType)
#  define FT_Done_FreeType            ODA_FT(FT_Done_FreeType)
#  define FT_Parameter            ODA_FT(FT_Parameter)
#  define FT_Open_Args            ODA_FT(FT_Open_Args)
#  define FT_New_Face            ODA_FT(FT_New_Face)
#  define FT_New_Memory_Face            ODA_FT(FT_New_Memory_Face)

#  define FT_Open_Face            ODA_FT(FT_Open_Face)
#  define FT_Attach_File            ODA_FT(FT_Attach_File)
#  define FT_Attach_Stream            ODA_FT(FT_Attach_Stream)
#  define FT_Reference_Face            ODA_FT(FT_Reference_Face)
#  define FT_Done_Face            ODA_FT(FT_Done_Face)
#  define FT_Select_Size            ODA_FT(FT_Select_Size)
#  define FT_Size_Request_Type            ODA_FT(FT_Size_Request_Type)
#  define FT_Size_RequestRec            ODA_FT(FT_Size_RequestRec)
#  define FT_Request_Size            ODA_FT(FT_Request_Size)
#  define FT_Set_Char_Size            ODA_FT(FT_Set_Char_Size)
#  define FT_Set_Pixel_Sizes            ODA_FT(FT_Set_Pixel_Sizes)
#  define FT_Load_Glyph            ODA_FT(FT_Load_Glyph)
#  define FT_Load_Char            ODA_FT(FT_Load_Char)
#  define FT_Set_Transform            ODA_FT(FT_Set_Transform)
#  define FT_Render_Glyph            ODA_FT(FT_Render_Glyph)
#  define FT_Get_Kerning            ODA_FT(FT_Get_Kerning)
#  define FT_Get_Track_Kerning            ODA_FT(FT_Get_Track_Kerning)
#  define FT_Get_Glyph_Name            ODA_FT(FT_Get_Glyph_Name)
#  define FT_Get_Postscript_Name            ODA_FT(FT_Get_Postscript_Name)
#  define FT_Select_Charmap            ODA_FT(FT_Select_Charmap)
#  define FT_Set_Charmap            ODA_FT(FT_Set_Charmap)
#  define FT_Get_Charmap_Index            ODA_FT(FT_Get_Charmap_Index)
#  define FT_Get_Char_Index            ODA_FT(FT_Get_Char_Index)
#  define FT_Get_First_Char            ODA_FT(FT_Get_First_Char)
#  define FT_Get_Next_Char            ODA_FT(FT_Get_Next_Char)
#  define FT_Face_Properties            ODA_FT(FT_Face_Properties)
#  define FT_Get_Name_Index            ODA_FT(FT_Get_Name_Index)
#  define FT_Get_SubGlyph_Info            ODA_FT(FT_Get_SubGlyph_Info)
#  define FT_Get_FSType_Flags            ODA_FT(FT_Get_FSType_Flags)
#  define FT_Face_GetCharVariantIndex            ODA_FT(FT_Face_GetCharVariantIndex)
#  define FT_Face_GetCharVariantIsDefault            ODA_FT(FT_Face_GetCharVariantIsDefault)
#  define FT_Face_GetVariantSelectors            ODA_FT(FT_Face_GetVariantSelectors)
#  define FT_Face_GetVariantsOfChar            ODA_FT(FT_Face_GetVariantsOfChar)
#  define FT_Face_GetCharsOfVariant            ODA_FT(FT_Face_GetCharsOfVariant)
#  define FT_MulDiv            ODA_FT(FT_MulDiv)
#  define FT_DivFix            ODA_FT(FT_DivFix)
#  define FT_RoundFix            ODA_FT(FT_RoundFix)
#  define FT_CeilFix            ODA_FT(FT_CeilFix)
#  define FT_FloorFix            ODA_FT(FT_FloorFix)
#  define FT_Vector_Transform            ODA_FT(FT_Vector_Transform)
#  define FT_Library_Version            ODA_FT(FT_Library_Version)
#  define FT_Face_CheckTrueTypePatents            ODA_FT(FT_Face_CheckTrueTypePatents)
#  define FT_Face_SetUnpatentedHinting            ODA_FT(FT_Face_SetUnpatentedHinting)

//fttypes.h

#  define FT_Byte ODA_FT(FT_Byte)
#  define FT_Bytes      ODA_FT(FT_Bytes)
#  define FT_Char       ODA_FT(FT_Char)
#  define FT_Int        ODA_FT(FT_Int)
#  define FT_UInt       ODA_FT(FT_UInt)
#  define FT_Int16      ODA_FT(FT_Int16)
#  define FT_UInt16     ODA_FT(FT_UInt16)
#  define FT_Int32      ODA_FT(FT_Int32)
#  define FT_UInt32     ODA_FT(FT_UInt32)
#  define FT_Int64      ODA_FT(FT_Int64)
#  define FT_UInt64     ODA_FT(FT_UInt64)
#  define FT_Short      ODA_FT(FT_Short)
#  define FT_UShort     ODA_FT(FT_UShort)
#  define FT_Long       ODA_FT(FT_Long)
#  define FT_ULong      ODA_FT(FT_ULong)
#  define FT_Bool       ODA_FT(FT_Bool)
#  define FT_Offset     ODA_FT(FT_Offset)
#  define FT_PtrDist    ODA_FT(FT_PtrDist)
#  define FT_String     ODA_FT(FT_String)
#  define FT_Tag        ODA_FT(FT_Tag)
#  define FT_Error      ODA_FT(FT_Error)
#  define FT_Fixed      ODA_FT(FT_Fixed)
#  define FT_Pointer    ODA_FT(FT_Pointer)
#  define FT_Pos        ODA_FT(FT_Pos)
#  define FT_Vector     ODA_FT(FT_Vector)
#  define FT_BBox       ODA_FT(FT_BBox)
#  define FT_Matrix     ODA_FT(FT_Matrix)
#  define FT_FWord      ODA_FT(FT_FWord)
#  define FT_UFWord     ODA_FT(FT_UFWord)
#  define FT_F2Dot14    ODA_FT(FT_F2Dot14)
#  define FT_UnitVector ODA_FT(FT_UnitVector)
#  define FT_F26Dot6    ODA_FT(FT_F26Dot6)
#  define FT_Data       ODA_FT(FT_Data)
//?????
#  define FT_Generic    ODA_FT(FT_Generic)
#  define FT_Generic_Finalizer    ODA_FT(FT_Generic_Finalizer)
#  define FT_Bitmap               ODA_FT(FT_Bitmap)
#  define FT_Pixel_Mode           ODA_FT(FT_Pixel_Mode)
#  define FT_Palette_Mode         ODA_FT(FT_Palette_Mode)
#  define FT_Glyph_Format         ODA_FT(FT_Glyph_Format)

//#  define FT_MAKE_TAG   ODA_FT(FT_MAKE_TAG)
#  define FT_Generic    ODA_FT(FT_Generic)
#  define FT_Generic_Finalizer     ODA_FT(FT_Generic_Finalizer)
#  define FT_Bitmap     ODA_FT(FT_Bitmap)
#  define FT_Pixel_Mode ODA_FT(FT_Pixel_Mode)
#  define FT_Palette_Mode          ODA_FT(FT_Palette_Mode)
#  define FT_Glyph_Format          ODA_FT(FT_Glyph_Format)
#  define FT_ListNode  ODA_FT(FT_ListNode)
#  define FT_List  ODA_FT(FT_List)
#  define FT_ListNodeRec  ODA_FT(FT_ListNodeRec)
#  define FT_ListRec  ODA_FT(FT_ListRec)

//ftmodapi.h
#  define FT_Module              ODA_FT(FT_Module)
#  define FT_Module_Constructor  ODA_FT(FT_Module_Constructor)
#  define FT_Module_Destructor   ODA_FT(FT_Module_Destructor)
#  define FT_Module_Requester    ODA_FT(FT_Module_Requester)
#  define FT_Module_Class        ODA_FT(FT_Module_Class)
#  define FT_Add_Module          ODA_FT(FT_Add_Module)
#  define FT_Get_Module          ODA_FT(FT_Get_Module)
#  define FT_Remove_Module       ODA_FT(FT_Remove_Module)
#  define FT_Add_Default_Modules ODA_FT(FT_Add_Default_Modules)
#  define FT_Property_Set        ODA_FT(FT_Property_Set)
#  define FT_Property_Get        ODA_FT(FT_Property_Get)
#  define FT_Set_Default_Properties   ODA_FT(FT_Set_Default_Properties)    
#  define FT_New_Library         ODA_FT(FT_New_Library)
#  define FT_Done_Library        ODA_FT(FT_Done_Library)
#  define FT_Reference_Library   ODA_FT(FT_Reference_Library)
#  define FT_Renderer            ODA_FT(FT_Renderer)
#  define FT_Renderer_Class      ODA_FT(FT_Renderer_Class)
#  define FT_Get_Renderer        ODA_FT(FT_Get_Renderer)
#  define FT_Set_Renderer        ODA_FT(FT_Set_Renderer)
#  define FT_Set_Debug_Hook      ODA_FT(FT_Set_Debug_Hook)

//ftstroke.h
#  define FT_Stroker             ODA_FT(FT_Stroker)
#  define FT_Stroker_LineJoin     ODA_FT(FT_Stroker_LineJoin)
#  define FT_Stroker_LineCap     ODA_FT(FT_Stroker_LineCap)
#  define FT_StrokerBorder     ODA_FT(FT_StrokerBorder)
#  define FT_Outline_GetInsideBorder     ODA_FT(FT_Outline_GetInsideBorder)
#  define FT_Outline_GetOutsideBorder     ODA_FT(FT_Outline_GetOutsideBorder)
#  define FT_Glyph_Stroke     ODA_FT(FT_Glyph_Stroke)
#  define FT_Glyph_StrokeBorder     ODA_FT(FT_Glyph_StrokeBorder)
#  define FT_Stroker_New     ODA_FT(FT_Stroker_New)
#  define FT_Stroker_Set     ODA_FT(FT_Stroker_Set)
#  define FT_Stroker_Rewind     ODA_FT(FT_Stroker_Rewind)
#  define FT_Stroker_ParseOutline     ODA_FT(FT_Stroker_ParseOutline)
#  define FT_Stroker_Done     ODA_FT(FT_Stroker_Done)
#  define FT_Stroker_BeginSubPath     ODA_FT(FT_Stroker_BeginSubPath)
#  define FT_Stroker_EndSubPath     ODA_FT(FT_Stroker_EndSubPath)
#  define FT_Stroker_LineTo     ODA_FT(FT_Stroker_LineTo)
#  define FT_Stroker_ConicTo     ODA_FT(FT_Stroker_ConicTo)
#  define FT_Stroker_CubicTo     ODA_FT(FT_Stroker_CubicTo)
#  define FT_Stroker_GetBorderCounts     ODA_FT(FT_Stroker_GetBorderCounts)
#  define FT_Stroker_ExportBorder     ODA_FT(FT_Stroker_ExportBorder)
#  define FT_Stroker_GetCounts     ODA_FT(FT_Stroker_GetCounts)
#  define FT_Stroker_Export     ODA_FT(FT_Stroker_Export)

// tttables.h
#  define TT_Header                    ODA_FT(TT_Header)                   
#  define TT_HoriHeader                ODA_FT(TT_HoriHeader                )
#  define TT_VertHeader                ODA_FT(TT_VertHeader                )
#  define TT_OS2                       ODA_FT(TT_OS2                       )
#  define TT_Postscript                ODA_FT(TT_Postscript                )
#  define TT_PCLT                      ODA_FT(TT_PCLT                      )
#  define TT_MaxProfile                ODA_FT(TT_MaxProfile                )

#  define FT_Sfnt_Tag                  ODA_FT(FT_Sfnt_Tag                  )
#  define FT_Get_Sfnt_Table            ODA_FT(FT_Get_Sfnt_Table            )
#  define FT_Load_Sfnt_Table           ODA_FT(FT_Load_Sfnt_Table           )
#  define FT_Sfnt_Table_Info           ODA_FT(FT_Sfnt_Table_Info           )

#  define FT_Get_CMap_Language_ID      ODA_FT(FT_Get_CMap_Language_ID      )
#  define FT_Get_CMap_Format   ODA_FT(FT_Get_CMap_Format   )

//ftfntfmt.h
#define FT_Get_Font_Format ODA_FT(FT_Get_Font_Format)
#define FT_Get_X11_Font_Format ODA_FT(FT_Get_X11_Font_Format)

//FTGASP_H_
#define FT_Get_Gasp ODA_FT(FT_Get_Gasp)

//T1TABLES_H_
#define	 PS_FontInfoRec         ODA_FT(	 PS_FontInfoRec  )
#define	      PS_FontInfo         ODA_FT(	      PS_FontInfo      )
#define	      PS_PrivateRec       ODA_FT(	      PS_PrivateRec       )
#define	      PS_Private          ODA_FT(	      PS_Private          )
#define	      CID_FaceDictRec     ODA_FT(	      CID_FaceDictRec     )
#define	      CID_FaceDict        ODA_FT(	      CID_FaceDict        )
#define	      CID_FaceInfoRec     ODA_FT(	      CID_FaceInfoRec     )
#define	      CID_FaceInfo         ODA_FT(	      CID_FaceInfo         )
#define	      FT_Has_PS_Glyph_Names    	ODA_FT(	      FT_Has_PS_Glyph_Names    	)
#define	      FT_Get_PS_Font_Info ODA_FT(	      FT_Get_PS_Font_Info )
#define	      FT_Get_PS_Font_Private 	ODA_FT(	      FT_Get_PS_Font_Private  	)
#define	      FT_Get_PS_Font_Value      ODA_FT(	      FT_Get_PS_Font_Value  )
#define	      T1_Blend_Flags      ODA_FT(	      T1_Blend_Flags      )
#define	      T1_EncodingType     ODA_FT(	      T1_EncodingType     )
#define	      PS_Dict_Keys                         	ODA_FT(	      PS_Dict_Keys                         	)

//FTWINFNT_H_
#define	     FT_WinFNT_HeaderRec ODA_FT(FT_WinFNT_HeaderRec)
#define	     FT_Get_WinFNT_Header ODA_FT(FT_Get_WinFNT_Header)

//FTTRIGON_H_
//#define	FT_Fixed	ODA_FT(	FT_Fixed	)
#define	FT_Angle	ODA_FT(	FT_Angle	)
#define	FT_Sin	ODA_FT(	FT_Sin	)
#define	FT_Cos	ODA_FT(	FT_Cos	)
#define	FT_Tan	ODA_FT(	FT_Tan	)
#define	FT_Atan2	ODA_FT(	FT_Atan2	)
#define	FT_Angle_Diff	ODA_FT(	FT_Angle_Diff	)
#define	FT_Vector_Unit	ODA_FT(	FT_Vector_Unit	)
#define	FT_Vector_Rotate	ODA_FT(	FT_Vector_Rotate	)
#define	FT_Vector_Length	ODA_FT(	FT_Vector_Length	)
#define	FT_Vector_Polarize	ODA_FT(	FT_Vector_Polarize	)
#define	FT_Vector_From_Polar	ODA_FT(	FT_Vector_From_Polar	)
//FTSYSTEM_H_
#define	FT_Memory	ODA_FT(	FT_Memory	)
#define	FT_Alloc_Func	ODA_FT(	FT_Alloc_Func	)
#define	FT_Free_Func	ODA_FT(	FT_Free_Func	)
#define	FT_Realloc_Func	ODA_FT(	FT_Realloc_Func	)
#define	FT_Stream	ODA_FT(	FT_Stream	)
#define	FT_StreamDesc	ODA_FT(	FT_StreamDesc	)
#define	FT_Stream_IoFunc	ODA_FT(	FT_Stream_IoFunc	)
#define	FT_Stream_CloseFunc ODA_FT(FT_Stream_CloseFunc	)
#define	FT_StreamRec	ODA_FT(	FT_StreamRec	)

//FTSYNTH_H_
#define	FT_GlyphSlot_Embolden ODA_FT(	FT_GlyphSlot_Embolden	)
#define	FT_GlyphSlot_Oblique  ODA_FT(	FT_GlyphSlot_Oblique	)
//FTSNAMES_H_
#define	FT_SfntName	ODA_FT(	FT_SfntName	)
#define	FT_Get_Sfnt_Name_Count	ODA_FT(	FT_Get_Sfnt_Name_Count	)
#define	FT_Get_Sfnt_Name	ODA_FT(	FT_Get_Sfnt_Name	)
#define	FT_SfntLangTag	ODA_FT(	FT_SfntLangTag	)
#define	FT_Get_Sfnt_LangTag	ODA_FT(	FT_Get_Sfnt_LangTag	)

//FTSIZES_H_
#define FT_New_Size ODA_FT(	FT_New_Size	)
#define FT_Done_Size ODA_FT(	FT_Done_Size	)
#define FT_Activate_Size ODA_FT(	FT_Activate_Size	)
//FTRENDER_H_
#define	FT_Glyph_InitFunc	ODA_FT(	FT_Glyph_InitFunc	)
#define	FT_Glyph_DoneFunc	ODA_FT(	FT_Glyph_DoneFunc	)
#define	FT_Glyph_TransformFunc	ODA_FT(	FT_Glyph_TransformFunc	)
#define	FT_Glyph_GetBBoxFunc	ODA_FT(	FT_Glyph_GetBBoxFunc	)
#define	FT_Glyph_CopyFunc	ODA_FT(	FT_Glyph_CopyFunc	)
#define	FT_Glyph_PrepareFunc	ODA_FT(	FT_Glyph_PrepareFunc	)
#define	FT_Glyph_Class_	ODA_FT(	FT_Glyph_Class_	)
#define	FT_Renderer_RenderFunc	ODA_FT(	FT_Renderer_RenderFunc	)
#define	FT_Renderer_TransformFunc	ODA_FT(	FT_Renderer_TransformFunc	)
#define	FT_Renderer_GetCBoxFunc	ODA_FT(	FT_Renderer_GetCBoxFunc	)
#define	FT_Renderer_SetModeFunc	ODA_FT(	FT_Renderer_SetModeFunc	)

//FTPFR_H_
#define	FT_Get_PFR_Metrics	ODA_FT(	FT_Get_PFR_Metrics	)
#define	    FT_Get_PFR_Kerning	ODA_FT(	    FT_Get_PFR_Kerning	)
#define	    FT_Get_PFR_Advance	ODA_FT(	    FT_Get_PFR_Advance	)
//FTPARAMS_H_
//FTOUTLN_H_
#define	FT_Outline            ODA_FT(	FT_Outline            )
#define	FT_Outline_New        ODA_FT(	FT_Outline_New        )
#define	FT_Outline_Done       ODA_FT(	FT_Outline_Done       )
#define	FT_Outline_Copy       ODA_FT(	FT_Outline_Copy       )
#define	FT_Outline_Translate  ODA_FT(	FT_Outline_Translate  )
#define	FT_Outline_Transform  ODA_FT(	FT_Outline_Transform  )
#define	FT_Outline_Embolden   ODA_FT(	FT_Outline_Embolden   )
#define	FT_Outline_EmboldenXY ODA_FT(	FT_Outline_EmboldenXY )
#define	FT_Outline_Reverse    ODA_FT(	FT_Outline_Reverse    )
#define	FT_Outline_Check        ODA_FT(	FT_Outline_Check        )
#define	FT_Outline_Get_CBox   ODA_FT(	FT_Outline_Get_CBox   )
#define	FT_Outline_Get_BBox     ODA_FT(	FT_Outline_Get_BBox     )
#define	FT_Outline_Get_Bitmap ODA_FT(	FT_Outline_Get_Bitmap )
#define	FT_Outline_Render     ODA_FT(	FT_Outline_Render     )
#define	FT_Outline_Decompose  ODA_FT(	FT_Outline_Decompose  )
#define	FT_Outline_Funcs      ODA_FT(	FT_Outline_Funcs      )
#define	FT_Outline_MoveToFunc ODA_FT(	FT_Outline_MoveToFunc )
#define	FT_Outline_LineToFunc ODA_FT(	FT_Outline_LineToFunc )
#define	FT_Outline_ConicToFunc                                             	ODA_FT(	FT_Outline_ConicToFunc                                             	)
#define	FT_Outline_CubicToFunc ODA_FT(	FT_Outline_CubicToFunc )
#define	FT_Orientation        ODA_FT(	FT_Orientation        )
#define	FT_Outline_Get_Orientation       	ODA_FT(	FT_Outline_Get_Orientation       	)
//FTOTVAL_H_
#define	FT_OpenType_Validate                ODA_FT(	FT_OpenType_Validate       	)
#define	FT_OpenType_Free                    ODA_FT(	FT_OpenType_Free       	)
//FTMM_H_
#define	FT_MM_Axis	ODA_FT(	FT_MM_Axis	)
#define	FT_Multi_Master	ODA_FT(	FT_Multi_Master	)
#define	FT_Var_Axis	ODA_FT(	FT_Var_Axis	)
#define	FT_Var_Named_Style	ODA_FT(	FT_Var_Named_Style	)
#define	FT_MM_Var	ODA_FT(	FT_MM_Var	)
#define	FT_Get_Multi_Master	ODA_FT(	FT_Get_Multi_Master	)
#define	FT_Get_MM_Var	ODA_FT(	FT_Get_MM_Var	)
#define	FT_Done_MM_Var	ODA_FT(	FT_Done_MM_Var	)
#define	FT_Set_MM_Design_Coordinates	ODA_FT(	FT_Set_MM_Design_Coordinates	)
#define	FT_Set_Var_Design_Coordinates	ODA_FT(	FT_Set_Var_Design_Coordinates	)
#define	FT_Get_Var_Design_Coordinates	ODA_FT(	FT_Get_Var_Design_Coordinates	)
#define	FT_Set_MM_Blend_Coordinates	ODA_FT(	FT_Set_MM_Blend_Coordinates	)
#define	FT_Get_MM_Blend_Coordinates	ODA_FT(	FT_Get_MM_Blend_Coordinates	)
#define	FT_Set_Var_Blend_Coordinates	ODA_FT(	FT_Set_Var_Blend_Coordinates	)
#define	FT_Get_Var_Blend_Coordinates	ODA_FT(	FT_Get_Var_Blend_Coordinates	)
#define	FT_Get_Var_Axis_Flags	ODA_FT(	FT_Get_Var_Axis_Flags	)
#define	FT_Set_Named_Instance	ODA_FT(	FT_Set_Named_Instance	)
//FTMAC_H_
#define	FT_New_Face_From_FOND	ODA_FT(	FT_New_Face_From_FOND	)
#define	FT_GetFile_From_Mac_Name	ODA_FT(	FT_GetFile_From_Mac_Name	)
#define	FT_GetFile_From_Mac_ATS_Name	ODA_FT(	FT_GetFile_From_Mac_ATS_Name	)
#define	FT_GetFilePath_From_Mac_ATS_Name	ODA_FT(	FT_GetFilePath_From_Mac_ATS_Name	)
#define	FT_New_Face_From_FSSpec	ODA_FT(	FT_New_Face_From_FSSpec	)
#define	FT_New_Face_From_FSRef	ODA_FT(	FT_New_Face_From_FSRef	)
//FTLZW_H_
#define	FT_Stream_OpenLZW ODA_FT(FT_Stream_OpenLZW)
//FTLIST_H_
//#define	FT_List               	ODA_FT(	FT_List               	)
//#define	FT_ListNode           	ODA_FT(	FT_ListNode           	)
//#define	FT_ListRec            	ODA_FT(	FT_ListRec            	)
//#define	FT_ListNodeRec        	ODA_FT(	FT_ListNodeRec        	)
#define	FT_List_Add           	ODA_FT(	FT_List_Add           	)
#define	FT_List_Insert        	ODA_FT(	FT_List_Insert        	)
#define	FT_List_Find          	ODA_FT(	FT_List_Find          	)
#define	FT_List_Remove        	ODA_FT(	FT_List_Remove        	)
#define	FT_List_Up            	ODA_FT(	FT_List_Up            	)
#define	FT_List_Iterate       	ODA_FT(	FT_List_Iterate       	)
#define	FT_List_Iterator      	ODA_FT(	FT_List_Iterator      	)
#define	FT_List_Finalize      	ODA_FT(	FT_List_Finalize      	)
#define	FT_List_Destructor   	ODA_FT(	FT_List_Destructor   	)

//FTLCDFIL_H_
#define	FT_LcdFilter	ODA_FT(	FT_LcdFilter	)
#define	    FT_Library_SetLcdFilter	ODA_FT(	    FT_Library_SetLcdFilter	)
#define	    FT_Library_SetLcdFilterWeights	ODA_FT(	    FT_Library_SetLcdFilterWeights	)
#define	    FT_LcdFiveTapFilter	ODA_FT(	    FT_LcdFiveTapFilter	)
//FTINCREM_H_
#define	FT_Incremental	ODA_FT(	FT_Incremental	)
#define	FT_Incremental_MetricsRec	ODA_FT(	FT_Incremental_MetricsRec	)
#define	FT_Incremental_Metrics	ODA_FT(	FT_Incremental_Metrics	)
#define	FT_Incremental_GetGlyphDataFunc	ODA_FT(	FT_Incremental_GetGlyphDataFunc	)
#define	FT_Incremental_FreeGlyphDataFunc	ODA_FT(	FT_Incremental_FreeGlyphDataFunc	)
#define	FT_Incremental_GetGlyphMetricsFunc	ODA_FT(	FT_Incremental_GetGlyphMetricsFunc	)
#define	FT_Incremental_FuncsRec	ODA_FT(	FT_Incremental_FuncsRec	)
#define	FT_Incremental_InterfaceRec	ODA_FT(	FT_Incremental_InterfaceRec	)
#define	FT_Incremental_Interface	ODA_FT(	FT_Incremental_Interface	)
//FTIMAGE_H_
#define	FT_Raster                       	ODA_FT(	FT_Raster                       	)
#define	FT_Span                         	ODA_FT(	FT_Span                         	)
#define	FT_SpanFunc                     	ODA_FT(	FT_SpanFunc                     	)
#define	FT_Raster_Params                	ODA_FT(	FT_Raster_Params                	)
#define	FT_RASTER_FLAG_XXX              	ODA_FT(	FT_RASTER_FLAG_XXX              	)
#define	FT_Raster_NewFunc               	ODA_FT(	FT_Raster_NewFunc               	)
#define	FT_Raster_DoneFunc              	ODA_FT(	FT_Raster_DoneFunc              	)
#define	FT_Raster_ResetFunc             	ODA_FT(	FT_Raster_ResetFunc             	)
#define	FT_Raster_SetModeFunc           	ODA_FT(	FT_Raster_SetModeFunc           	)
#define	FT_Raster_RenderFunc            	ODA_FT(	FT_Raster_RenderFunc            	)
#define	FT_Raster_Funcs  	ODA_FT(	FT_Raster_Funcs  	)

#define	FT_Raster_BitTest_Func  	ODA_FT(	FT_Raster_BitTest_Func  	)
#define	FT_Raster_NewFunc  	ODA_FT(	FT_Raster_NewFunc  	)
#define	FT_Raster_DoneFunc  	ODA_FT(	FT_Raster_DoneFunc  	)
#define	FT_Raster_ResetFunc  	ODA_FT(	FT_Raster_ResetFunc  	)
#define	FT_Raster_SetModeFunc  	ODA_FT(	FT_Raster_SetModeFunc  	)
#define	FT_Raster_RenderFunc  	ODA_FT(	FT_Raster_RenderFunc  	)

//FTGZIP_H_
#define	FT_Stream_OpenGzip ODA_FT(	FT_Stream_OpenGzip  	)
#define	FT_Gzip_Uncompress ODA_FT(	FT_Gzip_Uncompress  	)

//FTGXVAL_H_
#define	FT_TrueTypeGX_Validate ODA_FT(	FT_TrueTypeGX_Validate  	)
#define	FT_TrueTypeGX_Free ODA_FT(	FT_TrueTypeGX_Free  	)
#define	FT_ClassicKern_Validate ODA_FT(	FT_ClassicKern_Validate  	)
#define	FT_ClassicKern_Free ODA_FT(	FT_ClassicKern_Free  	)

//FTGLYPH_H_
#define	FT_Glyph_Class	ODA_FT(	FT_Glyph_Class	)
#define	FT_GlyphRec	ODA_FT(	FT_GlyphRec	)
#define	FT_BitmapGlyph	ODA_FT(	FT_BitmapGlyph	)
#define	FT_BitmapGlyphRec	ODA_FT(	FT_BitmapGlyphRec	)
#define	FT_OutlineGlyph	ODA_FT(	FT_OutlineGlyph	)
#define	FT_OutlineGlyphRec	ODA_FT(	FT_OutlineGlyphRec	)
#define	FT_Get_Glyph	ODA_FT(	FT_Get_Glyph	)
#define	FT_Glyph_Copy	ODA_FT(	FT_Glyph_Copy	)
#define	FT_Glyph_Transform	ODA_FT(	FT_Glyph_Transform	)
#define	FT_Glyph_BBox_Mode	ODA_FT(	FT_Glyph_BBox_Mode	)
#define	FT_Glyph_Get_CBox	ODA_FT(	FT_Glyph_Get_CBox	)
#define	FT_Glyph_To_Bitmap	ODA_FT(	FT_Glyph_To_Bitmap	)
#define	FT_Done_Glyph	ODA_FT(	FT_Done_Glyph	)
#define	FT_Matrix_Multiply	ODA_FT(	FT_Matrix_Multiply	)
#define	FT_Matrix_Invert	ODA_FT(	FT_Matrix_Invert	)
//FTGASP_H_
//#define	FT_Get_Gasp	ODA_FT(	FT_Get_Gasp	)

//FTDRIVER_H_
#define	FT_Prop_GlyphToScriptMap_	ODA_FT(	FT_Prop_GlyphToScriptMap_	)
#define	FT_Prop_GlyphToScriptMap	ODA_FT(	FT_Prop_GlyphToScriptMap	)
#define	FT_Prop_IncreaseXHeight	ODA_FT(	FT_Prop_IncreaseXHeight	)
//FTCID_H_
#define	FT_Get_CID_Registry_Ordering_Supplement ODA_FT(	FT_Get_CID_Registry_Ordering_Supplement	)
#define	FT_Get_CID_Is_Internally_CID_Keyed      ODA_FT(	FT_Get_CID_Is_Internally_CID_Keyed	)
#define	FT_Get_CID_From_Glyph_Index             ODA_FT(	FT_Get_CID_From_Glyph_Index	)
//FTCACHE_H_
#define	FTC_Manager	ODA_FT(	FTC_Manager	)
#define	FTC_FaceID	ODA_FT(	FTC_FaceID	)
#define	FTC_Face_Requester	ODA_FT(	FTC_Face_Requester	)
#define	FTC_Manager_New	ODA_FT(	FTC_Manager_New	)
#define	FTC_Manager_Reset	ODA_FT(	FTC_Manager_Reset	)
#define	FTC_Manager_Done	ODA_FT(	FTC_Manager_Done	)
#define	FTC_Manager_LookupFace	ODA_FT(	FTC_Manager_LookupFace	)
#define	FTC_Manager_LookupSize	ODA_FT(	FTC_Manager_LookupSize	)
#define	FTC_Manager_RemoveFaceID	ODA_FT(	FTC_Manager_RemoveFaceID	)
#define	FTC_Node	ODA_FT(	FTC_Node	)
#define	FTC_Node_Unref	ODA_FT(	FTC_Node_Unref	)
#define	FTC_ImageCache	ODA_FT(	FTC_ImageCache	)
#define	FTC_ImageCache_New	ODA_FT(	FTC_ImageCache_New	)
#define	FTC_ImageCache_Lookup	ODA_FT(	FTC_ImageCache_Lookup	)
#define	FTC_SBit	ODA_FT(	FTC_SBit	)
#define	FTC_SBitCache	ODA_FT(	FTC_SBitCache	)
#define	FTC_SBitCache_New	ODA_FT(	FTC_SBitCache_New	)
#define	FTC_SBitCache_Lookup	ODA_FT(	FTC_SBitCache_Lookup	)
#define	FTC_CMapCache	ODA_FT(	FTC_CMapCache	)
#define	FTC_CMapCache_New	ODA_FT(	FTC_CMapCache_New	)
#define	FTC_CMapCache_Lookup      	ODA_FT(	FTC_CMapCache_Lookup      	)


//FTBZIP2_H_
#define	 FT_Stream_OpenBzip2 ODA_FT(FT_Stream_OpenBzip2)
//FTBITMAP_H_
#define	FT_Bitmap_Init	ODA_FT(	FT_Bitmap_Init	)
#define	FT_Bitmap_New	ODA_FT(	FT_Bitmap_New	)
#define	FT_Bitmap_Copy	ODA_FT(	FT_Bitmap_Copy	)
#define	FT_Bitmap_Embolden	ODA_FT(	FT_Bitmap_Embolden	)
#define	FT_Bitmap_Convert	ODA_FT(	FT_Bitmap_Convert	)
#define	FT_GlyphSlot_Own_Bitmap	ODA_FT(	FT_GlyphSlot_Own_Bitmap	)
#define	FT_Bitmap_Done	ODA_FT(	FT_Bitmap_Done	)
//FTBDF_H_
#define	BDF_PropertyType	ODA_FT(	BDF_PropertyType	)
#define	BDF_Property	ODA_FT(	BDF_Property	)
#define	BDF_PropertyRec	ODA_FT(	BDF_PropertyRec	)
#define	FT_Get_BDF_Charset_ID	ODA_FT(	FT_Get_BDF_Charset_ID	)
#define	FT_Get_BDF_Property	ODA_FT(	FT_Get_BDF_Property	)
//FTBBOX_H_
//#define FT_Outline_Get_BBox ODA_FT(FT_Outline_Get_BBox)
//FTADVANC_H_
#define FT_Get_Advance ODA_FT(FT_Get_Advance)
#define FT_Get_Advances ODA_FT(FT_Get_Advances)

//Internal
//TTTYPES_H_
#define	TTC_HeaderRec	ODA_FT(	TTC_HeaderRec	)
#define	SFNT_HeaderRec	ODA_FT(	SFNT_HeaderRec	)
#define	SFNT_Header	ODA_FT(	SFNT_Header	)
#define	TT_TableRec	ODA_FT(	TT_TableRec	)
#define	TT_Table	ODA_FT(	TT_Table	)
#define	WOFF_HeaderRec	ODA_FT(	WOFF_HeaderRec	)
#define	WOFF_Header	ODA_FT(	WOFF_Header	)
#define	WOFF_TableRec	ODA_FT(	WOFF_TableRec	)
#define	WOFF_Table	ODA_FT(	WOFF_Table	)
#define	TT_LongMetricsRec	ODA_FT(	TT_LongMetricsRec	)
#define	TT_LongMetrics	ODA_FT(	TT_LongMetrics	)
#define	TT_ShortMetrics	ODA_FT(	TT_ShortMetrics	)
#define	TT_NameRec	ODA_FT(	TT_NameRec	)
#define	TT_Name	ODA_FT(	TT_Name	)
#define	TT_LangTagRec	ODA_FT(	TT_LangTagRec	)
#define	TT_LangTag	ODA_FT(	TT_LangTag	)
#define	TT_NameTableRec	ODA_FT(	TT_NameTableRec	)
#define	TT_GaspRangeRec	ODA_FT(	TT_GaspRangeRec	)
#define	TT_GaspRange	ODA_FT(	TT_GaspRange	)
#define	TT_GaspRec	ODA_FT(	TT_GaspRec	)
#define	TT_SBit_MetricsRec	ODA_FT(	TT_SBit_MetricsRec	)
#define	TT_SBit_Metrics	ODA_FT(	TT_SBit_Metrics	)
#define	TT_SBit_SmallMetricsRec	ODA_FT(	TT_SBit_SmallMetricsRec	)
#define	TT_SBit_SmallMetrics	ODA_FT(	TT_SBit_SmallMetrics	)
#define	TT_SBit_LineMetricsRec	ODA_FT(	TT_SBit_LineMetricsRec	)
#define	TT_SBit_LineMetrics	ODA_FT(	TT_SBit_LineMetrics	)
#define	TT_SBit_RangeRec	ODA_FT(	TT_SBit_RangeRec	)
#define	TT_SBit_Range	ODA_FT(	TT_SBit_Range	)
#define	TT_SBit_StrikeRec	ODA_FT(	TT_SBit_StrikeRec	)
#define	TT_SBit_Strike	ODA_FT(	TT_SBit_Strike	)
#define	TT_SBit_ComponentRec	ODA_FT(	TT_SBit_ComponentRec	)
#define	TT_SBit_Component	ODA_FT(	TT_SBit_Component	)
#define	TT_SBit_ScaleRec	ODA_FT(	TT_SBit_ScaleRec	)
#define	TT_SBit_Scale	ODA_FT(	TT_SBit_Scale	)
#define	TT_Post_20Rec	ODA_FT(	TT_Post_20Rec	)
#define	TT_Post_20	ODA_FT(	TT_Post_20	)
#define	TT_Post_25_	ODA_FT(	TT_Post_25_	)
#define	TT_Post_25Rec	ODA_FT(	TT_Post_25Rec	)
#define	TT_Post_25	ODA_FT(	TT_Post_25	)
#define	TT_Post_NamesRec	ODA_FT(	TT_Post_NamesRec	)
#define	TT_Post_Names	ODA_FT(	TT_Post_Names	)
#define	TT_BDFRec	ODA_FT(	TT_BDFRec	)
#define	TT_BDF	ODA_FT(	TT_BDF	)
#define	TT_Face	ODA_FT(	TT_Face	)
#define	TT_FaceRec	ODA_FT(	TT_FaceRec	)
#define	TT_Interpreter	ODA_FT(	TT_Interpreter	)
#define	TT_Loader	ODA_FT(	TT_Loader	)
#define	TT_Loader_GotoTableFunc	ODA_FT(	TT_Loader_GotoTableFunc	)
#define	TT_Loader_StartGlyphFunc	ODA_FT(	TT_Loader_StartGlyphFunc	)
#define	TT_Loader_ReadGlyphFunc	ODA_FT(	TT_Loader_ReadGlyphFunc	)
#define	TT_Loader_EndGlyphFunc	ODA_FT(	TT_Loader_EndGlyphFunc	)
#define	TT_SbitTableType	ODA_FT(	TT_SbitTableType	)
#define	 TT_GlyphZoneRec	ODA_FT(	 TT_GlyphZoneRec	)
#define	 TT_GlyphZone	ODA_FT(	 TT_GlyphZone	)
#define	 TT_ExecContext	ODA_FT(	 TT_ExecContext	)
#define	 TT_Size	ODA_FT(	 TT_Size	)
#define	 TT_LoaderRec	ODA_FT(	 TT_LoaderRec	)
//T1TYPES_H_
#define	    T1_EncodingRecRec	ODA_FT(	    T1_EncodingRecRec	)
#define	    T1_Encoding	ODA_FT(	    T1_Encoding	)
#define	    PS_FontExtraRec	ODA_FT(	    PS_FontExtraRec	)
#define	    T1_FontRec	ODA_FT(	    T1_FontRec	)
#define	    T1_Font	ODA_FT(	    T1_Font	)
#define	    CID_SubrsRec	ODA_FT(	    CID_SubrsRec	)
#define	    CID_Subrs	ODA_FT(	    CID_Subrs	)
#define	    AFM_TrackKernRec	ODA_FT(	    AFM_TrackKernRec	)
#define	    AFM_TrackKern	ODA_FT(	    AFM_TrackKern	)
#define	    AFM_KernPairRec	ODA_FT(	    AFM_KernPairRec	)
#define	    AFM_KernPair	ODA_FT(	    AFM_KernPair	)
#define	    AFM_FontInfoRec	ODA_FT(	    AFM_FontInfoRec	)
#define	AFM_FontInfo	ODA_FT(	AFM_FontInfo	)
#define	T1_Face	ODA_FT(	T1_Face	)
#define	CID_Face	ODA_FT(	CID_Face	)
#define	T1_FaceRec	ODA_FT(	T1_FaceRec	)
#define	CID_FaceRec	ODA_FT(	CID_FaceRec	)
//SFNT_H_
#define	TT_Init_Face_Func	ODA_FT(	TT_Init_Face_Func	)
#define	TT_Load_Face_Func	ODA_FT(	TT_Load_Face_Func	)
#define	TT_Done_Face_Func	ODA_FT(	TT_Done_Face_Func	)
#define	TT_Load_Any_Func	ODA_FT(	TT_Load_Any_Func	)
#define	TT_Find_SBit_Image_Func	ODA_FT(	TT_Find_SBit_Image_Func	)
#define	TT_Load_SBit_Metrics_Func	ODA_FT(	TT_Load_SBit_Metrics_Func	)
#define	TT_Load_SBit_Image_Func	ODA_FT(	TT_Load_SBit_Image_Func	)
#define	TT_Set_SBit_Strike_Func	ODA_FT(	TT_Set_SBit_Strike_Func	)
#define	TT_Load_Strike_Metrics_Func	ODA_FT(	TT_Load_Strike_Metrics_Func	)
#define	TT_Get_PS_Name_Func	ODA_FT(	TT_Get_PS_Name_Func	)
#define	TT_Load_Metrics_Func	ODA_FT(	TT_Load_Metrics_Func	)
#define	TT_Get_Metrics_Func	ODA_FT(	TT_Get_Metrics_Func	)
#define	TT_Get_Name_Func	ODA_FT(	TT_Get_Name_Func	)
#define	TT_Get_Name_ID_Func	ODA_FT(	TT_Get_Name_ID_Func	)
#define	TT_Load_Table_Func	ODA_FT(	TT_Load_Table_Func	)
#define	TT_Free_Table_Func	ODA_FT(	TT_Free_Table_Func	)
#define	TT_Face_GetKerningFunc	ODA_FT(	TT_Face_GetKerningFunc	)
#define	SFNT_Interface_	ODA_FT(	SFNT_Interface_	)
#define	SFNT_Interface	ODA_FT(	SFNT_Interface	)
#define	SFNT_Service	ODA_FT(	SFNT_Service	)

//
#define sfnt_services	ODA_FT(sfnt_services)
#define sfnt_service_glyph_dict	ODA_FT(sfnt_service_glyph_dict)
#define sfnt_service_ps_name	ODA_FT(sfnt_service_ps_name)
#define tt_service_get_cmap_info	ODA_FT(tt_service_get_cmap_info)
#define tt_cmap_classes	ODA_FT(tt_cmap_classes)
#define sfnt_service_sfnt_table	ODA_FT(sfnt_service_sfnt_table)
#define sfnt_service_bdf	ODA_FT(sfnt_service_bdf)
#define sfnt_interface	ODA_FT(sfnt_interface)
//PSHINTS_H_
#define	PSH_Globals	ODA_FT(	PSH_Globals	)
#define	PSH_Globals_NewFunc	ODA_FT(	PSH_Globals_NewFunc	)
#define	PSH_Globals_SetScaleFunc	ODA_FT(	PSH_Globals_SetScaleFunc	)
#define	PSH_Globals_DestroyFunc	ODA_FT(	PSH_Globals_DestroyFunc	)
#define	PSH_Globals_FuncsRec	ODA_FT(	PSH_Globals_FuncsRec	)
#define	PSH_Globals_Funcs	ODA_FT(	PSH_Globals_Funcs	)
#define	T1_Hints	ODA_FT(	T1_Hints	)
#define	T1_Hints_Funcs	ODA_FT(	T1_Hints_Funcs	)
#define	T1_Hints_OpenFunc	ODA_FT(	T1_Hints_OpenFunc	)
#define	T1_Hints_SetStemFunc	ODA_FT(	T1_Hints_SetStemFunc	)
#define	T1_Hints_SetStem3Func	ODA_FT(	T1_Hints_SetStem3Func	)
#define	T1_Hints_ResetFunc	ODA_FT(	T1_Hints_ResetFunc	)
#define	T1_Hints_CloseFunc	ODA_FT(	T1_Hints_CloseFunc	)
#define	T1_Hints_ApplyFunc	ODA_FT(	T1_Hints_ApplyFunc	)
#define	T1_Hints_FuncsRec	ODA_FT(	T1_Hints_FuncsRec	)
#define	T2_Hints	ODA_FT(	T2_Hints	)
#define	T2_Hints_Funcs	ODA_FT(	T2_Hints_Funcs	)
#define	T2_Hints_OpenFunc	ODA_FT(	T2_Hints_OpenFunc	)
#define	T2_Hints_StemsFunc	ODA_FT(	T2_Hints_StemsFunc	)
#define	T2_Hints_MaskFunc	ODA_FT(	T2_Hints_MaskFunc	)
#define	T2_Hints_CounterFunc	ODA_FT(	T2_Hints_CounterFunc	)
#define	T2_Hints_CloseFunc	ODA_FT(	T2_Hints_CloseFunc	)
#define	T2_Hints_ApplyFunc	ODA_FT(	T2_Hints_ApplyFunc	)
#define	T2_Hints_FuncsRec	ODA_FT(	T2_Hints_FuncsRec	)
#define	PSHinter_Interface_	ODA_FT(	PSHinter_Interface_	)
#define	PSHinter_Interface	ODA_FT(	PSHinter_Interface	)
#define	PSHinter_Service	ODA_FT(	PSHinter_Service	)


//PSAUX_H_
#define	PS_DriverRec	ODA_FT(	PS_DriverRec	)
#define	PS_Driver	ODA_FT(	PS_Driver	)
#define	PS_TableRec	ODA_FT(	PS_TableRec	)
#define	PS_Table_Funcs	ODA_FT(	PS_Table_Funcs	)
#define	PS_Table_FuncsRec	ODA_FT(	PS_Table_FuncsRec	)
#define	PS_TableRec	ODA_FT(	PS_TableRec	)
#define	PS_Parser	ODA_FT(	PS_Parser	)
#define	T1_Token	ODA_FT(	T1_Token	)
#define	T1_Field	ODA_FT(	T1_Field	)
#define	T1_TokenType	ODA_FT(	T1_TokenType	)
#define	T1_TokenRec	ODA_FT(	T1_TokenRec	)
#define	T1_FieldType	ODA_FT(	T1_FieldType	)
#define	T1_FieldLocation	ODA_FT(	T1_FieldLocation	)
#define	T1_Field_ParseFunc	ODA_FT(	T1_Field_ParseFunc	)
#define	T1_FieldRec	ODA_FT(	T1_FieldRec	)
#define	PS_Parser_Funcs	ODA_FT(	PS_Parser_Funcs	)
#define	PS_Parser_FuncsRec	ODA_FT(	PS_Parser_FuncsRec	)
#define	PS_ParserRec	ODA_FT(	PS_ParserRec	)
#define	PS_Builder	ODA_FT(	PS_Builder	)
#define	PS_Builder_FuncsRec	ODA_FT(	PS_Builder_FuncsRec	)
#define	PS_Builder_FuncsRec	ODA_FT(	PS_Builder_FuncsRec	)
#define	PS_Builder	ODA_FT(	PS_Builder	)
#define	PS_Decoder_Zone	ODA_FT(	PS_Decoder_Zone	)
#define	CFF_Decoder_Get_Glyph_Callback	ODA_FT(	CFF_Decoder_Get_Glyph_Callback	)
#define	CFF_Decoder_Free_Glyph_Callback	ODA_FT(	CFF_Decoder_Free_Glyph_Callback	)
#define	PS_Decoder	ODA_FT(	PS_Decoder	)
#define	T1_Builder	ODA_FT(	T1_Builder	)
#define	T1_Builder_Check_Points_Func	ODA_FT(	T1_Builder_Check_Points_Func	)
#define	T1_Builder_Add_Point_Func	ODA_FT(	T1_Builder_Add_Point_Func	)
#define	T1_Builder_Add_Point1_Func	ODA_FT(	T1_Builder_Add_Point1_Func	)
#define	T1_Builder_Add_Contour_Func	ODA_FT(	T1_Builder_Add_Contour_Func	)
#define	T1_Builder_Start_Point_Func	ODA_FT(	T1_Builder_Start_Point_Func	)
#define	T1_Builder_Close_Contour_Func	ODA_FT(	T1_Builder_Close_Contour_Func	)
#define	T1_Builder_Funcs	ODA_FT(	T1_Builder_Funcs	)
#define	T1_Builder_FuncsRec	ODA_FT(	T1_Builder_FuncsRec	)
#define	T1_ParseState	ODA_FT(	T1_ParseState	)
#define	T1_BuilderRec	ODA_FT(	T1_BuilderRec	)
#define	T1_Decoder_ZoneRec	ODA_FT(	T1_Decoder_ZoneRec	)
#define	T1_Decoder_Zone	ODA_FT(	T1_Decoder_Zone	)
#define	T1_Decoder	ODA_FT(	T1_Decoder	)
#define	T1_Decoder_Funcs	ODA_FT(	T1_Decoder_Funcs	)
#define	T1_Decoder_Callback	ODA_FT(	T1_Decoder_Callback	)
#define	T1_Decoder_FuncsRec	ODA_FT(	T1_Decoder_FuncsRec	)
#define	T1_DecoderRec	ODA_FT(	T1_DecoderRec	)
#define	CFF_Builder	ODA_FT(	CFF_Builder	)
#define	CFF_Builder_Check_Points_Func	ODA_FT(	CFF_Builder_Check_Points_Func	)
#define	CFF_Builder_Add_Point_Func	ODA_FT(	CFF_Builder_Add_Point_Func	)
#define	CFF_Builder_Add_Point1_Func	ODA_FT(	CFF_Builder_Add_Point1_Func	)
#define	CFF_Builder_Start_Point_Func	ODA_FT(	CFF_Builder_Start_Point_Func	)
#define	CFF_Builder_Close_Contour_Func	ODA_FT(	CFF_Builder_Close_Contour_Func	)
#define	CFF_Builder_Add_Contour_Func	ODA_FT(	CFF_Builder_Add_Contour_Func	)
#define	CFF_Builder_Funcs	ODA_FT(	CFF_Builder_Funcs	)
#define	CFF_Builder_FuncsRec	ODA_FT(	CFF_Builder_FuncsRec	)
#define	CFF_Builder_	ODA_FT(	CFF_Builder_	)
#define	CFF_Decoder_Zone	ODA_FT(	CFF_Decoder_Zone	)
#define	CFF_Decoder	ODA_FT(	CFF_Decoder	)
#define	CFF_Decoder_Funcs	ODA_FT(	CFF_Decoder_Funcs	)
#define	CFF_Decoder_FuncsRec	ODA_FT(	CFF_Decoder_FuncsRec	)
#define	AFM_ParserRec_	ODA_FT(	AFM_ParserRec_	)
#define	AFM_Parser	ODA_FT(	AFM_Parser	)
#define	AFM_Parser_FuncsRec_	ODA_FT(	AFM_Parser_FuncsRec_	)
#define	AFM_Stream	ODA_FT(	AFM_Stream	)
#define	AFM_ParserRec	ODA_FT(	AFM_ParserRec	)
#define	T1_CMap_Classes	ODA_FT(	T1_CMap_Classes	)
#define	T1_CMap_ClassesRec	ODA_FT(	T1_CMap_ClassesRec	)
#define	PSAux_ServiceRec	ODA_FT(	PSAux_ServiceRec	)
#define	PSAux_Service	ODA_FT(	PSAux_Service	)
#define	PSAux_Interface	ODA_FT(	PSAux_Interface	)

//FTVALID_H_

#define	FT_Validator	ODA_FT(	FT_Validator	)
#define	FT_ValidationLevel	ODA_FT(	FT_ValidationLevel	)
#define	FT_ValidatorRec	ODA_FT(	FT_ValidatorRec	)
#define	ft_validator_init	ODA_FT(	ft_validator_init	)
#define	ft_validator_run	ODA_FT(	ft_validator_run	)
#define	ft_validator_error	ODA_FT(	ft_validator_error	)
//FTSTREAM_H_
#define	FT_Frame_Op	ODA_FT(	FT_Frame_Op	)
#define	FT_Frame_Field	ODA_FT(	FT_Frame_Field	)
#define	FT_Stream_Open	ODA_FT(	FT_Stream_Open	)
#define	FT_Stream_New	ODA_FT(	FT_Stream_New	)
#define	FT_Stream_OpenMemory	ODA_FT(	FT_Stream_OpenMemory	)
#define	FT_Stream_Free	ODA_FT(	FT_Stream_Free	)
#define	FT_Stream_Close	ODA_FT(	FT_Stream_Close	)
#define	FT_Stream_Seek	ODA_FT(	FT_Stream_Seek	)
#define	FT_Stream_Skip	ODA_FT(	FT_Stream_Skip	)
#define	FT_Stream_Pos	ODA_FT(	FT_Stream_Pos	)
#define	FT_Stream_Read	ODA_FT(	FT_Stream_Read	)
#define	FT_Stream_ReadAt	ODA_FT(	FT_Stream_ReadAt	)
#define	FT_Stream_TryRead	ODA_FT(	FT_Stream_TryRead	)
#define	FT_Stream_EnterFrame	ODA_FT(	FT_Stream_EnterFrame	)
#define	FT_Stream_ExitFrame	ODA_FT(	FT_Stream_ExitFrame	)
#define	FT_Stream_ExtractFrame	ODA_FT(	FT_Stream_ExtractFrame	)
#define	FT_Stream_ReleaseFrame	ODA_FT(	FT_Stream_ReleaseFrame	)
#define	FT_Stream_GetChar	ODA_FT(	FT_Stream_GetChar	)
#define	FT_Stream_GetUShort	ODA_FT(	FT_Stream_GetUShort	)
#define	FT_Stream_GetUOffset	ODA_FT(	FT_Stream_GetUOffset	)
#define	FT_Stream_GetULong	ODA_FT(	FT_Stream_GetULong	)
#define	FT_Stream_GetUShortLE	ODA_FT(	FT_Stream_GetUShortLE	)
#define	FT_Stream_GetULongLE	ODA_FT(	FT_Stream_GetULongLE	)
#define	FT_Stream_ReadChar	ODA_FT(	FT_Stream_ReadChar	)
#define	FT_Stream_ReadUShort	ODA_FT(	FT_Stream_ReadUShort	)
#define	FT_Stream_ReadUOffset	ODA_FT(	FT_Stream_ReadUOffset	)
#define	FT_Stream_ReadULong	ODA_FT(	FT_Stream_ReadULong	)
#define	FT_Stream_ReadUShortLE	ODA_FT(	FT_Stream_ReadUShortLE	)
#define	FT_Stream_ReadULongLE	ODA_FT(	FT_Stream_ReadULongLE	)
#define	FT_Stream_ReadFields	ODA_FT(	FT_Stream_ReadFields	)
//FTSERV_H_
#define	FT_ServiceDescRec	ODA_FT(	FT_ServiceDescRec	)
#define	FT_ServiceDesc	ODA_FT(	FT_ServiceDesc	)
#define	FT_ServiceCacheRec	ODA_FT(	FT_ServiceCacheRec	)
#define	FT_ServiceCache	ODA_FT(	FT_ServiceCache	)

//FTRFORK_H_
#define	FT_RFork_Ref	ODA_FT(	FT_RFork_Ref	)
#define	ft_raccess_guess_func	ODA_FT(	ft_raccess_guess_func	)
#define	FT_RFork_Rule	ODA_FT(	FT_RFork_Rule	)
#define	ft_raccess_guess_rec	ODA_FT(	ft_raccess_guess_rec	)
#define	FT_Raccess_Guess	ODA_FT(	FT_Raccess_Guess	)
#define	FT_Raccess_Get_HeaderInfo	ODA_FT(	FT_Raccess_Get_HeaderInfo	)
#define	FT_Raccess_Get_DataOffsets	ODA_FT(	FT_Raccess_Get_DataOffsets	)

//FTPSPROP_H_
#define	ps_property_set	ODA_FT(	ps_property_set	)
#define	ps_property_get	ODA_FT(	ps_property_get	)

//FTPIC_H_
#define	FT_PIC_Container	ODA_FT(	FT_PIC_Container	)
#define	ft_pic_container_init	ODA_FT(	ft_pic_container_init	)
#define	ft_pic_container_destroy	ODA_FT(	ft_pic_container_destroy	)

//FTOBJS_H_
#define	FT_CMapRec	ODA_FT(	FT_CMapRec	)
#define	FT_CMap_ClassRec	ODA_FT(	FT_CMap_ClassRec	)
#define	FT_CMap	ODA_FT(	FT_CMap	)
#define	FT_CMap_Class	ODA_FT(	FT_CMap_Class	)
#define	FT_CMap_InitFunc	ODA_FT(	FT_CMap_InitFunc	)
#define	FT_CMap_DoneFunc	ODA_FT(	FT_CMap_DoneFunc	)
#define	FT_CMap_CharIndexFunc	ODA_FT(	FT_CMap_CharIndexFunc	)
#define	FT_CMap_CharNextFunc	ODA_FT(	FT_CMap_CharNextFunc	)
#define	FT_CMap_CharVarIndexFunc	ODA_FT(	FT_CMap_CharVarIndexFunc	)
#define	FT_CMap_CharVarIsDefaultFunc	ODA_FT(	FT_CMap_CharVarIsDefaultFunc	)
#define	FT_CMap_VariantListFunc	ODA_FT(	FT_CMap_VariantListFunc	)
#define	FT_CMap_CharVariantListFunc	ODA_FT(	FT_CMap_CharVariantListFunc	)
#define	FT_CMap_VariantCharListFunc	ODA_FT(	FT_CMap_VariantCharListFunc	)
#define	FT_CMap_New	ODA_FT(	FT_CMap_New	)
#define	FT_CMap_Done	ODA_FT(	FT_CMap_Done	)
#define	ft_lcd_padding	ODA_FT(	ft_lcd_padding	)
#define	FT_Bitmap_LcdFilterFunc	ODA_FT(	FT_Bitmap_LcdFilterFunc	)
#define	ft_lcd_filter_fir	ODA_FT(	ft_lcd_filter_fir	)
#define	FT_Face_InternalRec	ODA_FT(	FT_Face_InternalRec	)
#define	FT_GlyphSlot_InternalRec	ODA_FT(	FT_GlyphSlot_InternalRec	)
#define	FT_Size_InternalRec	ODA_FT(	FT_Size_InternalRec	)
#define	FT_ModuleRec	ODA_FT(	FT_ModuleRec	)
#define	FT_Get_Module_Interface	ODA_FT(	FT_Get_Module_Interface	)
#define	ft_module_get_service	ODA_FT(	ft_module_get_service	)
#define	ft_property_string_set	ODA_FT(	ft_property_string_set	)
#define	FT_New_GlyphSlot	ODA_FT(	FT_New_GlyphSlot	)
#define	FT_Done_GlyphSlot	ODA_FT(	FT_Done_GlyphSlot	)
#define	FT_Select_Metrics	ODA_FT(	FT_Select_Metrics	)
#define	FT_Request_Metrics	ODA_FT(	FT_Request_Metrics	)
#define	FT_Match_Size	ODA_FT(	FT_Match_Size	)
#define	ft_synthesize_vertical_metrics	ODA_FT(	ft_synthesize_vertical_metrics	)
#define	ft_glyphslot_free_bitmap	ODA_FT(	ft_glyphslot_free_bitmap	)
#define	ft_glyphslot_preset_bitmap	ODA_FT(	ft_glyphslot_preset_bitmap	)
#define	ft_glyphslot_alloc_bitmap	ODA_FT(	ft_glyphslot_alloc_bitmap	)
#define	ft_glyphslot_set_bitmap	ODA_FT(	ft_glyphslot_set_bitmap	)
#define	FT_RendererRec	ODA_FT(	FT_RendererRec	)
#define	FT_DriverRec	ODA_FT(	FT_DriverRec	)
#define	FT_LibraryRec	ODA_FT(	FT_LibraryRec	)
#define	FT_Lookup_Renderer	ODA_FT(	FT_Lookup_Renderer	)
#define	FT_Render_Glyph_Internal	ODA_FT(	FT_Render_Glyph_Internal	)
#define	FT_Face_GetPostscriptNameFunc	ODA_FT(	FT_Face_GetPostscriptNameFunc	)
#define	FT_Face_GetGlyphNameFunc	ODA_FT(	FT_Face_GetGlyphNameFunc	)
#define	FT_Face_GetGlyphNameIndexFunc	ODA_FT(	FT_Face_GetGlyphNameIndexFunc	)
#define	FT_New_Memory	ODA_FT(	FT_New_Memory	)
#define	FT_Done_Memory	ODA_FT(	FT_Done_Memory	)
#define	FT_Raster_Funcs	ODA_FT(	FT_Raster_Funcs	)
#define	ft_default_raster	ODA_FT(	ft_default_raster	)
#define	FT_Module_Creator	ODA_FT(	FT_Module_Creator	)
#define	FT_Module_Destroyer	ODA_FT(	FT_Module_Destroyer	)

//FTMEMORY_H_
#define	ft_mem_alloc	ODA_FT(	ft_mem_alloc	)
#define	ft_mem_realloc	ODA_FT(	ft_mem_realloc	)
#define	ft_mem_qalloc	ODA_FT(	ft_mem_qalloc	)
#define	ft_mem_qrealloc	ODA_FT(	ft_mem_qrealloc	)
#define	ft_mem_free	ODA_FT(	ft_mem_free	)
#define	ft_mem_strdup	ODA_FT(	ft_mem_strdup	)
#define	ft_mem_dup	ODA_FT(	ft_mem_dup	)
#define	ft_mem_strcpyn	ODA_FT(	ft_mem_strcpyn	)

//FTHASH_H_
#define	FT_Hashkey	ODA_FT(	FT_Hashkey	)
#define	FT_HashnodeRec	ODA_FT(	FT_HashnodeRec	)
#define	FT_Hashnode	ODA_FT(	FT_Hashnode	)
#define	FT_Hash_LookupFunc	ODA_FT(	FT_Hash_LookupFunc	)
#define	FT_Hash_CompareFunc	ODA_FT(	FT_Hash_CompareFunc	)
#define	FT_HashRec	ODA_FT(	FT_HashRec	)
#define	FT_Hash	ODA_FT(	FT_Hash	)
#define	ft_hash_str_init	ODA_FT(	ft_hash_str_init	)
#define	ft_hash_num_init	ODA_FT(	ft_hash_num_init	)
#define	ft_hash_str_free	ODA_FT(	ft_hash_str_free	)
#define	ft_hash_str_insert	ODA_FT(	ft_hash_str_insert	)
#define	ft_hash_num_insert	ODA_FT(	ft_hash_num_insert	)
#define	ft_hash_str_lookup	ODA_FT(	ft_hash_str_lookup	)
#define	ft_hash_num_lookup	ODA_FT(	ft_hash_num_lookup	)

//FTGLOADR_H_
#define	FT_SubGlyphRec	ODA_FT(	FT_SubGlyphRec	)
#define	FT_GlyphLoadRec	ODA_FT(	FT_GlyphLoadRec	)
#define	FT_GlyphLoad	ODA_FT(	FT_GlyphLoad	)
#define	FT_GlyphLoaderRec	ODA_FT(	FT_GlyphLoaderRec	)
#define	FT_GlyphLoader	ODA_FT(	FT_GlyphLoader	)
#define	FT_GlyphLoader_New	ODA_FT(	FT_GlyphLoader_New	)
#define	FT_GlyphLoader_CreateExtra	ODA_FT(	FT_GlyphLoader_CreateExtra	)
#define	FT_GlyphLoader_Done	ODA_FT(	FT_GlyphLoader_Done	)
#define	FT_GlyphLoader_Reset	ODA_FT(	FT_GlyphLoader_Reset	)
#define	FT_GlyphLoader_Rewind	ODA_FT(	FT_GlyphLoader_Rewind	)
#define	FT_GlyphLoader_CheckPoints	ODA_FT(	FT_GlyphLoader_CheckPoints	)
#define	FT_GlyphLoader_CheckSubGlyphs	ODA_FT(	FT_GlyphLoader_CheckSubGlyphs	)
#define	FT_GlyphLoader_Prepare	ODA_FT(	FT_GlyphLoader_Prepare	)
#define	FT_GlyphLoader_Add	ODA_FT(	FT_GlyphLoader_Add	)
#define	FT_GlyphLoader_CopyPoints	ODA_FT(	FT_GlyphLoader_CopyPoints	)

//FTDRV_H_
#define	FT_Face_InitFunc	ODA_FT(	FT_Face_InitFunc	)
#define	FT_Face_DoneFunc	ODA_FT(	FT_Face_DoneFunc	)
#define	FT_Size_InitFunc	ODA_FT(	FT_Size_InitFunc	)
#define	FT_Size_DoneFunc	ODA_FT(	FT_Size_DoneFunc	)
#define	FT_Slot_InitFunc	ODA_FT(	FT_Slot_InitFunc	)
#define	FT_Slot_DoneFunc	ODA_FT(	FT_Slot_DoneFunc	)
#define	FT_Size_RequestFunc	ODA_FT(	FT_Size_RequestFunc	)
#define	FT_Size_SelectFunc	ODA_FT(	FT_Size_SelectFunc	)
#define	FT_Slot_LoadFunc	ODA_FT(	FT_Slot_LoadFunc	)
#define	FT_Face_GetKerningFunc	ODA_FT(	FT_Face_GetKerningFunc	)
#define	FT_Face_AttachFunc	ODA_FT(	FT_Face_AttachFunc	)
#define	FT_Face_GetAdvancesFunc	ODA_FT(	FT_Face_GetAdvancesFunc	)
#define	FT_Driver_ClassRec_	ODA_FT(	FT_Driver_ClassRec_	)
#define	FT_Driver_ClassRec	ODA_FT(	FT_Driver_ClassRec	)
#define	FT_Driver_Class	ODA_FT(	FT_Driver_Class	)


//FTDEBUG_H_
#define	FT_Trace	ODA_FT(	FT_Trace	)
#define	ft_trace_levels	ODA_FT(	ft_trace_levels	)
#define	FT_Trace_Get_Count	ODA_FT(	FT_Trace_Get_Count	)
#define	FT_Trace_Get_Name	ODA_FT(	FT_Trace_Get_Name	)
#define	FT_Message	ODA_FT(	FT_Message	)
#define	FT_Panic	ODA_FT(	FT_Panic	)
#define	FT_Throw	ODA_FT(	FT_Throw	)
#define	ft_debug_init	ODA_FT(	ft_debug_init	)

//FTCALC_H_
#define	FT_MulFix_arm	ODA_FT(	FT_MulFix_arm	)
#define	FT_MulFix_arm	ODA_FT(	FT_MulFix_arm	)
#define	FT_MulFix_i386	ODA_FT(	FT_MulFix_i386	)
#define	FT_MulFix_i386	ODA_FT(	FT_MulFix_i386	)
#define	FT_MulFix_x86_64	ODA_FT(	FT_MulFix_x86_64	)
#define	FT_MulDiv_No_Round	ODA_FT(	FT_MulDiv_No_Round	)
#define	FT_Matrix_Multiply_Scaled	ODA_FT(	FT_Matrix_Multiply_Scaled	)
#define	FT_Vector_Transform_Scaled	ODA_FT(	FT_Vector_Transform_Scaled	)
#define	FT_Vector_NormLen	ODA_FT(	FT_Vector_NormLen	)
#define	ft_corner_orientation	ODA_FT(	ft_corner_orientation	)
#define	ft_corner_is_flat	ODA_FT(	ft_corner_is_flat	)
#define	FT_Hypot	ODA_FT(	FT_Hypot	)


//CFFTYPES_H_
#define	CFF_IndexRec	ODA_FT(	CFF_IndexRec	)
#define	CFF_Index	ODA_FT(	CFF_Index	)
#define	CFF_EncodingRec	ODA_FT(	CFF_EncodingRec	)
#define	CFF_Encoding	ODA_FT(	CFF_Encoding	)
#define	CFF_CharsetRec	ODA_FT(	CFF_CharsetRec	)
#define	CFF_Charset	ODA_FT(	CFF_Charset	)
#define	CFF_VarData	ODA_FT(	CFF_VarData	)
#define	CFF_AxisCoords	ODA_FT(	CFF_AxisCoords	)
#define	CFF_VarRegion	ODA_FT(	CFF_VarRegion	)
#define	CFF_VStoreRec	ODA_FT(	CFF_VStoreRec	)
#define	CFF_VStore	ODA_FT(	CFF_VStore	)
#define	CFF_Font	ODA_FT(	CFF_Font	)
#define	CFF_BlendRec	ODA_FT(	CFF_BlendRec	)
#define	CFF_Blend	ODA_FT(	CFF_Blend	)
#define	CFF_FontRecDictRec	ODA_FT(	CFF_FontRecDictRec	)
#define	CFF_FontRecDict	ODA_FT(	CFF_FontRecDict	)
#define	CFF_SubFont	ODA_FT(	CFF_SubFont	)
#define	CFF_PrivateRec	ODA_FT(	CFF_PrivateRec	)
#define	CFF_Private	ODA_FT(	CFF_Private	)
#define	CFF_FDSelectRec	ODA_FT(	CFF_FDSelectRec	)
#define	CFF_FDSelect	ODA_FT(	CFF_FDSelect	)
#define	CFF_SubFontRec	ODA_FT(	CFF_SubFontRec	)
#define	CFF_FontRec	ODA_FT(	CFF_FontRec	)

//CFFOTYPES_H_
#define	CFF_Face	ODA_FT(	CFF_Face	)
#define	CFF_SizeRec	ODA_FT(	CFF_SizeRec	)
#define	CFF_Size	ODA_FT(	CFF_Size	)
#define	CFF_GlyphSlotRec	ODA_FT(	CFF_GlyphSlotRec	)
#define	CFF_GlyphSlot	ODA_FT(	CFF_GlyphSlot	)
#define	CFF_InternalRec	ODA_FT(	CFF_InternalRec	)
#define	CFF_Internal	ODA_FT(	CFF_Internal	)
#define	CFF_Transform_	ODA_FT(	CFF_Transform_	)
#define	CFF_Transform	ODA_FT(	CFF_Transform	)

//AUTOHINT_H_
#define	FT_AutoHinter	ODA_FT(	FT_AutoHinter	)
#define	FT_AutoHinter_GlobalGetFunc	ODA_FT(	FT_AutoHinter_GlobalGetFunc	)
#define	FT_AutoHinter_GlobalDoneFunc	ODA_FT(	FT_AutoHinter_GlobalDoneFunc	)
#define	FT_AutoHinter_GlobalResetFunc	ODA_FT(	FT_AutoHinter_GlobalResetFunc	)
#define	FT_AutoHinter_GlyphLoadFunc	ODA_FT(	FT_AutoHinter_GlyphLoadFunc	)
#define	FT_AutoHinter_InterfaceRec	ODA_FT(	FT_AutoHinter_InterfaceRec	)
#define	FT_AutoHinter_Interface	ODA_FT(	FT_AutoHinter_Interface	)

#ifdef FREETYPE_PREFIX_INTERNAL
#define tt_driver_class ODA_FT(tt_driver_class)
#define tt_property_set ODA_FT(tt_property_set)
#define tt_property_get ODA_FT(tt_property_get)
#define tt_service_properties ODA_FT(tt_service_properties)
#define tt_get_kerning ODA_FT(tt_get_kerning)
#define tt_get_advances ODA_FT(tt_get_advances)
#define tt_size_select ODA_FT(tt_size_select)
#define tt_size_request ODA_FT(tt_size_request)
#define tt_glyph_load ODA_FT(tt_glyph_load)
#define tt_service_gx_multi_masters ODA_FT(tt_service_gx_multi_masters)
#define tt_service_metrics_variations ODA_FT(tt_service_metrics_variations)
#define tt_service_truetype_glyf ODA_FT(tt_service_truetype_glyf)
#define tt_get_interface ODA_FT(tt_get_interface)
#define tt_services ODA_FT(tt_services)
#define tt_driver_init ODA_FT(tt_driver_init)
#define tt_driver_done ODA_FT(tt_driver_done)
#define tt_face_init ODA_FT(tt_face_init)

#define tt_face_init ODA_FT(tt_face_init)
#define tt_face_done ODA_FT(tt_face_done)
#define tt_size_init ODA_FT(tt_size_init)
#define tt_size_done ODA_FT(tt_size_done)
#define tt_slot_init ODA_FT(tt_slot_init)
#define tt_glyph_load ODA_FT(tt_glyph_load)
#define tt_get_kerning ODA_FT(tt_get_kerning)
#define tt_get_advances ODA_FT(tt_get_advances)

#define af_arctan ODA_FT(af_arctan)
#define af_cjk_metrics_init_blues ODA_FT(af_cjk_metrics_init_blues)
#define af_cjk_metrics_scale_dim ODA_FT(af_cjk_metrics_scale_dim)
#define af_cjk_hints_compute_segments ODA_FT(af_cjk_hints_compute_segments)
#define af_cjk_hints_link_segments ODA_FT(af_cjk_hints_link_segments)


#define af_arctan ODA_FT(af_arctan)
#define af_arctan ODA_FT(af_arctan)

#define af_cjk_hints_compute_edges ODA_FT(af_cjk_hints_compute_edges)
#define af_cjk_hints_detect_features ODA_FT(af_cjk_hints_detect_features)
#define af_cjk_hints_compute_blue_edges ODA_FT(af_cjk_hints_compute_blue_edges)
#define af_cjk_snap_width ODA_FT(af_cjk_snap_width)
#define af_cjk_compute_stem_width ODA_FT(af_cjk_compute_stem_width)
#define af_cjk_align_linked_edge ODA_FT(af_cjk_align_linked_edge)
#define af_cjk_align_serif_edge ODA_FT(af_cjk_align_serif_edge)
#define af_hint_normal_stem ODA_FT(af_hint_normal_stem)
#define af_cjk_hint_edges ODA_FT(af_cjk_hint_edges)
#define af_cjk_align_edge_points ODA_FT(af_cjk_align_edge_points)
#define af_dummy_hints_init ODA_FT(af_dummy_hints_init)
#define af_dummy_hints_apply ODA_FT(af_dummy_hints_apply)
#define af_face_globals_compute_style_coverage ODA_FT(af_face_globals_compute_style_coverage)
#define af_dir_str ODA_FT(af_dir_str)
#define af_print_idx ODA_FT(af_print_idx)
#define af_get_segment_index ODA_FT(af_get_segment_index)
#define af_get_edge_index ODA_FT(af_get_edge_index)
#define af_edge_flags_to_string ODA_FT(af_edge_flags_to_string)
#define af_iup_shift ODA_FT(af_iup_shift)
#define af_iup_interp ODA_FT(af_iup_interp)
#define af_indic_metrics_init ODA_FT(af_indic_metrics_init)
#define af_indic_metrics_scale ODA_FT(af_indic_metrics_scale)
#define af_indic_hints_init ODA_FT(af_indic_hints_init)
#define af_indic_hints_apply ODA_FT(af_indic_hints_apply)
#define af_indic_get_standard_widths ODA_FT(af_indic_get_standard_widths)
#define af_latin_sort_blue ODA_FT(af_latin_sort_blue)
#define af_latin_metrics_init_blues ODA_FT(af_latin_metrics_init_blues)
#define af_latin_metrics_scale_dim ODA_FT(af_latin_metrics_scale_dim)
#define af_latin_hints_compute_blue_edges ODA_FT(af_latin_hints_compute_blue_edges)
#define af_latin_hints_init ODA_FT(af_latin_hints_init)
#define af_latin_snap_width ODA_FT(af_latin_snap_width)
#define af_latin_compute_stem_width ODA_FT(af_latin_compute_stem_width)
#define af_latin_align_linked_edge ODA_FT(af_latin_align_linked_edge)
#define af_latin_align_serif_edge ODA_FT(af_latin_align_serif_edge)
#define af_latin_hint_edges ODA_FT(af_latin_hint_edges)
#define af_latin_hints_apply ODA_FT(af_latin_hints_apply)
#define af_latin2_blue_chars ODA_FT(af_latin2_blue_chars)
#define af_latin2_metrics_init_blues ODA_FT(af_latin2_metrics_init_blues)
#define latin_encodings ODA_FT(latin_encodings)
#define af_latin2_metrics_scale_dim ODA_FT(af_latin2_metrics_scale_dim)
#define af_latin2_hints_compute_blue_edges ODA_FT(af_latin2_hints_compute_blue_edges)
#define af_latin2_hints_init ODA_FT(af_latin2_hints_init)
#define af_latin2_snap_width ODA_FT(af_latin2_snap_width)
#define af_latin2_compute_stem_width ODA_FT(af_latin2_compute_stem_width)
#define af_latin2_align_linked_edge ODA_FT(af_latin2_align_linked_edge)
#define af_latin2_align_serif_edge ODA_FT(af_latin2_align_serif_edge)
#define af_latin2_hint_edges ODA_FT(af_latin2_hint_edges)
#define af_latin2_hints_apply ODA_FT(af_latin2_hints_apply)
#define af_loader_embolden_glyph_in_slot ODA_FT(af_loader_embolden_glyph_in_slot)
#define af_property_get_face_globals ODA_FT(af_property_get_face_globals)
#define af_property_set ODA_FT(af_property_set)
#define af_property_get ODA_FT(af_property_get)
#define af_warper_weights ODA_FT(af_warper_weights)
#define af_warper_weights ODA_FT(af_warper_weights)
#define af_warper_compute_line_best ODA_FT(af_warper_compute_line_best)
#define _ft_face_scale_advances ODA_FT(_ft_face_scale_advances)
#define BBox_Move_To ODA_FT(BBox_Move_To)
#define BBox_Line_To ODA_FT(BBox_Line_To)
#define BBox_Conic_Check ODA_FT(BBox_Conic_Check)
#define BBox_Conic_To ODA_FT(BBox_Conic_To)
#define cubic_peak ODA_FT(cubic_peak)
#define BBox_Cubic_Check ODA_FT(BBox_Cubic_Check)
#define BBox_Cubic_To ODA_FT(BBox_Cubic_To)
#define null_bitmap ODA_FT(null_bitmap)
#define ft_bitmap_assure_buffer ODA_FT(ft_bitmap_assure_buffer)
#define ft_gray_for_premultiplied_srgb_bgra ODA_FT(ft_gray_for_premultiplied_srgb_bgra)
#define ft_multo64 ODA_FT(ft_multo64)
#define ft_div64by32 ODA_FT(ft_div64by32)
#define FT_Add64 ODA_FT(FT_Add64)
#define ft_mem_primes ODA_FT(ft_mem_primes)
#define ft_mem_closest_prime ODA_FT(ft_mem_closest_prime)
#define ft_mem_debug_panic ODA_FT(ft_mem_debug_panic)
#define ft_mem_table_alloc ODA_FT(ft_mem_table_alloc)
#define ft_mem_table_free ODA_FT(ft_mem_table_free)
#define ft_mem_table_resize ODA_FT(ft_mem_table_resize)
#define ft_mem_table_new ODA_FT(ft_mem_table_new)
#define ft_mem_table_destroy ODA_FT(ft_mem_table_destroy)
#define ft_mem_table_get_nodep ODA_FT(ft_mem_table_get_nodep)
#define ft_mem_table_get_source ODA_FT(ft_mem_table_get_source)
#define ft_mem_table_set ODA_FT(ft_mem_table_set)
#define ft_mem_table_remove ODA_FT(ft_mem_table_remove)
#define ft_mem_debug_alloc ODA_FT(ft_mem_debug_alloc)
#define ft_mem_debug_free ODA_FT(ft_mem_debug_free)
#define ft_mem_debug_realloc ODA_FT(ft_mem_debug_realloc)
#define ft_mem_source_compare ODA_FT(ft_mem_source_compare)

#define ft_trace_toggles ODA_FT(ft_trace_toggles)
#define FT_GlyphLoader_Adjust_Points ODA_FT(FT_GlyphLoader_Adjust_Points)
#define FT_GlyphLoader_Adjust_Subglyphs ODA_FT(FT_GlyphLoader_Adjust_Subglyphs)
#define ft_new_glyph ODA_FT(ft_new_glyph)
#define hash_str_lookup ODA_FT(hash_str_lookup)
#define hash_num_lookup ODA_FT(hash_num_lookup)
#define hash_str_compare ODA_FT(hash_str_compare)
#define hash_num_compare ODA_FT(hash_num_compare)
#define hash_bucket ODA_FT(hash_bucket)
#define hash_rehash ODA_FT(hash_rehash)
#define hash_init ODA_FT(hash_init)
#define hash_insert ODA_FT(hash_insert)
#define hash_lookup ODA_FT(hash_lookup)

#define ft_default_modules ODA_FT(ft_default_modules)
#define _ft_lcd_filter_legacy ODA_FT(_ft_lcd_filter_legacy)
#define FT_ATSFontGetFileReference ODA_FT(FT_ATSFontGetFileReference)
#define FT_GetFileRef_From_Mac_ATS_Name ODA_FT(FT_GetFileRef_From_Mac_ATS_Name)
#define FT_FSPathMakeRes ODA_FT(FT_FSPathMakeRes)
#define get_file_type_from_path ODA_FT(get_file_type_from_path)
#define create_lwfn_name ODA_FT(create_lwfn_name)
#define count_faces_sfnt ODA_FT(count_faces_sfnt)
#define count_faces_scalable ODA_FT(count_faces_scalable)
#define parse_fond ODA_FT(parse_fond)
#define lookup_lwfn_by_fond ODA_FT(lookup_lwfn_by_fond)
#define count_faces ODA_FT(count_faces)
#define read_lwfn ODA_FT(read_lwfn)
#define FT_New_Face_From_LWFN ODA_FT(FT_New_Face_From_LWFN)
#define FT_New_Face_From_SFNT ODA_FT(FT_New_Face_From_SFNT)
#define FT_New_Face_From_Suitcase ODA_FT(FT_New_Face_From_Suitcase)
#define FT_New_Face_From_Resource ODA_FT(FT_New_Face_From_Resource)
#define ft_face_get_mm_service ODA_FT(ft_face_get_mm_service)
#define ft_face_get_mvar_service ODA_FT(ft_face_get_mvar_service)
#define ft_open_face_internal ODA_FT(ft_open_face_internal)
#define ft_glyphslot_init ODA_FT(ft_glyphslot_init)
#define ft_glyphslot_clear ODA_FT(ft_glyphslot_clear)
#define ft_glyphslot_done ODA_FT(ft_glyphslot_done)
#define ft_lookup_glyph_renderer ODA_FT(ft_lookup_glyph_renderer )
#define ft_glyphslot_grid_fit_metrics ODA_FT(ft_glyphslot_grid_fit_metrics)
#define destroy_size ODA_FT(destroy_size)
#define ft_cmap_done_internal ODA_FT(ft_cmap_done_internal)
#define destroy_charmaps ODA_FT(destroy_charmaps)
#define destroy_face ODA_FT(destroy_face)
#define Destroy_Driver ODA_FT(Destroy_Driver)
#define find_unicode_charmap ODA_FT(find_unicode_charmap)
#define find_variant_selector_charmap ODA_FT(find_variant_selector_charmap)
#define open_face ODA_FT(open_face)
#define memory_stream_close ODA_FT(memory_stream_close)
#define new_memory_stream ODA_FT(new_memory_stream)
#define ft_lookup_PS_in_sfnt_stream ODA_FT(ft_lookup_PS_in_sfnt_stream)
#define Mac_Read_POST_Resource ODA_FT(Mac_Read_POST_Resource)
#define Mac_Read_sfnt_Resource ODA_FT(Mac_Read_sfnt_Resource)
#define IsMacResource ODA_FT(IsMacResource)
#define IsMacBinary ODA_FT(IsMacBinary)
#define load_face_in_embedded_rfork ODA_FT(load_face_in_embedded_rfork)
#define load_mac_face ODA_FT(load_mac_face)
//#define ft_open_face_internal ODA_FT(ft_open_face_internal)
#define ft_recompute_scaled_metrics ODA_FT(ft_recompute_scaled_metrics)
#define ft_cmap_done_internal ODA_FT(ft_cmap_done_internal)
//#define ft_lookup_glyph_renderer ODA_FT(ft_lookup_glyph_renderer)
#define ft_set_current_renderer ODA_FT(ft_set_current_renderer)
#define ft_add_renderer ODA_FT(ft_add_renderer)
#define ft_remove_renderer ODA_FT(ft_remove_renderer)
#define Destroy_Module ODA_FT(Destroy_Module)
#define ft_property_do ODA_FT(ft_property_do)

#define null_outline ODA_FT(null_outline)
#define ft_contour_has ODA_FT(ft_contour_has)
#define ft_contour_enclosed ODA_FT(ft_contour_enclosed)
#define ft_outline_get_orientation ODA_FT(ft_outline_get_orientation)
#define ft_pfr_check ODA_FT(ft_pfr_check)
#define ft_raccess_sort_ref_by_id ODA_FT(ft_raccess_sort_ref_by_id)
#define raccess_guess_apple_double ODA_FT(raccess_guess_apple_double)
#define raccess_guess_apple_single ODA_FT(raccess_guess_apple_single)
#define raccess_guess_darwin_ufs_export ODA_FT(raccess_guess_darwin_ufs_export)
#define raccess_guess_darwin_newvfs ODA_FT(raccess_guess_darwin_newvfs)
#define raccess_guess_darwin_hfsplus ODA_FT(raccess_guess_darwin_hfsplus)
#define raccess_guess_vfat ODA_FT(raccess_guess_vfat)
#define raccess_guess_linux_cap ODA_FT(raccess_guess_linux_cap)
#define raccess_guess_linux_double ODA_FT(raccess_guess_linux_double)
#define raccess_guess_linux_netatalk ODA_FT(raccess_guess_linux_netatalk)
#define raccess_guess_apple_generic ODA_FT(raccess_guess_apple_generic)
#define raccess_guess_linux_double_from_file_name ODA_FT(raccess_guess_linux_double_from_file_name)
#define raccess_make_file_name ODA_FT(raccess_make_file_name)
//#define FT_Raccess_Guess ODA_FT(FT_Raccess_Guess)
#define raccess_get_rule_type_from_rule_index ODA_FT(raccess_get_rule_type_from_rule_index)
#define ft_raccess_rule_by_darwin_vfs ODA_FT(ft_raccess_rule_by_darwin_vfs)
#define raccess_guess_apple_double ODA_FT(raccess_guess_apple_double)
#define ft_pos_abs ODA_FT(ft_pos_abs)
#define ft_conic_split ODA_FT(ft_conic_split)
#define ft_conic_is_small_enough ODA_FT(ft_conic_is_small_enough)
#define ft_cubic_split ODA_FT(ft_cubic_split)
#define ft_angle_mean ODA_FT(ft_angle_mean)
#define ft_cubic_is_small_enough ODA_FT(ft_cubic_is_small_enough)
#define ft_stroke_border_grow ODA_FT(ft_stroke_border_grow)
#define ft_stroke_border_close ODA_FT(ft_stroke_border_close)
#define ft_stroke_border_lineto ODA_FT(ft_stroke_border_lineto)
#define ft_stroke_border_conicto ODA_FT(ft_stroke_border_conicto)
#define ft_stroke_border_cubicto ODA_FT(ft_stroke_border_cubicto)
#define ft_stroke_border_arcto ODA_FT(ft_stroke_border_arcto)
#define ft_stroke_border_moveto ODA_FT(ft_stroke_border_moveto)
#define ft_stroke_border_init ODA_FT(ft_stroke_border_init)
#define ft_stroke_border_reset ODA_FT(ft_stroke_border_reset)
#define ft_stroke_border_done ODA_FT(ft_stroke_border_done)
#define ft_stroke_border_get_counts ODA_FT(ft_stroke_border_get_counts)
#define ft_stroke_border_export ODA_FT(ft_stroke_border_export)
#define ft_stroker_arcto ODA_FT(ft_stroker_arcto)
#define ft_stroker_cap ODA_FT(ft_stroker_cap)
#define ft_stroker_inside ODA_FT(ft_stroker_inside)
#define ft_stroker_outside ODA_FT(ft_stroker_outside)
#define ft_stroker_process_corner ODA_FT(ft_stroker_process_corner)
#define ft_stroker_subpath_start ODA_FT(ft_stroker_subpath_start)
#define ft_stroker_add_reverse_left ODA_FT(ft_stroker_add_reverse_left)
#define ft_trig_arctan_table ODA_FT(ft_trig_arctan_table)
#define ft_trig_downscale ODA_FT(ft_trig_downscale)
#define ft_trig_downscale ODA_FT(ft_trig_downscale)
#define ft_trig_prenorm ODA_FT(ft_trig_prenorm)
#define ft_trig_pseudo_rotate ODA_FT(ft_trig_pseudo_rotate)
#define ft_trig_pseudo_polarize ODA_FT(ft_trig_pseudo_polarize)
#define bdf_cmap_class ODA_FT(bdf_cmap_class)
#define bdf_interpret_style ODA_FT(bdf_interpret_style)
#define bdf_get_bdf_property ODA_FT(bdf_get_bdf_property)
#define bdf_get_charset_id ODA_FT(bdf_get_charset_id)
#define bdf_service_bdf ODA_FT(bdf_service_bdf)
#define bdf_services ODA_FT(bdf_services)
#define _bdf_opts ODA_FT(_bdf_opts)
#define _bdf_properties ODA_FT(_bdf_properties  )
#define _num_bdf_properties ODA_FT(_num_bdf_properties)
#define _bdf_list_init ODA_FT(_bdf_list_init)
#define _bdf_list_done ODA_FT(_bdf_list_done)
#define _bdf_list_ensure ODA_FT(_bdf_list_ensure)
#define _bdf_list_shift ODA_FT(_bdf_list_shift)
#define _bdf_list_join ODA_FT(_bdf_list_join)
#define _bdf_list_split ODA_FT(_bdf_list_split)
#define _bdf_readstream ODA_FT(_bdf_readstream)
#define a2i ODA_FT(a2i)
#define ddigits ODA_FT(ddigits)
#define hdigits ODA_FT(hdigits)
#define _bdf_atoul ODA_FT(_bdf_atoul)
#define _bdf_atol ODA_FT(_bdf_atol)
#define _bdf_atous ODA_FT(_bdf_atous)
#define by_encoding ODA_FT(by_encoding)
#define bdf_create_property ODA_FT(bdf_create_property)
#define _bdf_add_comment ODA_FT(_bdf_add_comment)
#define _bdf_set_default_spacing ODA_FT(_bdf_set_default_spacing)
#define _bdf_is_atom ODA_FT(_bdf_is_atom)
#define _bdf_add_property ODA_FT(_bdf_add_property)
#define nibble_mask ODA_FT(nibble_mask)
#define _bdf_parse_glyphs ODA_FT(_bdf_parse_glyphs)
#define _bdf_parse_properties ODA_FT(_bdf_parse_properties)
#define _bdf_parse_start ODA_FT(_bdf_parse_start)
#define ft_bzip2_alloc ODA_FT(ft_bzip2_alloc)
#define ft_bzip2_free ODA_FT(ft_bzip2_free)
#define ft_bzip2_check_header ODA_FT(ft_bzip2_check_header)
#define ft_bzip2_file_init ODA_FT(ft_bzip2_file_init)
#define ft_bzip2_file_done ODA_FT(ft_bzip2_file_done)
#define ft_bzip2_file_reset ODA_FT(ft_bzip2_file_reset)
#define ft_bzip2_file_fill_input ODA_FT(ft_bzip2_file_fill_input)
#define ft_bzip2_file_fill_output ODA_FT(ft_bzip2_file_fill_output)
#define ft_bzip2_file_skip_output ODA_FT(ft_bzip2_file_skip_output)
#define ft_bzip2_file_io ODA_FT(ft_bzip2_file_io)
#define ft_bzip2_stream_close ODA_FT(ft_bzip2_stream_close)
#define ft_bzip2_stream_io ODA_FT(ft_bzip2_stream_io)

#define ftc_basic_image_family_class ODA_FT(ftc_basic_image_family_class)
#define ftc_basic_image_cache_class ODA_FT(ftc_basic_image_cache_class)
#define ftc_basic_sbit_family_class ODA_FT(ftc_basic_sbit_family_class)
#define ftc_basic_sbit_cache_class ODA_FT(ftc_basic_sbit_cache_class)
#define ftc_node_mru_link ODA_FT(ftc_node_mru_link)
#define ftc_node_mru_unlink ODA_FT(ftc_node_mru_unlink)
#define ftc_node_mru_up ODA_FT(ftc_node_mru_up)
#define ftc_cache_resize ODA_FT(ftc_cache_resize)
#define ftc_node_hash_unlink ODA_FT(ftc_node_hash_unlink)
#define ftc_node_hash_link ODA_FT(ftc_node_hash_link)
#define ftc_node_destroy ODA_FT(ftc_node_destroy)
#define FTC_Cache_Clear ODA_FT(FTC_Cache_Clear)
#define ftc_cache_add ODA_FT(ftc_cache_add)
#define ftc_cmap_cache_class ODA_FT(ftc_cmap_cache_class)
#define ftc_cmap_node_new ODA_FT(ftc_cmap_node_new)
#define ftc_cmap_node_weight ODA_FT(ftc_cmap_node_weight)
#define ftc_cmap_node_compare ODA_FT(ftc_cmap_node_compare)
#define ftc_cmap_node_remove_faceid ODA_FT(ftc_cmap_node_remove_faceid)
#define ftc_cmap_node_free ODA_FT(ftc_cmap_node_free)
#define ftc_cache_init ODA_FT(ftc_cache_init)
#define ftc_cache_done ODA_FT(ftc_cache_done)
#define ftc_scaler_lookup_size ODA_FT(ftc_scaler_lookup_size)
#define ftc_size_list_class ODA_FT(ftc_size_list_class)
#define ftc_size_node_compare_faceid ODA_FT(ftc_size_node_compare_faceid)
#define ftc_face_list_class ODA_FT(ftc_face_list_class)
#define ftc_face_node_compare ODA_FT(ftc_face_node_compare)
#define ftc_face_node_init ODA_FT(ftc_face_node_init)
#define ftc_face_node_done ODA_FT(ftc_face_node_done)
#define FTC_Manager_Check ODA_FT(FTC_Manager_Check)
#define ftc_sbit_copy_bitmap ODA_FT(ftc_sbit_copy_bitmap)
#define ftc_snode_load ODA_FT(ftc_snode_load)
#define cff_get_glyph_name ODA_FT(cff_get_glyph_name)
#define cff_get_name_index ODA_FT(cff_get_name_index)
#define cff_ps_has_glyph_names ODA_FT(cff_ps_has_glyph_names)
#define cff_ps_get_font_info ODA_FT(cff_ps_get_font_info)
#define cff_ps_get_font_extra ODA_FT(cff_ps_get_font_extra)
#define cff_get_ps_name ODA_FT(cff_get_ps_name)
#define cff_get_cmap_info ODA_FT(cff_get_cmap_info)
#define cff_get_ros ODA_FT(cff_get_ros)
#define cff_get_is_cid ODA_FT(cff_get_is_cid)
#define cff_get_cid_from_glyph_index ODA_FT(cff_get_cid_from_glyph_index)
#define cff_set_mm_blend ODA_FT(cff_set_mm_blend)
#define cff_get_mm_blend ODA_FT(cff_get_mm_blend)
#define cff_get_mm_var ODA_FT(cff_get_mm_var)
#define cff_set_var_design ODA_FT(cff_set_var_design)
#define cff_get_var_design ODA_FT(cff_get_var_design)
#define cff_set_instance ODA_FT(cff_set_instance)
#define cff_hadvance_adjust ODA_FT(cff_hadvance_adjust)
#define cff_metrics_adjust ODA_FT(cff_metrics_adjust)
#define cff_isoadobe_charset ODA_FT(cff_isoadobe_charset)
#define cff_expert_charset ODA_FT(cff_expert_charset)
#define cff_expertsubset_charset ODA_FT(cff_expertsubset_charset)
#define cff_standard_encoding ODA_FT(cff_standard_encoding)
#define cff_expert_encoding ODA_FT(cff_expert_encoding)
#define cff_index_read_offset ODA_FT(cff_index_read_offset)

#define cff_index_init ODA_FT(cff_index_init)
#define cff_index_done ODA_FT(cff_index_done)
#define cff_index_load_offsets ODA_FT(cff_index_load_offsets)
#define cff_index_get_pointers ODA_FT(cff_index_get_pointers)
#define CFF_Done_FD_Select ODA_FT(CFF_Done_FD_Select)
#define CFF_Load_FD_Select ODA_FT(CFF_Load_FD_Select)
#define cff_charset_compute_cids ODA_FT(cff_charset_compute_cids)
#define cff_charset_free_cids ODA_FT(cff_charset_free_cids)
#define cff_charset_done ODA_FT(cff_charset_done)
#define cff_charset_load ODA_FT(cff_charset_load)
#define cff_vstore_done ODA_FT(cff_vstore_done)
#define cff_vstore_load ODA_FT(cff_vstore_load)
#define cff_encoding_done ODA_FT(cff_encoding_done)
#define cff_encoding_load ODA_FT(cff_encoding_load)
#define cff_subfont_load ODA_FT(cff_subfont_load)
#define cff_subfont_done ODA_FT(cff_subfont_done)
#define cff_size_get_globals_funcs ODA_FT(cff_size_get_globals_funcs)
#define cff_make_private_dict ODA_FT(cff_make_private_dict)
#define cff_strcpy ODA_FT(cff_strcpy)
#define remove_subset_prefix ODA_FT(remove_subset_prefix)
#define remove_style ODA_FT(remove_style)
#define cff_parse_integer ODA_FT(cff_parse_integer)
#define power_tens ODA_FT(power_tens)
#define power_ten_limits ODA_FT(power_ten_limits)
#define cff_parse_real ODA_FT(cff_parse_real)
#define cff_parse_fixed ODA_FT(cff_parse_fixed)
#define cff_parse_fixed_scaled ODA_FT(cff_parse_fixed_scaled)
#define cff_parse_fixed_dynamic ODA_FT(cff_parse_fixed_dynamic)
#define cff_parse_font_matrix ODA_FT(cff_parse_font_matrix)
#define cff_parse_font_bbox ODA_FT(cff_parse_font_bbox)
#define cff_parse_private_dict ODA_FT(cff_parse_private_dict)
#define cff_parse_multiple_master ODA_FT(cff_parse_multiple_master)
#define cff_parse_cid_ros ODA_FT(cff_parse_cid_ros)
#define cff_parse_vsindex ODA_FT(cff_parse_vsindex)
#define cff_parse_blend ODA_FT(cff_parse_blend)
#define cff_parse_maxstack ODA_FT(cff_parse_maxstack)
#define cff_field_handlers ODA_FT(cff_field_handlers)
#define cff_field_handlers ODA_FT(cff_field_handlers)
#define cff_parse_integer ODA_FT(cff_parse_integer)
#define cid_load_keyword ODA_FT(cid_load_keyword)
#define cid_field_records ODA_FT(cid_field_records)
#define cid_parse_dict ODA_FT(cid_parse_dict)
#define cid_read_subrs ODA_FT(cid_read_subrs)
#define cid_init_loader ODA_FT(cid_init_loader)
#define cid_done_loader ODA_FT(cid_done_loader)
#define cid_hex_to_binary ODA_FT(cid_hex_to_binary)
#define cid_size_get_globals_funcs ODA_FT(cid_size_get_globals_funcs)
#define cid_get_postscript_name ODA_FT(cid_get_postscript_name)
#define cid_service_ps_name ODA_FT(cid_service_ps_name)
#define cid_ps_get_font_info ODA_FT(cid_ps_get_font_info)
#define cid_ps_get_font_extra ODA_FT(cid_ps_get_font_extra)
#define cid_service_ps_info ODA_FT(cid_service_ps_info)
#define cid_get_ros ODA_FT(cid_get_ros)
#define cid_get_is_cid ODA_FT(cid_get_is_cid)
#define cid_get_cid_from_glyph_index ODA_FT(cid_get_cid_from_glyph_index)
#define cid_service_cid_info ODA_FT(cid_service_cid_info)
#define cid_services ODA_FT(cid_services)
#define gxv_bsln_LookupValue_validate ODA_FT(gxv_bsln_LookupValue_validate)
#define gxv_bsln_LookupFmt4_transit ODA_FT(gxv_bsln_LookupFmt4_transit)
#define gxv_bsln_parts_fmt0_validate ODA_FT(gxv_bsln_parts_fmt0_validate)
#define gxv_bsln_parts_fmt1_validate ODA_FT(gxv_bsln_parts_fmt1_validate)
#define gxv_bsln_parts_fmt2_validate ODA_FT(gxv_bsln_parts_fmt2_validate)
#define gxv_bsln_parts_fmt3_validate ODA_FT(gxv_bsln_parts_fmt3_validate)
#define gxv_compare_ushort_offset ODA_FT(gxv_compare_ushort_offset)
#define gxv_compare_ulong_offset ODA_FT(gxv_compare_ulong_offset)
#define gxv_BinSrchHeader_check_consistency ODA_FT(gxv_BinSrchHeader_check_consistency)
#define gxv_lookup_value_load ODA_FT(gxv_lookup_value_load)
#define gxv_LookupTable_fmt0_validate ODA_FT(gxv_LookupTable_fmt0_validate)
#define gxv_LookupTable_fmt2_skip_endmarkers ODA_FT(gxv_LookupTable_fmt2_skip_endmarkers)
#define gxv_LookupTable_fmt2_validate ODA_FT(gxv_LookupTable_fmt2_validate)
#define gxv_LookupTable_fmt4_validate ODA_FT(gxv_LookupTable_fmt4_validate)
#define gxv_LookupTable_fmt6_skip_endmarkers ODA_FT(gxv_LookupTable_fmt6_skip_endmarkers)
#define gxv_LookupTable_fmt6_validate ODA_FT(gxv_LookupTable_fmt6_validate)
#define gxv_LookupTable_fmt8_validate ODA_FT(gxv_LookupTable_fmt8_validate)
#define gxv_ClassTable_validate ODA_FT(gxv_ClassTable_validate)

#define gxv_StateArray_validate ODA_FT(gxv_StateArray_validate)
#define gxv_EntryTable_validate ODA_FT(gxv_EntryTable_validate)
#define gxv_XClassTable_lookupval_validate ODA_FT(gxv_XClassTable_lookupval_validate)
#define gxv_XClassTable_lookupfmt4_transit ODA_FT(gxv_XClassTable_lookupfmt4_transit)
#define gxv_XStateArray_validate ODA_FT(gxv_XStateArray_validate)
#define gxv_XEntryTable_validate ODA_FT(gxv_XEntryTable_validate)
#define gxv_compare_ranges ODA_FT(gxv_compare_ranges)
#define gxv_feat_registry_validate ODA_FT(gxv_feat_registry_validate)
#define gxv_feat_name_index_validate ODA_FT(gxv_feat_name_index_validate)
#define gxv_feat_setting_validate ODA_FT(gxv_feat_setting_validate)
#define gxv_feat_name_validate ODA_FT(gxv_feat_name_validate)
#define gxv_feat_registry ODA_FT(gxv_feat_registry)
#define featreg_table ODA_FT(featreg_table)
#define gxv_just_check_max_gid ODA_FT(gxv_just_check_max_gid)
#define gxv_just_wdp_entry_validate ODA_FT(gxv_just_wdp_entry_validate)
#define gxv_just_wdc_entry_validate ODA_FT(gxv_just_wdc_entry_validate)
#define gxv_just_widthDeltaClusters_validate ODA_FT(gxv_just_widthDeltaClusters_validate)
#define gxv_just_actSubrecord_type0_validate ODA_FT(gxv_just_actSubrecord_type0_validate)
#define gxv_just_actSubrecord_type1_validate ODA_FT(gxv_just_actSubrecord_type1_validate)
#define gxv_just_actSubrecord_type2_validate ODA_FT(gxv_just_actSubrecord_type2_validate)
#define gxv_just_actSubrecord_type4_validate ODA_FT(gxv_just_actSubrecord_type4_validate)
#define gxv_just_actSubrecord_type5_validate ODA_FT(gxv_just_actSubrecord_type5_validate)
#define gxv_just_actSubrecord_validate ODA_FT(gxv_just_actSubrecord_validate)
#define gxv_just_pcActionRecord_validate ODA_FT(gxv_just_pcActionRecord_validate)
#define gxv_just_pcTable_LookupValue_entry_validate ODA_FT(gxv_just_pcTable_LookupValue_entry_validate)
#define gxv_just_pcLookupTable_validate ODA_FT(gxv_just_pcLookupTable_validate)
#define gxv_just_postcompTable_validate ODA_FT(gxv_just_postcompTable_validate)
#define gxv_just_classTable_entry_validate ODA_FT(gxv_just_classTable_entry_validate)
#define gxv_just_justClassTable_validate ODA_FT(gxv_just_justClassTable_validate)
#define gxv_just_wdcTable_LookupValue_validate ODA_FT(gxv_just_wdcTable_LookupValue_validate)
#define gxv_just_justData_lookuptable_validate ODA_FT(gxv_just_justData_lookuptable_validate)
#define gxv_just_justData_validate ODA_FT(gxv_just_justData_validate)

#define gxv_kern_subtable_fmt0_pairs_validate ODA_FT(gxv_kern_subtable_fmt0_pairs_validate)
#define gxv_kern_subtable_fmt0_validate ODA_FT(gxv_kern_subtable_fmt0_validate)
#define gxv_kern_subtable_fmt1_valueTable_load ODA_FT(gxv_kern_subtable_fmt1_valueTable_load)
#define gxv_kern_subtable_fmt1_subtable_setup ODA_FT(gxv_kern_subtable_fmt1_subtable_setup)
#define gxv_kern_subtable_fmt1_entry_validate ODA_FT(gxv_kern_subtable_fmt1_entry_validate)
#define gxv_kern_subtable_fmt1_validate ODA_FT(gxv_kern_subtable_fmt1_validate)
#define gxv_kern_subtable_fmt2_clstbl_validate ODA_FT(gxv_kern_subtable_fmt2_clstbl_validate)
#define gxv_kern_subtable_fmt2_validate ODA_FT(gxv_kern_subtable_fmt2_validate)
#define gxv_kern_subtable_fmt3_validate ODA_FT(gxv_kern_subtable_fmt3_validate)
#define gxv_kern_coverage_new_apple_validate ODA_FT(gxv_kern_coverage_new_apple_validate)
#define gxv_kern_coverage_classic_apple_validate ODA_FT(gxv_kern_coverage_classic_apple_validate)
#define gxv_kern_coverage_classic_microsoft_validate ODA_FT(gxv_kern_coverage_classic_microsoft_validate)
#define gxv_kern_coverage_validate ODA_FT(gxv_kern_coverage_validate)

#define gxv_kern_subtable_validate ODA_FT(gxv_kern_subtable_validate)
#define gxv_kern_validate_generic ODA_FT(gxv_kern_validate_generic)
#define gxv_lcar_partial_validate ODA_FT(gxv_lcar_partial_validate)
#define gxv_lcar_LookupValue_validate ODA_FT(gxv_lcar_LookupValue_validate)
#define gxv_lcar_LookupFmt4_transit ODA_FT(gxv_lcar_LookupFmt4_transit)
#define gxv_load_table ODA_FT(gxv_load_table)
#define gxv_validate ODA_FT(gxv_validate)
#define classic_kern_validate ODA_FT(classic_kern_validate)
#define gxvalid_interface ODA_FT(gxvalid_interface)
#define ckernvalid_interface ODA_FT(ckernvalid_interface)
#define gxvalid_get_service ODA_FT(gxvalid_get_service)
#define gxvalid_services ODA_FT(gxvalid_services)
#define gxv_module_class ODA_FT(gxv_module_class)
#define gxv_mort_feature_validate ODA_FT(gxv_mort_feature_validate)
#define gxv_mort_subtables_validate ODA_FT(gxv_mort_subtables_validate)
#define gxv_mort_chain_validate ODA_FT(gxv_mort_chain_validate)
#define GXV_Mort_IndicScript_Msg ODA_FT(GXV_Mort_IndicScript_Msg)
#define gxv_mort_subtable_type0_entry_validate ODA_FT(gxv_mort_subtable_type0_entry_validate)
#define gxv_mort_subtable_type1_substitutionTable_load ODA_FT(gxv_mort_subtable_type1_substitutionTable_load)

#define gxv_mort_subtable_type1_subtable_setup ODA_FT(gxv_mort_subtable_type1_subtable_setup)
#define gxv_mort_subtable_type1_offset_to_subst_validate ODA_FT(gxv_mort_subtable_type1_offset_to_subst_validate)
#define gxv_mort_subtable_type1_entry_validate ODA_FT(gxv_mort_subtable_type1_entry_validate)
#define gxv_mort_subtable_type1_substTable_validate ODA_FT(gxv_mort_subtable_type1_substTable_validate)
#define gxv_mort_subtable_type2_opttable_load ODA_FT(gxv_mort_subtable_type2_opttable_load)
#define gxv_mort_subtable_type2_subtable_setup ODA_FT(gxv_mort_subtable_type2_subtable_setup)
#define gxv_mort_subtable_type2_ligActionOffset_validate ODA_FT(gxv_mort_subtable_type2_ligActionOffset_validate)
#define gxv_mort_subtable_type2_entry_validate ODA_FT(gxv_mort_subtable_type2_entry_validate)
#define gxv_mort_subtable_type2_ligatureTable_validate ODA_FT(gxv_mort_subtable_type2_ligatureTable_validate)
#define gxv_mort_subtable_type4_lookupval_validate ODA_FT(gxv_mort_subtable_type4_lookupval_validate)
#define gxv_mort_subtable_type4_lookupfmt4_transit ODA_FT(gxv_mort_subtable_type4_lookupfmt4_transit)

#define gxv_mort_subtable_type5_InsertList_validate ODA_FT(gxv_mort_subtable_type5_InsertList_validate)
#define gxv_mort_subtable_type5_entry_validate ODA_FT(gxv_mort_subtable_type5_entry_validate)
#define gxv_morx_subtables_validate ODA_FT(gxv_morx_subtables_validate)
#define gxv_morx_chain_validate ODA_FT(gxv_morx_chain_validate)

#define gxv_morx_subtable_type0_entry_validate ODA_FT(gxv_morx_subtable_type0_entry_validate)
#define gxv_morx_subtable_type1_substitutionTable_load ODA_FT(gxv_morx_subtable_type1_substitutionTable_load)
#define gxv_morx_subtable_type1_subtable_setup ODA_FT(gxv_morx_subtable_type1_subtable_setup)
#define gxv_morx_subtable_type1_entry_validate ODA_FT(gxv_morx_subtable_type1_entry_validate)
#define gxv_morx_subtable_type1_LookupValue_validate ODA_FT(gxv_morx_subtable_type1_LookupValue_validate)
#define gxv_morx_subtable_type1_substitutionTable_validate ODA_FT(gxv_morx_subtable_type1_substitutionTable_validate)
#define gxv_morx_subtable_type2_opttable_load ODA_FT(gxv_morx_subtable_type2_opttable_load)
#define gxv_morx_subtable_type2_subtable_setup ODA_FT(gxv_morx_subtable_type2_subtable_setup)
#define gxv_morx_subtable_type2_ligActionIndex_validate ODA_FT(gxv_morx_subtable_type2_ligActionIndex_validate)
#define gxv_morx_subtable_type2_entry_validate ODA_FT(gxv_morx_subtable_type2_entry_validate)
#define gxv_morx_subtable_type2_ligatureTable_validate ODA_FT(gxv_morx_subtable_type2_ligatureTable_validate)
#define gxv_morx_subtable_type5_insertionGlyphList_load ODA_FT(gxv_morx_subtable_type5_insertionGlyphList_load)
#define gxv_morx_subtable_type5_subtable_setup ODA_FT(gxv_morx_subtable_type5_subtable_setup)
#define gxv_morx_subtable_type5_InsertList_validate ODA_FT(gxv_morx_subtable_type5_InsertList_validate)
#define gxv_morx_subtable_type5_entry_validate ODA_FT(gxv_morx_subtable_type5_entry_validate)
#define gxv_opbd_LookupValue_validate ODA_FT(gxv_opbd_LookupValue_validate)
#define gxv_opbd_LookupFmt4_transit ODA_FT(gxv_opbd_LookupFmt4_transit)
#define gxv_prop_zero_advance_validate ODA_FT(gxv_prop_zero_advance_validate)
#define gxv_prop_property_validate ODA_FT(gxv_prop_property_validate)
#define gxv_prop_LookupValue_validate ODA_FT(gxv_prop_LookupValue_validate)
#define gxv_prop_LookupFmt4_transit ODA_FT(gxv_prop_LookupFmt4_transit)
#define gxv_trak_trackTable_validate ODA_FT(gxv_trak_trackTable_validate)
#define gxv_trak_trackData_validate ODA_FT(gxv_trak_trackData_validate)
#define gxv_prop_zero_advance_validate ODA_FT(gxv_prop_zero_advance_validate)
#define gxv_prop_property_validate ODA_FT(gxv_prop_property_validate)
#define gxv_prop_LookupValue_validate ODA_FT(gxv_prop_LookupValue_validate)
#define gxv_prop_LookupFmt4_transit ODA_FT(gxv_prop_LookupFmt4_transit)
#define gxv_trak_trackTable_validate ODA_FT(gxv_trak_trackTable_validate)
#define gxv_trak_trackData_validate ODA_FT(gxv_trak_trackData_validate)
#define ft_gzip_alloc ODA_FT(ft_gzip_alloc)
#define ft_gzip_free ODA_FT(ft_gzip_free)
#define ft_gzip_check_header ODA_FT(ft_gzip_check_header)
#define ft_gzip_file_init ODA_FT(ft_gzip_file_init)
#define ft_gzip_file_done ODA_FT(ft_gzip_file_done)
#define ft_gzip_file_reset ODA_FT(ft_gzip_file_reset)
#define ft_gzip_file_fill_input ODA_FT(ft_gzip_file_fill_input)
#define ft_gzip_file_fill_output ODA_FT(ft_gzip_file_fill_output)
#define ft_gzip_file_skip_output ODA_FT(ft_gzip_file_skip_output)
#define ft_gzip_file_io ODA_FT(ft_gzip_file_io)
#define ft_gzip_stream_close ODA_FT(ft_gzip_stream_close)
#define ft_gzip_stream_io ODA_FT(ft_gzip_stream_io)
#define ft_gzip_get_uncompressed_size ODA_FT(ft_gzip_get_uncompressed_size)

#define ft_lzw_check_header ODA_FT(ft_lzw_check_header)
#define ft_lzw_file_init ODA_FT(ft_lzw_file_init)
#define ft_lzw_file_done ODA_FT(ft_lzw_file_done)
#define ft_lzw_file_reset ODA_FT(ft_lzw_file_reset)
#define ft_lzw_file_fill_output ODA_FT(ft_lzw_file_fill_output)
#define ft_lzw_file_skip_output ODA_FT(ft_lzw_file_skip_output)
#define ft_lzw_file_io ODA_FT(ft_lzw_file_io)
#define ft_lzw_stream_close ODA_FT(ft_lzw_stream_close)
#define ft_lzw_stream_io ODA_FT(ft_lzw_stream_io)
#define ft_lzwstate_refill ODA_FT(ft_lzwstate_refill)
#define ft_lzwstate_get_code ODA_FT(ft_lzwstate_get_code)
#define ft_lzwstate_stack_grow ODA_FT(ft_lzwstate_stack_grow)
#define ft_lzwstate_prefix_grow ODA_FT(ft_lzwstate_prefix_grow)
#define otv_BaseCoord_validate ODA_FT(otv_BaseCoord_validate)
#define otv_BaseTagList_validate ODA_FT(otv_BaseTagList_validate)
#define otv_BaseValues_validate ODA_FT(otv_BaseValues_validate)
#define otv_MinMax_validate ODA_FT(otv_MinMax_validate)
#define otv_BaseScript_validate ODA_FT(otv_BaseScript_validate)
#define otv_BaseScriptList_validate ODA_FT(otv_BaseScriptList_validate)
#define otv_Axis_validate ODA_FT(otv_Axis_validate)
#define otv_LookupList_get_count ODA_FT(otv_LookupList_get_count)

#define otv_Feature_get_count ODA_FT(otv_Feature_get_count)
#define otv_O_x_Ox ODA_FT(otv_O_x_Ox)
#define otv_CaretValue_validate ODA_FT(otv_CaretValue_validate)
#define otv_MarkGlyphSets_validate ODA_FT(otv_MarkGlyphSets_validate)
#define otv_LookupList_get_count ODA_FT(otv_LookupList_get_count)
#define otv_Feature_get_count ODA_FT(otv_Feature_get_count)
#define otv_O_x_Ox ODA_FT(otv_O_x_Ox)
#define otv_CaretValue_validate ODA_FT(otv_CaretValue_validate)
#define otv_MarkGlyphSets_validate ODA_FT(otv_MarkGlyphSets_validate)
#define otv_Anchor_validate ODA_FT(otv_Anchor_validate)
#define otv_MarkArray_validate ODA_FT(otv_MarkArray_validate)
#define otv_x_sxy ODA_FT(otv_x_sxy)
#define otv_u_O_O_u_O_O ODA_FT(otv_u_O_O_u_O_O)
#define otv_value_length ODA_FT(otv_value_length)
#define otv_ValueRecord_validate ODA_FT(otv_ValueRecord_validate)
#define otv_Anchor_validate ODA_FT(otv_Anchor_validate)
#define otv_MarkArray_validate ODA_FT(otv_MarkArray_validate)
#define otv_SinglePos_validate ODA_FT(otv_SinglePos_validate)
#define otv_PairSet_validate ODA_FT(otv_PairSet_validate)
#define otv_PairPos_validate ODA_FT(otv_PairPos_validate)
#define otv_CursivePos_validate ODA_FT(otv_CursivePos_validate)
#define otv_MarkBasePos_validate ODA_FT(otv_MarkBasePos_validate)
#define otv_MarkLigPos_validate ODA_FT(otv_MarkLigPos_validate)
#define otv_MarkMarkPos_validate ODA_FT(otv_MarkMarkPos_validate)
#define otv_ContextPos_validate ODA_FT(otv_ContextPos_validate)
#define otv_ChainContextPos_validate ODA_FT(otv_ChainContextPos_validate)

#define otv_ExtensionPos_validate ODA_FT(otv_ExtensionPos_validate)
#define otv_gpos_validate_funcs ODA_FT(otv_gpos_validate_funcs)
#define otv_SingleSubst_validate ODA_FT(otv_SingleSubst_validate)
#define otv_MultipleSubst_validate ODA_FT(otv_MultipleSubst_validate)
#define otv_AlternateSubst_validate ODA_FT(otv_AlternateSubst_validate)
#define otv_Ligature_validate ODA_FT(otv_Ligature_validate)
#define otv_LigatureSubst_validate ODA_FT(otv_LigatureSubst_validate)
#define otv_ContextSubst_validate ODA_FT(otv_ContextSubst_validate)
#define otv_ChainContextSubst_validate ODA_FT(otv_ChainContextSubst_validate)
#define otv_ExtensionSubst_validate ODA_FT(otv_ExtensionSubst_validate)
#define otv_ReverseChainSingleSubst_validate ODA_FT(otv_ReverseChainSingleSubst_validate)
#define otv_gsub_validate_funcs ODA_FT(otv_gsub_validate_funcs)
#define otv_JstfPriority_validate ODA_FT(otv_JstfPriority_validate)
#define otv_JstfScript_validate ODA_FT(otv_JstfScript_validate)
#define otv_MathConstants_validate ODA_FT(otv_MathConstants_validate)
#define otv_MathItalicsCorrectionInfo_validate ODA_FT(otv_MathItalicsCorrectionInfo_validate)
#define otv_MathKern_validate ODA_FT(otv_MathKern_validate)
#define otv_MathKernInfo_validate ODA_FT(otv_MathKernInfo_validate)
#define otv_MathGlyphInfo_validate ODA_FT(otv_MathGlyphInfo_validate)
#define otv_GlyphAssembly_validate ODA_FT(otv_GlyphAssembly_validate)
#define otv_MathGlyphConstruction_validate ODA_FT(otv_MathGlyphConstruction_validate)
#define otv_MathVariants_validate ODA_FT(otv_MathVariants_validate)
#define otv_load_table ODA_FT(otv_load_table)
#define otv_validate ODA_FT(otv_validate)
#define otvalid_interface ODA_FT(otvalid_interface)
#define otvalid_services ODA_FT(otvalid_services)
#define otvalid_get_service ODA_FT(otvalid_get_service)
#define otv_module_class ODA_FT(otv_module_class)
#define pcf_cmap_class ODA_FT(pcf_cmap_class)
#define pcf_get_bdf_property ODA_FT(pcf_get_bdf_property)
#define pcf_get_charset_id ODA_FT(pcf_get_charset_id)
#define pcf_service_bdf ODA_FT(pcf_service_bdf)
#define pcf_property_set ODA_FT(pcf_property_set)
#define pcf_property_get ODA_FT(pcf_property_get)
#define pcf_services ODA_FT(pcf_services)
#define tableNames ODA_FT(tableNames)
#define pcf_toc_header ODA_FT(pcf_toc_header)
#define pcf_table_header ODA_FT(pcf_table_header)
#define pcf_read_TOC ODA_FT(pcf_read_TOC)

#define pcf_metric_header ODA_FT(pcf_metric_header)
#define pcf_metric_msb_header ODA_FT(pcf_metric_msb_header)
#define pcf_compressed_metric_header ODA_FT(pcf_compressed_metric_header)
#define pcf_get_metric ODA_FT(pcf_get_metric)
#define pcf_seek_to_table_type ODA_FT(pcf_seek_to_table_type)
#define pcf_has_table_type ODA_FT(pcf_has_table_type)
#define pcf_property_header ODA_FT(pcf_property_header)
#define pcf_property_msb_header ODA_FT(pcf_property_msb_header)
#define pcf_get_properties ODA_FT(pcf_get_properties)
#define pcf_get_metrics ODA_FT(pcf_get_metrics)
#define pcf_get_bitmaps ODA_FT(pcf_get_bitmaps)
#define pcf_get_encodings ODA_FT(pcf_get_encodings)
#define pcf_accel_header ODA_FT(pcf_accel_header)
#define pcf_accel_msb_header ODA_FT(pcf_accel_msb_header)
#define pcf_get_accel ODA_FT(pcf_get_accel)
#define pcf_interpret_style ODA_FT(pcf_interpret_style)
#define pfr_metrics_service_rec ODA_FT(pfr_metrics_service_rec)
#define pfr_services ODA_FT(pfr_services)
#define pfr_get_service ODA_FT(pfr_get_service)
#define pfr_driver_class ODA_FT(pfr_driver_class)
#define pfr_face_init ODA_FT(pfr_face_init)
#define pfr_face_done ODA_FT(pfr_face_done)
#define pfr_slot_init ODA_FT(pfr_slot_init)
#define pfr_slot_done ODA_FT(pfr_slot_done)
#define pfr_slot_load ODA_FT(pfr_slot_load)
//#define pfr_get_kerning ODA_FT(pfr_get_kerning)
#define pfr_glyph_close_contour ODA_FT(pfr_glyph_close_contour)
#define pfr_glyph_start ODA_FT(pfr_glyph_start)
#define pfr_glyph_line_to ODA_FT(pfr_glyph_line_to)
#define pfr_glyph_curve_to ODA_FT(pfr_glyph_curve_to)
#define pfr_glyph_move_to ODA_FT(pfr_glyph_move_to)
#define pfr_glyph_end ODA_FT(pfr_glyph_end)
#define pfr_glyph_load_simple ODA_FT(pfr_glyph_load_simple)
#define pfr_glyph_load_compound ODA_FT(pfr_glyph_load_compound)
#define pfr_glyph_load_rec ODA_FT(pfr_glyph_load_rec)
#define pfr_metrics_service_rec ODA_FT(pfr_metrics_service_rec)
#define pfr_services ODA_FT(pfr_services)
#define pfr_glyph_close_contour ODA_FT(pfr_glyph_close_contour)
#define pfr_glyph_start ODA_FT(pfr_glyph_start)
#define pfr_glyph_line_to ODA_FT(pfr_glyph_line_to)
#define pfr_glyph_curve_to ODA_FT(pfr_glyph_curve_to)
#define pfr_glyph_move_to ODA_FT(pfr_glyph_move_to)
#define pfr_glyph_end ODA_FT(pfr_glyph_end)
#define pfr_glyph_load_simple ODA_FT(pfr_glyph_load_simple)
#define pfr_glyph_load_compound ODA_FT(pfr_glyph_load_compound)
#define pfr_glyph_load_rec ODA_FT(pfr_glyph_load_rec)
#define pfr_header_fields ODA_FT(pfr_header_fields)

#define pfr_phy_font_extra_items ODA_FT(pfr_phy_font_extra_items)
#define pfr_aux_name_load ODA_FT(pfr_aux_name_load)
#define pfr_bitwriter_init ODA_FT(pfr_bitwriter_init)
#define pfr_bitwriter_decode_bytes ODA_FT(pfr_bitwriter_decode_bytes)
#define pfr_bitwriter_decode_rle1 ODA_FT(pfr_bitwriter_decode_rle1)
#define pfr_bitwriter_decode_rle2 ODA_FT(pfr_bitwriter_decode_rle2)
#define pfr_lookup_bitmap_data ODA_FT(pfr_lookup_bitmap_data)
#define pfr_load_bitmap_metrics ODA_FT(pfr_load_bitmap_metrics)
#define pfr_load_bitmap_bits ODA_FT(pfr_load_bitmap_bits)
#define afm_stream_skip_spaces ODA_FT(afm_stream_skip_spaces)
#define afm_stream_read_one ODA_FT(afm_stream_read_one)
#define afm_stream_read_string ODA_FT(afm_stream_read_string)
#define afm_key_table ODA_FT(afm_key_table)
#define afm_tokenize ODA_FT(afm_tokenize)
#define afm_parser_read_int ODA_FT(afm_parser_read_int)
#define afm_parse_track_kern ODA_FT(afm_parse_track_kern)
#define afm_parse_kern_pairs ODA_FT(afm_parse_kern_pairs)
#define afm_parse_kern_data ODA_FT(afm_parse_kern_data)
#define afm_parser_skip_section ODA_FT(afm_parser_skip_section)
#define cff_argument_counts ODA_FT(cff_argument_counts)
#define cff_operator_seac ODA_FT(cff_operator_seac)
#define cff_compute_bias ODA_FT(cff_compute_bias)
#define cf2_arrstack_setNumElements ODA_FT(cf2_arrstack_setNumElements)
#define psaux_interface ODA_FT(psaux_interface)
#define ft_char_table ODA_FT(ft_char_table)
#define ft_char_table ODA_FT(ft_char_table)
#define cf2_computeDarkening ODA_FT(cf2_computeDarkening)
#define cf2_font_setup ODA_FT(cf2_font_setup)
#define cf2_checkTransform ODA_FT(cf2_checkTransform)
#define cf2_setGlyphWidth ODA_FT(cf2_setGlyphWidth)
#define cf2_free_instance ODA_FT(cf2_free_instance)
#define cf2_builder_moveTo ODA_FT(cf2_builder_moveTo)
#define cf2_builder_lineTo ODA_FT(cf2_builder_lineTo)
#define cf2_builder_cubeTo ODA_FT(cf2_builder_cubeTo)
#define cf2_outline_init ODA_FT(cf2_outline_init)
#define cf2_getScaleAndHintFlag ODA_FT(cf2_getScaleAndHintFlag)
#define cf2_getUnitsPerEm ODA_FT(cf2_getUnitsPerEm)
#define cf2_getWindingMomentum ODA_FT(cf2_getWindingMomentum)
#define cf2_hint_init ODA_FT(cf2_hint_init)
#define cf2_hint_initZero ODA_FT(cf2_hint_initZero)
#define cf2_hint_isPair ODA_FT(cf2_hint_isPair)
#define cf2_hint_isPairTop ODA_FT(cf2_hint_isPairTop)
#define cf2_hint_isTop ODA_FT(cf2_hint_isTop)
#define cf2_hint_isLocked ODA_FT(cf2_hint_isLocked)
#define cf2_hint_isSynthetic ODA_FT(cf2_hint_isSynthetic)
#define cf2_hintmap_isValid ODA_FT(cf2_hintmap_isValid)
#define cf2_hintmap_dump ODA_FT(cf2_hintmap_dump)
#define cf2_hintmap_map ODA_FT(cf2_hintmap_map)
#define cf2_hintmap_adjustHints ODA_FT(cf2_hintmap_adjustHints)
#define cf2_hintmap_insertHint ODA_FT(cf2_hintmap_insertHint)
#define cf2_glyphpath_hintPoint ODA_FT(cf2_glyphpath_hintPoint)
#define cf2_glyphpath_computeIntersection ODA_FT(cf2_glyphpath_computeIntersection)
#define cf2_glyphpath_pushPrevElem ODA_FT(cf2_glyphpath_pushPrevElem)

#define cf2_glyphpath_pushMove ODA_FT(cf2_glyphpath_pushMove)
#define cf2_glyphpath_computeOffset ODA_FT(cf2_glyphpath_computeOffset)
#define cf2_hintmask_setCounts ODA_FT(cf2_hintmask_setCounts)
#define cf2_hintmask_read ODA_FT(cf2_hintmask_read)
#define cf2_doStems ODA_FT(cf2_doStems)
#define cf2_doFlex ODA_FT(cf2_doFlex)
#define cf2_doBlend ODA_FT(cf2_doBlend)
#define shift_elements ODA_FT(shift_elements)
#define reallocate_t1_table ODA_FT(reallocate_t1_table)
#define skip_comment ODA_FT(skip_comment)
#define skip_spaces ODA_FT(skip_spaces)
#define skip_literal_string ODA_FT(skip_literal_string)
#define skip_string ODA_FT(skip_string)
#define skip_procedure ODA_FT(skip_procedure)
#define ps_tocoordarray ODA_FT(ps_tocoordarray)
#define ps_tofixedarray ODA_FT(ps_tofixedarray)
#define ps_tostring ODA_FT(ps_tostring)
#define ps_tobool ODA_FT(ps_tobool)
#define randomError2 ODA_FT(randomError2)
#define randomValue ODA_FT(randomValue)
#define t1_cmap_std_init ODA_FT(t1_cmap_std_init)
#define t1_args_count ODA_FT(t1_args_count)
#define t1_lookup_glyph_by_stdcharcode ODA_FT(t1_lookup_glyph_by_stdcharcode)
#define t1operator_seac ODA_FT(t1operator_seac)
#define psh_hint_overlap ODA_FT(psh_hint_overlap)
#define psh_hint_table_done ODA_FT(psh_hint_table_done)
#define psh_hint_table_deactivate ODA_FT(psh_hint_table_deactivate)
#define psh_hint_table_record ODA_FT(psh_hint_table_record)
#define psh_hint_table_record_mask ODA_FT(psh_hint_table_record_mask)
#define psh_hint_table_init ODA_FT(psh_hint_table_init)
#define psh_hint_table_activate_mask ODA_FT(psh_hint_table_activate_mask)
#define psh_dimension_quantize_len ODA_FT(psh_dimension_quantize_len)
#define ps_simple_scale ODA_FT(ps_simple_scale)
#define psh_hint_snap_stem_side_delta ODA_FT(psh_hint_snap_stem_side_delta)
#define psh_hint_align ODA_FT(psh_hint_align)
#define psh_hint_align_light ODA_FT(psh_hint_align_light)
#define psh_hint_table_align_hints ODA_FT(psh_hint_table_align_hints)
#define psh_print_zone ODA_FT(psh_print_zone)

#define psh_glyph_compute_inflections ODA_FT(psh_glyph_compute_inflections)
#define psh_compute_dir ODA_FT(psh_compute_dir)
#define psh_glyph_load_points ODA_FT(psh_glyph_load_points)
#define psh_glyph_save_points ODA_FT(psh_glyph_save_points)
#define psh_glyph_init ODA_FT(psh_glyph_init)
#define psh_glyph_compute_extrema ODA_FT(psh_glyph_compute_extrema)
#define psh_hint_table_find_strong_points ODA_FT(psh_hint_table_find_strong_points)
#define psh_glyph_find_strong_points ODA_FT(psh_glyph_find_strong_points)
#define psh_glyph_find_blue_points ODA_FT(psh_glyph_find_blue_points)
#define psh_glyph_interpolate_strong_points ODA_FT(psh_glyph_interpolate_strong_points)
#define psh_glyph_interpolate_normal_points ODA_FT(psh_glyph_interpolate_normal_points)
#define psh_glyph_interpolate_other_points ODA_FT(psh_glyph_interpolate_other_points)
#define psh_globals_scale_widths ODA_FT(psh_globals_scale_widths)
#define psh_blues_set_zones_0 ODA_FT(psh_blues_set_zones_0)
#define psh_blues_set_zones ODA_FT(psh_blues_set_zones)
#define psh_blues_scale_zones ODA_FT(psh_blues_scale_zones)
#define psh_calc_max_height ODA_FT(psh_calc_max_height)
#define psh_globals_destroy ODA_FT(psh_globals_destroy)
#define psh_globals_new ODA_FT(psh_globals_new)
#define ps_hint_table_done ODA_FT(ps_hint_table_done)
#define ps_hint_table_ensure ODA_FT(ps_hint_table_ensure)
#define ps_hint_table_alloc ODA_FT(ps_hint_table_alloc)
#define ps_mask_done ODA_FT(ps_mask_done)
#define ps_mask_ensure ODA_FT(ps_mask_ensure)
#define ps_mask_test_bit ODA_FT(ps_mask_test_bit)
#define ps_mask_clear_bit ODA_FT(ps_mask_clear_bit)
#define ps_mask_set_bit ODA_FT(ps_mask_set_bit)
#define ps_mask_table_done ODA_FT(ps_mask_table_done)
#define ps_mask_table_ensure ODA_FT(ps_mask_table_ensure)
#define ps_mask_table_alloc ODA_FT(ps_mask_table_alloc)
#define ps_mask_table_last ODA_FT(ps_mask_table_last)
#define ps_mask_table_set_bits ODA_FT(ps_mask_table_set_bits)
#define ps_mask_table_test_intersect ODA_FT(ps_mask_table_test_intersect)
#define ps_mask_table_merge ODA_FT(ps_mask_table_merge)
#define ps_mask_table_merge_all ODA_FT(ps_mask_table_merge_all)
#define ps_dimension_done ODA_FT(ps_dimension_done)
#define ps_dimension_init ODA_FT(ps_dimension_init)
#define ps_dimension_set_mask_bit ODA_FT(ps_dimension_set_mask_bit)
#define ps_dimension_end_mask ODA_FT(ps_dimension_end_mask)
#define ps_dimension_reset_mask ODA_FT(ps_dimension_reset_mask)
#define ps_dimension_set_mask_bits ODA_FT(ps_dimension_set_mask_bits)
#define ps_dimension_add_t1stem ODA_FT(ps_dimension_add_t1stem)
#define ps_dimension_add_counter ODA_FT(ps_dimension_add_counter)
#define ps_dimension_end ODA_FT(ps_dimension_end)
#define ps_hints_open ODA_FT(ps_hints_open)
#define ps_hints_stem ODA_FT(ps_hints_stem)
#define ps_hints_t1stem3 ODA_FT(ps_hints_t1stem3)
#define ps_hints_t1reset ODA_FT(ps_hints_t1reset)
#define ps_hints_t2mask ODA_FT(ps_hints_t2mask)
#define ps_hints_t2counter ODA_FT(ps_hints_t2counter)
#define ps_hints_close ODA_FT(ps_hints_close)
#define t1_hints_open ODA_FT(t1_hints_open)
#define t1_hints_stem ODA_FT(t1_hints_stem)
#define ps_unicode_value ODA_FT(ps_unicode_value)
#define ft_extra_glyph_unicodes ODA_FT(ft_extra_glyph_unicodes)
#define ft_extra_glyph_names ODA_FT(ft_extra_glyph_names)
#define ft_extra_glyph_name_offsets ODA_FT(ft_extra_glyph_name_offsets)

#define ps_check_extra_glyph_name ODA_FT(ps_check_extra_glyph_name)
#define ps_check_extra_glyph_unicode ODA_FT(ps_check_extra_glyph_unicode)
#define ps_unicodes_init ODA_FT(ps_unicodes_init)
#define ps_unicodes_char_index ODA_FT(ps_unicodes_char_index)
#define ps_unicodes_char_next ODA_FT(ps_unicodes_char_next)
#define ps_get_macintosh_name ODA_FT(ps_get_macintosh_name)
#define psnames_get_service ODA_FT(psnames_get_service)
//#define psnames_module_class ODA_FT(psnames_module_class)
#define ft_get_adobe_glyph_index ODA_FT(ft_get_adobe_glyph_index)
#define FT_MulDiv ODA_FT(FT_MulDiv)
//#define FT_MulDiv_No_Round ODA_FT(FT_MulDiv_No_Round)
#define cur_ras ODA_FT(cur_ras)
#define Set_High_Precision ODA_FT(Set_High_Precision)
#define New_Profile ODA_FT(New_Profile)
#define End_Profile ODA_FT(End_Profile)
#define Insert_Y_Turn ODA_FT(Insert_Y_Turn)
#define Finalize_Profile_Table ODA_FT(Finalize_Profile_Table)
#define Split_Conic ODA_FT(Split_Conic)
#define Split_Cubic ODA_FT(Split_Cubic)
#define Line_Up ODA_FT(Line_Up)
#define Line_Down ODA_FT(Line_Down)
#define Bezier_Up ODA_FT(Bezier_Up)
#define Bezier_Down ODA_FT(Bezier_Down)
#define Line_To ODA_FT(Line_To)
#define Conic_To ODA_FT(Conic_To)
#define Cubic_To ODA_FT(Cubic_To)
#define Decompose_Curve ODA_FT(Decompose_Curve)
#define Convert_Glyph ODA_FT(Convert_Glyph)
#define Init_Linked ODA_FT(Init_Linked)
#define InsNew ODA_FT(InsNew)
#define DelOld ODA_FT(DelOld)
#define Sort ODA_FT(Sort)
#define Vertical_Sweep_Init ODA_FT(Vertical_Sweep_Init)
#define Vertical_Sweep_Span ODA_FT(Vertical_Sweep_Span)
#define Vertical_Sweep_Drop ODA_FT(Vertical_Sweep_Drop)
#define Vertical_Sweep_Step ODA_FT(Vertical_Sweep_Step)
#define Horizontal_Sweep_Init ODA_FT(Horizontal_Sweep_Init)
#define Horizontal_Sweep_Span ODA_FT(Horizontal_Sweep_Span)
#define Horizontal_Sweep_Drop ODA_FT(Horizontal_Sweep_Drop)
#define Horizontal_Sweep_Step ODA_FT(Horizontal_Sweep_Step)
#define Draw_Sweep ODA_FT(Draw_Sweep)
#define Render_Single_Pass ODA_FT(Render_Single_Pass)
#define Render_Glyph ODA_FT(Render_Glyph)
#define ft_black_init ODA_FT(ft_black_init)
#define ft_black_new ODA_FT(ft_black_new)
#define ft_black_done ODA_FT(ft_black_done)
#define ft_black_reset ODA_FT(ft_black_reset)
#define ft_black_set_mode ODA_FT(ft_black_set_mode)
#define ft_black_render ODA_FT(ft_black_render)
#define ft_raster1_init ODA_FT(ft_raster1_init)
#define ft_raster1_set_mode ODA_FT(ft_raster1_set_mode)
#define ft_raster1_transform ODA_FT(ft_raster1_transform)
#define ft_raster1_get_cbox ODA_FT(ft_raster1_get_cbox)
#define ft_raster1_render ODA_FT(ft_raster1_render)

//define

#define multiply_alpha ODA_FT(multiply_alpha)
#define premultiply_data ODA_FT(premultiply_data)
#define convert_bytes_to_data ODA_FT(convert_bytes_to_data)
#define error_callback ODA_FT(error_callback)
#define warning_callback ODA_FT(warning_callback)
#define read_data_from_FT_Stream ODA_FT(read_data_from_FT_Stream)
#define get_sfnt_table ODA_FT(get_sfnt_table)
#define sfnt_table_info ODA_FT(sfnt_table_info)
#define sfnt_get_glyph_name ODA_FT(sfnt_get_glyph_name)
#define sfnt_get_name_index ODA_FT(sfnt_get_name_index)
#define sfnt_ps_map ODA_FT(sfnt_ps_map)
#define sfnt_is_postscript ODA_FT(sfnt_is_postscript)
#define sfnt_is_alphanumeric ODA_FT(sfnt_is_alphanumeric)
#define fmix32 ODA_FT(fmix32)
#define murmur_hash_3_128 ODA_FT(murmur_hash_3_128)
#define get_win_string ODA_FT(get_win_string)
#define get_apple_string ODA_FT(get_apple_string)
#define sfnt_get_name_id ODA_FT(sfnt_get_name_id)
#define fixed2float ODA_FT(fixed2float)
#define hexdigits ODA_FT(hexdigits)
#define sfnt_get_var_ps_name ODA_FT(sfnt_get_var_ps_name)
#define sfnt_get_ps_name ODA_FT(sfnt_get_ps_name)
#define sfnt_get_charset_id ODA_FT(sfnt_get_charset_id)
#define tt_name_ascii_from_utf16 ODA_FT(tt_name_ascii_from_utf16)
#define tt_name_ascii_from_other ODA_FT(tt_name_ascii_from_other)
#define sfnt_find_encoding ODA_FT(sfnt_find_encoding)
#define tt_encodings ODA_FT(tt_encodings)
#define sfnt_stream_close ODA_FT(sfnt_stream_close)
#define woff_open_font ODA_FT(woff_open_font)
#define woff_header_fields ODA_FT(woff_header_fields)
#define sfnt_open_font ODA_FT(sfnt_open_font)
#define ttc_header_fields ODA_FT(ttc_header_fields)
#define tt_face_load_bdf_props ODA_FT(tt_face_load_bdf_props)
#define tt_cmap2_get_subheader ODA_FT(tt_cmap2_get_subheader)
#define tt_cmap4_set_range ODA_FT(tt_cmap4_set_range)
#define tt_cmap4_next ODA_FT(tt_cmap4_next)
#define tt_cmap4_char_map_linear ODA_FT(tt_cmap4_char_map_linear)
#define tt_cmap4_char_map_binary ODA_FT(tt_cmap4_char_map_binary)
#define tt_cmap12_next ODA_FT(tt_cmap12_next)
#define tt_cmap12_char_map_binary ODA_FT(tt_cmap12_char_map_binary)
#define tt_cmap13_next ODA_FT(tt_cmap13_next)
#define tt_cmap13_char_map_binary ODA_FT(tt_cmap13_char_map_binary)
#define tt_cmap14_ensure ODA_FT(tt_cmap14_ensure)
#define tt_cmap14_char_map_def_binary ODA_FT(tt_cmap14_char_map_def_binary)
#define tt_cmap14_char_map_nondef_binary ODA_FT(tt_cmap14_char_map_nondef_binary)
#define tt_cmap14_find_variant ODA_FT(tt_cmap14_find_variant)
#define tt_cmap14_def_char_count ODA_FT(tt_cmap14_def_char_count)
#define tt_cmap14_get_def_chars ODA_FT(tt_cmap14_get_def_chars)
#define tt_cmap14_get_nondef_chars ODA_FT(tt_cmap14_get_nondef_chars)
#define tt_cmap_classes ODA_FT(tt_cmap_classes)
#define check_table_dir ODA_FT(check_table_dir)
#define tt_face_load_generic_header ODA_FT(tt_face_load_generic_header)
#define tt_post_default_names ODA_FT(tt_post_default_names)
#define load_format_20 ODA_FT(load_format_20)
#define load_format_25 ODA_FT(load_format_25)
#define load_post_names ODA_FT(load_post_names)
#define tt_sbit_decoder_init ODA_FT(tt_sbit_decoder_init)
#define tt_sbit_decoder_done ODA_FT(tt_sbit_decoder_done)
#define tt_sbit_decoder_alloc_bitmap ODA_FT(tt_sbit_decoder_alloc_bitmap)
#define tt_sbit_decoder_load_metrics ODA_FT(tt_sbit_decoder_load_metrics)
#define tt_sbit_decoder_load_image ODA_FT(tt_sbit_decoder_load_image)
#define tt_sbit_decoder_load_byte_aligned ODA_FT(tt_sbit_decoder_load_byte_aligned)
#define tt_sbit_decoder_load_bit_aligned ODA_FT(tt_sbit_decoder_load_bit_aligned)
#define tt_sbit_decoder_load_compound ODA_FT(tt_sbit_decoder_load_compound)
#define tt_sbit_decoder_load_png ODA_FT(tt_sbit_decoder_load_png)
#define tt_sbit_decoder_load_bitmap ODA_FT(tt_sbit_decoder_load_bitmap)
#define tt_sbit_decoder_load_image ODA_FT(tt_sbit_decoder_load_image)
#define tt_face_load_sbix_image ODA_FT(tt_face_load_sbix_image)
#define gray_dump_cells ODA_FT(gray_dump_cells)
#define gray_record_cell ODA_FT(gray_record_cell)
#define gray_set_cell ODA_FT(gray_set_cell)
#define gray_render_scanline ODA_FT(gray_render_scanline)
#define gray_render_line ODA_FT(gray_render_line)
#define gray_render_line ODA_FT(gray_render_line)
#define gray_split_conic ODA_FT(gray_split_conic)
#define gray_render_conic ODA_FT(gray_render_conic)
#define gray_split_cubic ODA_FT(gray_split_cubic)
#define gray_render_cubic ODA_FT(gray_render_cubic)
#define gray_move_to ODA_FT(gray_move_to)
#define gray_line_to ODA_FT(gray_line_to)
#define gray_conic_to ODA_FT(gray_conic_to)
#define gray_cubic_to ODA_FT(gray_cubic_to)
#define gray_hline ODA_FT(gray_hline)
#define gray_sweep ODA_FT(gray_sweep)
#define gray_convert_glyph_inner ODA_FT(gray_convert_glyph_inner)
#define gray_convert_glyph ODA_FT(gray_convert_glyph)
#define gray_raster_render ODA_FT(gray_raster_render)
#define gray_raster_new ODA_FT(gray_raster_new)
#define gray_raster_done ODA_FT(gray_raster_done)
#define gray_raster_new ODA_FT(gray_raster_new)
#define gray_raster_done ODA_FT(gray_raster_done)
#define gray_raster_reset ODA_FT(gray_raster_reset)
#define gray_raster_set_mode ODA_FT(gray_raster_set_mode)
#define ft_smooth_init ODA_FT(ft_smooth_init)
#define ft_smooth_set_mode ODA_FT(ft_smooth_set_mode)
#define ft_smooth_transform ODA_FT(ft_smooth_transform)
#define ft_smooth_get_cbox ODA_FT(ft_smooth_get_cbox)
#define ft_smooth_render_generic ODA_FT(ft_smooth_render_generic)
#define ft_smooth_render ODA_FT(ft_smooth_render)
#define ft_smooth_render_lcd ODA_FT(ft_smooth_render_lcd)
#define ft_smooth_render_lcd_v ODA_FT(ft_smooth_render_lcd_v)

#define tt_get_metrics ODA_FT(tt_get_metrics)
#define tt_get_metrics_incr_overrides ODA_FT(tt_get_metrics_incr_overrides)
#define tt_prepare_zone ODA_FT(tt_prepare_zone)
#define TT_Hint_Glyph ODA_FT(TT_Hint_Glyph)
#define TT_Process_Simple_Glyph ODA_FT(TT_Process_Simple_Glyph)
#define TT_Process_Composite_Component ODA_FT(TT_Process_Composite_Component)
#define TT_Process_Composite_Glyph ODA_FT(TT_Process_Composite_Glyph)
#define tt_loader_set_pp ODA_FT(tt_loader_set_pp)
#define ft_list_get_node_at ODA_FT(ft_list_get_node_at)
#define load_truetype_glyph ODA_FT(load_truetype_glyph)
#define compute_glyph_metrics ODA_FT(compute_glyph_metrics)
#define load_sbit_image ODA_FT(load_sbit_image)
#define tt_loader_init ODA_FT(tt_loader_init)
#define tt_loader_done ODA_FT(tt_loader_done)
#define ft_var_readpackedpoints ODA_FT(ft_var_readpackedpoints)
#define ft_var_readpackeddeltas ODA_FT(ft_var_readpackeddeltas)
#define ft_var_load_avar ODA_FT(ft_var_load_avar)
#define ft_var_load_item_variation_store ODA_FT(ft_var_load_item_variation_store)
#define ft_var_load_delta_set_index_mapping ODA_FT(ft_var_load_delta_set_index_mapping)
#define ft_var_load_hvvar ODA_FT(ft_var_load_hvvar)
#define ft_var_get_item_delta ODA_FT(ft_var_get_item_delta)
#define tt_hvadvance_adjust ODA_FT(tt_hvadvance_adjust)
#define ft_var_get_value_pointer ODA_FT(ft_var_get_value_pointer)
#define ft_var_load_mvar ODA_FT(ft_var_load_mvar)
#define tt_size_reset_iterator ODA_FT(tt_size_reset_iterator)
#define ft_var_load_gvar ODA_FT(ft_var_load_gvar)
//#define gvar_fields ODA_FT(gvar_fields)
#define ft_var_apply_tuple ODA_FT(ft_var_apply_tuple)

#define ft_var_to_normalized ODA_FT(ft_var_to_normalized)
#define ft_var_to_design ODA_FT(ft_var_to_design)
#define tt_set_mm_blend ODA_FT(tt_set_mm_blend)
#define tt_delta_shift ODA_FT(tt_delta_shift)
#define tt_delta_interpolate ODA_FT(tt_delta_interpolate)
#define tt_interpolate_deltas ODA_FT(tt_interpolate_deltas)
#define ft_var_done_item_variation_store ODA_FT(ft_var_done_item_variation_store)
#define Init_Context ODA_FT(Init_Context)
#define Pop_Push_Count ODA_FT(Pop_Push_Count)
#define opcode_name ODA_FT(opcode_name)
#define opcode_length ODA_FT(opcode_length)
//#define TT_MulFix14_arm ODA_FT(TT_MulFix14_arm)
//#define TT_MulFix14_long_long ODA_FT(TT_MulFix14_long_long)
//#define TT_MulFix14 ODA_FT(TT_MulFix14)
//#define TT_DotFix14_long_long ODA_FT(TT_DotFix14_long_long)
//#define TT_DotFix14 ODA_FT(TT_DotFix14)
#define Current_Ratio ODA_FT(Current_Ratio)
#define GetShortIns ODA_FT(GetShortIns)
#define Ins_Goto_CodeRange ODA_FT(Ins_Goto_CodeRange)
#define Direct_Move ODA_FT(Direct_Move)
#define Direct_Move_Orig ODA_FT(Direct_Move_Orig)
#define Direct_Move_X ODA_FT(Direct_Move_X)
#define Direct_Move_Y ODA_FT(Direct_Move_Y)
#define Direct_Move_Orig_X ODA_FT(Direct_Move_Orig_X)
#define Direct_Move_Orig_Y ODA_FT(Direct_Move_Orig_Y)
#define Round_None ODA_FT(Round_None)
#define Round_To_Grid ODA_FT(Round_To_Grid)
#define Round_To_Half_Grid ODA_FT(Round_To_Half_Grid)
#define Round_Down_To_Grid ODA_FT(Round_Down_To_Grid)
#define Round_Up_To_Grid ODA_FT(Round_Up_To_Grid)

#define Round_To_Double_Grid ODA_FT(Round_To_Double_Grid)
#define Round_Super ODA_FT(Round_Super)
#define Round_Super_45 ODA_FT(Round_Super_45)
#define Compute_Round ODA_FT(Compute_Round)
#define SetSuperRound ODA_FT(SetSuperRound)
#define Project ODA_FT(Project)
#define Dual_Project ODA_FT(Dual_Project)
#define Project_x ODA_FT(Project_x)
#define Project_y ODA_FT(Project_y)
#define Compute_Funcs ODA_FT(Compute_Funcs)
#define Normalize ODA_FT(Normalize)
#define Ins_MPPEM ODA_FT(Ins_MPPEM)
#define Ins_MPS ODA_FT(Ins_MPS)
#define Ins_DUP ODA_FT(Ins_DUP)
#define Ins_POP ODA_FT(Ins_POP)
#define Ins_CLEAR ODA_FT(Ins_CLEAR)
#define Ins_SWAP ODA_FT(Ins_SWAP)
#define Ins_DEPTH ODA_FT(Ins_DEPTH)
#define Ins_LT ODA_FT(Ins_LT)
#define Ins_LTEQ ODA_FT(Ins_LTEQ)
#define Ins_GT ODA_FT(Ins_GT)
#define Ins_GTEQ ODA_FT(Ins_GTEQ)
#define Ins_EQ ODA_FT(Ins_EQ)
#define Ins_NEQ ODA_FT(Ins_NEQ)
#define Ins_ODD ODA_FT(Ins_ODD)
#define Ins_EVEN ODA_FT(Ins_EVEN)
#define Ins_AND ODA_FT(Ins_AND)

#define Ins_OR ODA_FT(Ins_OR)
#define Ins_NOT ODA_FT(Ins_NOT)
#define Ins_SUB ODA_FT(Ins_SUB)
#define Ins_DIV ODA_FT(Ins_DIV)
#define Ins_MUL ODA_FT(Ins_MUL)
#define Ins_ABS ODA_FT(Ins_ABS)
#define Ins_NEG ODA_FT(Ins_NEG)
#define Ins_FLOOR ODA_FT(Ins_FLOOR)
#define Ins_CEILING ODA_FT(Ins_CEILING)
#define Ins_RS ODA_FT(Ins_RS)
#define Ins_WS ODA_FT(Ins_WS)
#define Ins_WCVTP ODA_FT(Ins_WCVTP)
#define Ins_WCVTF ODA_FT(Ins_WCVTF)
#define Ins_RCVT ODA_FT(Ins_RCVT)
#define Ins_AA ODA_FT(Ins_AA)
#define Ins_DEBUG ODA_FT(Ins_DEBUG)
#define Ins_ROUND ODA_FT(Ins_ROUND)
#define Ins_NROUND ODA_FT(Ins_NROUND)
#define Ins_MAX ODA_FT(Ins_MAX)
#define Ins_MIN ODA_FT(Ins_MIN)
#define Ins_MINDEX ODA_FT(Ins_MINDEX)
#define Ins_CINDEX ODA_FT(Ins_CINDEX)
#define Ins_ROLL ODA_FT(Ins_ROLL)
#define Ins_SLOOP ODA_FT(Ins_SLOOP)
#define Ins_IF ODA_FT(Ins_IF)
#define Ins_ELSE ODA_FT(Ins_ELSE)
#define Ins_EIF ODA_FT(Ins_EIF)
#define Ins_JMPR ODA_FT(Ins_JMPR)
#define Ins_JROT ODA_FT(Ins_JROT)
#define Ins_JROF ODA_FT(Ins_JROF)
#define Ins_FDEF ODA_FT(Ins_FDEF)
#define Ins_ENDF ODA_FT(Ins_ENDF)
#define Ins_CALL ODA_FT(Ins_CALL)
#define Ins_LOOPCALL ODA_FT(Ins_LOOPCALL)
#define Ins_IDEF ODA_FT(Ins_IDEF)
#define Ins_NPUSHB ODA_FT(Ins_NPUSHB)
#define Ins_NPUSHW ODA_FT(Ins_NPUSHW)
#define Ins_PUSHB ODA_FT(Ins_PUSHB)
#define Ins_PUSHW ODA_FT(Ins_PUSHW)
#define Ins_SxVTL ODA_FT(Ins_SxVTL)
#define Ins_SxyTCA ODA_FT(Ins_SxyTCA)
#define Ins_SPVTL ODA_FT(Ins_SPVTL)
#define Ins_SFVTL ODA_FT(Ins_SFVTL)
#define Ins_SFVTPV ODA_FT(Ins_SFVTPV)
#define Ins_SPVFS ODA_FT(Ins_SPVFS)
#define Ins_SFVFS ODA_FT(Ins_SFVFS)
#define Ins_GPV ODA_FT(Ins_GPV)
#define	  Ins_GFV 	ODA_FT(	  Ins_GFV 	)
#define	  Ins_SRP0 	ODA_FT(	  Ins_SRP0 	)
#define	  Ins_SRP1 	ODA_FT(	  Ins_SRP1 	)
#define	  Ins_SRP2 	ODA_FT(	  Ins_SRP2 	)
#define	  Ins_SMD 	ODA_FT(	  Ins_SMD 	)
#define	  Ins_SCVTCI 	ODA_FT(	  Ins_SCVTCI 	)
#define	  Ins_SSWCI 	ODA_FT(	  Ins_SSWCI 	)
#define	  Ins_SSW 	ODA_FT(	  Ins_SSW 	)
#define	  Ins_FLIPON 	ODA_FT(	  Ins_FLIPON 	)
#define	  Ins_FLIPOFF 	ODA_FT(	  Ins_FLIPOFF 	)
#define	  Ins_SANGW	ODA_FT(	  Ins_SANGW	)
#define	  Ins_SDB 	ODA_FT(	  Ins_SDB 	)
#define	  Ins_SDS 	ODA_FT(	  Ins_SDS 	)
#define	  Ins_RTHG 	ODA_FT(	  Ins_RTHG 	)
#define	  Ins_RTG 	ODA_FT(	  Ins_RTG 	)
#define	  Ins_RTDG 	ODA_FT(	  Ins_RTDG 	)
#define	  Ins_RUTG 	ODA_FT(	  Ins_RUTG 	)
#define	  Ins_RDTG 	ODA_FT(	  Ins_RDTG 	)
#define	  Ins_ROFF 	ODA_FT(	  Ins_ROFF 	)
#define	  Ins_SROUND 	ODA_FT(	  Ins_SROUND 	)
#define	  Ins_S45ROUND 	ODA_FT(	  Ins_S45ROUND 	)
#define	  Ins_GC 	ODA_FT(	  Ins_GC 	)
#define	  Ins_SCFS 	ODA_FT(	  Ins_SCFS 	)
#define	  Ins_MD 	ODA_FT(	  Ins_MD 	)
#define	  Ins_SDPVTL 	ODA_FT(	  Ins_SDPVTL 	)
#define	  Ins_SZP0 	ODA_FT(	  Ins_SZP0 	)
#define	  Ins_SZP1 	ODA_FT(	  Ins_SZP1 	)
#define	  Ins_SZP2 	ODA_FT(	  Ins_SZP2 	)
#define	  Ins_SZPS 	ODA_FT(	  Ins_SZPS 	)
#define	  Ins_INSTCTRL 	ODA_FT(	  Ins_INSTCTRL 	)
#define	  Ins_SCANCTRL 	ODA_FT(	  Ins_SCANCTRL 	)
#define	  Ins_SCANTYPE 	ODA_FT(	  Ins_SCANTYPE 	)
#define	  Ins_FLIPPT 	ODA_FT(	  Ins_FLIPPT 	)
#define	  Ins_FLIPRGON 	ODA_FT(	  Ins_FLIPRGON 	)
#define	  Ins_FLIPRGOFF 	ODA_FT(	  Ins_FLIPRGOFF 	)
#define	  Ins_SHP 	ODA_FT(	  Ins_SHP 	)
#define	  Ins_SHC 	ODA_FT(	  Ins_SHC 	)
#define	  Ins_SHZ 	ODA_FT(	  Ins_SHZ 	)
#define	  Ins_SHPIX 	ODA_FT(	  Ins_SHPIX 	)
#define	  Ins_MSIRP 	ODA_FT(	  Ins_MSIRP 	)
#define	  Ins_MDAP 	ODA_FT(	  Ins_MDAP 	)
#define	  Ins_MIAP 	ODA_FT(	  Ins_MIAP 	)
#define	  Ins_MDRP 	ODA_FT(	  Ins_MDRP 	)
#define	  Ins_MIRP 	ODA_FT(	  Ins_MIRP 	)
#define	  Ins_ALIGNRP 	ODA_FT(	  Ins_ALIGNRP 	)
#define	  Ins_ISECT 	ODA_FT(	  Ins_ISECT 	)
#define	  Ins_ALIGNPTS 	ODA_FT(	  Ins_ALIGNPTS 	)
#define	  Ins_IP 	ODA_FT(	  Ins_IP 	)
#define	  Ins_UTP 	ODA_FT(	  Ins_UTP 	)
#define	  Ins_IUP 	ODA_FT(	  Ins_IUP 	)
#define	  Ins_DELTAP 	ODA_FT(	  Ins_DELTAP 	)
#define	  Ins_DELTAC 	ODA_FT(	  Ins_DELTAC 	)
#define	  Ins_GETINFO 	ODA_FT(	  Ins_GETINFO 	)
#define	  Ins_GETVARIATION 	ODA_FT(	  Ins_GETVARIATION 	)
#define	  Ins_GETDATA	ODA_FT(	  Ins_GETDATA	)
#define	  Ins_UNKNOWN 	ODA_FT(	  Ins_UNKNOWN 	)

#define _iup_worker_shift ODA_FT(_iup_worker_shift)
#define _iup_worker_interpolate ODA_FT(_iup_worker_interpolate)
#define tt_check_trickyness_family ODA_FT(tt_check_trickyness_family)
#define trick_names ODA_FT(trick_names)
#define tt_synth_sfnt_checksum ODA_FT(tt_synth_sfnt_checksum)
#define tt_get_sfnt_checksum ODA_FT(tt_get_sfnt_checksum)
#define tt_check_trickyness_sfnt_ids ODA_FT(tt_check_trickyness_sfnt_ids)
#define tt_sfnt_id_rec ODA_FT(tt_sfnt_id_rec)
#define tt_check_trickyness ODA_FT(tt_check_trickyness)
#define tt_check_single_notdef ODA_FT(tt_check_single_notdef)
#define tt_size_done_bytecode ODA_FT(tt_size_done_bytecode)
#define tt_size_init_bytecode ODA_FT(tt_size_init_bytecode)
#define FAMILY_CLASS_Rules ODA_FT(FAMILY_CLASS_Rules)
#define STYLE_CLASS_Rules ODA_FT(STYLE_CLASS_Rules)
#define t1_get_index ODA_FT(t1_get_index)
#define T1_Read_PFM ODA_FT(T1_Read_PFM)
#define t1_get_glyph_name ODA_FT(t1_get_glyph_name)
#define t1_get_name_index ODA_FT(t1_get_name_index)
#define t1_service_glyph_dict ODA_FT(t1_service_glyph_dict)
#define t1_get_ps_name ODA_FT(t1_get_ps_name)
#define t1_service_ps_name ODA_FT(t1_service_ps_name)
#define t1_service_multi_masters ODA_FT(t1_service_multi_masters)
#define t1_ps_get_font_info ODA_FT(t1_ps_get_font_info)
#define t1_ps_get_font_extra ODA_FT(t1_ps_get_font_extra)
#define t1_ps_has_glyph_names ODA_FT(t1_ps_has_glyph_names)
#define t1_ps_get_font_private ODA_FT(t1_ps_get_font_private)
#define t1_ps_get_font_value ODA_FT(t1_ps_get_font_value)
#define t1_service_ps_info ODA_FT(t1_service_ps_info)
#define t1_service_kerning ODA_FT(t1_service_kerning)
#define t1_services ODA_FT(t1_services)
#define Get_Kerning ODA_FT(Get_Kerning)
#define T1_Parse_Glyph_And_Get_Char_String ODA_FT(T1_Parse_Glyph_And_Get_Char_String)
#define t1_allocate_blend ODA_FT(t1_allocate_blend)
#define mm_axis_unmap ODA_FT(mm_axis_unmap)
#define mm_weights_unmap ODA_FT(mm_weights_unmap)
#define t1_set_mm_blend ODA_FT(t1_set_mm_blend)
#define parse_blend_axis_types ODA_FT(parse_blend_axis_types)
#define parse_blend_design_positions ODA_FT(parse_blend_design_positions)
#define parse_blend_design_map ODA_FT(parse_blend_design_map)
#define parse_weight_vector ODA_FT(parse_weight_vector)
#define parse_buildchar ODA_FT(parse_buildchar)
#define t1_load_keyword ODA_FT(t1_load_keyword)
#define parse_private ODA_FT(parse_private)
#define read_binary_data ODA_FT(read_binary_data)
#define t1_parse_font_matrix ODA_FT(t1_parse_font_matrix)
#define parse_encoding ODA_FT(parse_encoding )
#define parse_subrs ODA_FT(parse_subrs)
#define parse_charstrings ODA_FT(parse_charstrings)
#define t1_keywords ODA_FT(t1_keywords)
#define parse_dict ODA_FT(parse_dict)
#define t1_init_loader ODA_FT(t1_init_loader)
#define t1_done_loader ODA_FT(t1_done_loader)
#define T1_Size_Get_Globals_Funcs ODA_FT(T1_Size_Get_Globals_Funcs)
#define read_pfb_tag ODA_FT(read_pfb_tag)
#define check_type1_format ODA_FT(check_type1_format)
#define t42_get_glyph_name ODA_FT(t42_get_glyph_name)
#define t42_get_name_index ODA_FT(t42_get_name_index)
#define t42_service_glyph_dict ODA_FT(t42_service_glyph_dict)
#define t42_get_ps_font_name ODA_FT(t42_get_ps_font_name)
#define t42_service_ps_font_name ODA_FT(t42_service_ps_font_name)
#define t42_ps_get_font_info ODA_FT(t42_ps_get_font_info)
#define t42_ps_get_font_extra ODA_FT(t42_ps_get_font_extra)
#define t42_ps_has_glyph_names ODA_FT(t42_ps_has_glyph_names)
#define t42_ps_get_font_private ODA_FT(t42_ps_get_font_private)
#define t42_service_ps_info ODA_FT(t42_service_ps_info)
#define t42_services ODA_FT(t42_services)
#define t42_driver_class ODA_FT(t42_driver_class)
#define T42_Open_Face ODA_FT(T42_Open_Face)
#define t42_glyphslot_clear ODA_FT(t42_glyphslot_clear)
#define t42_parse_font_matrix ODA_FT(t42_parse_font_matrix)
#define t42_parse_encoding ODA_FT(t42_parse_encoding)
#define t42_parse_charstrings ODA_FT(t42_parse_charstrings)
#define t42_parse_sfnts ODA_FT(t42_parse_sfnts)
#define t42_keywords ODA_FT(t42_keywords)
#define t42_is_space ODA_FT(t42_is_space)
#define t42_parse_font_matrix ODA_FT(t42_parse_font_matrix)
#define t42_parse_encoding ODA_FT(t42_parse_encoding)
#define t42_parse_sfnts ODA_FT(t42_parse_sfnts)
#define t42_parse_charstrings ODA_FT(t42_parse_charstrings)
#define t42_load_keyword ODA_FT(t42_load_keyword)
#define winmz_header_fields ODA_FT(winmz_header_fields)
#define winne_header_fields ODA_FT(winne_header_fields)
#define winpe32_header_fields ODA_FT(winpe32_header_fields)
#define winpe32_section_fields ODA_FT(winpe32_section_fields)
#define winpe_rsrc_dir_fields ODA_FT(winpe_rsrc_dir_fields)
#define winpe_rsrc_dir_entry_fields ODA_FT(winpe_rsrc_dir_entry_fields)
#define winpe_rsrc_data_entry_fields ODA_FT(winpe_rsrc_data_entry_fields)
#define winfnt_header_fields ODA_FT(winfnt_header_fields)
#define fnt_font_done ODA_FT(fnt_font_done)
#define fnt_font_load ODA_FT(fnt_font_load)
#define fnt_face_get_dll_font ODA_FT(fnt_face_get_dll_font)
#define fnt_cmap_init ODA_FT(fnt_cmap_init)
#define fnt_cmap_char_index ODA_FT(fnt_cmap_char_index)
#define fnt_cmap_char_next ODA_FT(fnt_cmap_char_next)
#define fnt_cmap_class_rec ODA_FT(fnt_cmap_class_rec)
#define fnt_cmap_class ODA_FT(fnt_cmap_class)
#define FNT_Face_Done ODA_FT(FNT_Face_Done)
#define FNT_Face_Init ODA_FT(FNT_Face_Init)
#define FNT_Size_Select ODA_FT(FNT_Size_Select)
#define FNT_Size_Request ODA_FT(FNT_Size_Request)
#define FNT_Load_Glyph ODA_FT(FNT_Load_Glyph)
#define winfnt_get_header ODA_FT(winfnt_get_header)
#define winfnt_service_rec ODA_FT(winfnt_service_rec)
#define winfnt_services ODA_FT(winfnt_services)
#define winfnt_get_service ODA_FT(winfnt_get_service)
#define winfnt_driver_class ODA_FT(winfnt_driver_class)

//FT_CALLBACK_DEF
#define	af_autofitter_init	ODA_FT(	af_autofitter_init	)
#define	af_autofitter_done	ODA_FT(	af_autofitter_done	)
#define	af_autofitter_load_glyph	ODA_FT(	af_autofitter_load_glyph	)
#define	af_get_interface	ODA_FT(	af_get_interface	)
#define	af_autofitter_init	ODA_FT(	af_autofitter_init	)
#define	af_autofitter_done	ODA_FT(	af_autofitter_done	)
#define	af_autofitter_load_glyph	ODA_FT(	af_autofitter_load_glyph	)
#define	afm_compare_kern_pairs	ODA_FT(	afm_compare_kern_pairs	)
#define	afm_compare_kern_pairs	ODA_FT(	afm_compare_kern_pairs	)
#define	bdf_cmap_init	ODA_FT(	bdf_cmap_init	)
#define	bdf_cmap_init	ODA_FT(	bdf_cmap_init	)
#define	bdf_cmap_done	ODA_FT(	bdf_cmap_done	)
#define	bdf_cmap_char_index	ODA_FT(	bdf_cmap_char_index	)
#define	bdf_cmap_char_next	ODA_FT(	bdf_cmap_char_next	)
#define	BDF_Face_Done	ODA_FT(	BDF_Face_Done	)
#define	BDF_Face_Init	ODA_FT(	BDF_Face_Init	)
#define	BDF_Face_Init	ODA_FT(	BDF_Face_Init	)
#define	BDF_Size_Select	ODA_FT(	BDF_Size_Select	)
#define	BDF_Size_Request	ODA_FT(	BDF_Size_Request	)
#define	BDF_Glyph_Load	ODA_FT(	BDF_Glyph_Load	)
#define	BDF_Size_Select	ODA_FT(	BDF_Size_Select	)
#define	BDF_Size_Request	ODA_FT(	BDF_Size_Request	)
#define	BDF_Glyph_Load	ODA_FT(	BDF_Glyph_Load	)
#define	bdf_driver_requester	ODA_FT(	bdf_driver_requester	)
#define	bdf_driver_requester	ODA_FT(	bdf_driver_requester	)
#define	ft_service_list_lookup	ODA_FT(	ft_service_list_lookup	)
#define	bdf_driver_class	ODA_FT(	bdf_driver_class	)
#define	bdf_driver_requester	ODA_FT(	bdf_driver_requester	)
#define	cff_cmap_encoding_init	ODA_FT(	cff_cmap_encoding_init	)
#define	cff_cmap_encoding_init	ODA_FT(	cff_cmap_encoding_init	)
#define	cff_cmap_encoding_done	ODA_FT(	cff_cmap_encoding_done	)
#define	cff_cmap_encoding_char_index	ODA_FT(	cff_cmap_encoding_char_index	)
#define	cff_cmap_encoding_char_next	ODA_FT(	cff_cmap_encoding_char_next	)
#define	cff_sid_to_glyph_name	ODA_FT(	cff_sid_to_glyph_name	)
#define	cff_cmap_unicode_init	ODA_FT(	cff_cmap_unicode_init	)
#define	cff_cmap_unicode_done	ODA_FT(	cff_cmap_unicode_done	)
#define	cff_cmap_unicode_char_next	ODA_FT(	cff_cmap_unicode_char_next	)
#define	cff_cmap_unicode_char_index	ODA_FT(	cff_cmap_unicode_char_index	)
#define	cff_cmap_unicode_char_next	ODA_FT(	cff_cmap_unicode_char_next	)
#define	cff_get_kerning	ODA_FT(	cff_get_kerning	)
#define	cff_get_kerning	ODA_FT(	cff_get_kerning	)
#define	cff_glyph_load	ODA_FT(	cff_glyph_load	)
#define	cff_glyph_load	ODA_FT(	cff_glyph_load	)
#define	cff_get_advances	ODA_FT(	cff_get_advances	)
#define	cff_get_advances	ODA_FT(	cff_get_advances	)
#define	cff_get_interface	ODA_FT(	cff_get_interface	)
#define	cid_load_glyph	ODA_FT(	cid_load_glyph	)
#define	cid_parse_font_matrix	ODA_FT(	cid_parse_font_matrix	)
#define	parse_fd_array	ODA_FT(	parse_fd_array	)
#define	parse_expansion_factor	ODA_FT(	parse_expansion_factor	)
#define	cid_get_interface	ODA_FT(	cid_get_interface	)
#define	ft_bitmap_glyph_init	ODA_FT(	ft_bitmap_glyph_init	)
#define	ft_bitmap_glyph_copy	ODA_FT(	ft_bitmap_glyph_copy	)
#define	ft_bitmap_glyph_done	ODA_FT(	ft_bitmap_glyph_done	)
#define	ft_bitmap_glyph_bbox	ODA_FT(	ft_bitmap_glyph_bbox	)
#define	ft_outline_glyph_init	ODA_FT(	ft_outline_glyph_init	)
#define	ft_outline_glyph_done	ODA_FT(	ft_outline_glyph_done	)
#define	ft_outline_glyph_copy	ODA_FT(	ft_outline_glyph_copy	)
#define	ft_outline_glyph_transform	ODA_FT(	ft_outline_glyph_transform	)
#define	ft_outline_glyph_bbox	ODA_FT(	ft_outline_glyph_bbox	)
#define	ft_outline_glyph_prepare	ODA_FT(	ft_outline_glyph_prepare	)
#define	ft_alloc	ODA_FT(	ft_alloc	)
#define	ft_realloc	ODA_FT(	ft_realloc	)
#define	ft_free	ODA_FT(	ft_free	)
#define	ft_ansi_stream_close	ODA_FT(	ft_ansi_stream_close	)
#define	ft_ansi_stream_io	ODA_FT(	ft_ansi_stream_io	)
#define	pcf_cmap_init	ODA_FT(	pcf_cmap_init	)
#define	pcf_cmap_done	ODA_FT(	pcf_cmap_done	)
#define	pcf_cmap_char_index	ODA_FT(	pcf_cmap_char_index	)
#define	pcf_cmap_char_index	ODA_FT(	pcf_cmap_char_index	)
#define	pcf_cmap_char_next	ODA_FT(	pcf_cmap_char_next	)
#define	PCF_Face_Done	ODA_FT(	PCF_Face_Done	)
#define	PCF_Face_Done	ODA_FT(	PCF_Face_Done	)
#define	PCF_Face_Init	ODA_FT(	PCF_Face_Init	)
#define	PCF_Size_Select	ODA_FT(	PCF_Size_Select	)
#define	PCF_Size_Select	ODA_FT(	PCF_Size_Select	)
#define	PCF_Size_Request	ODA_FT(	PCF_Size_Request	)
#define	PCF_Glyph_Load	ODA_FT(	PCF_Glyph_Load	)
#define	pcf_driver_requester	ODA_FT(	pcf_driver_requester	)
#define	pcf_driver_init	ODA_FT(	pcf_driver_init	)
#define	pcf_driver_done	ODA_FT(	pcf_driver_done	)
#define	pfr_cmap_init	ODA_FT(	pfr_cmap_init	)
#define	pfr_cmap_done	ODA_FT(	pfr_cmap_done	)
#define	pfr_cmap_char_index	ODA_FT(	pfr_cmap_char_index	)
#define	pfr_cmap_char_next	ODA_FT(	pfr_cmap_char_next	)
#define	pfr_get_kerning	ODA_FT(	pfr_get_kerning	)
#define	pfr_get_advance	ODA_FT(	pfr_get_advance	)
#define	pfr_get_metrics	ODA_FT(	pfr_get_metrics	)
//#define	pfr_get_service	ODA_FT(	pfr_get_service	)
#define	pfr_extra_item_load_bitmap_info	ODA_FT(	pfr_extra_item_load_bitmap_info	)
#define	pfr_extra_item_load_font_id	ODA_FT(	pfr_extra_item_load_font_id	)
#define	pfr_extra_item_load_bitmap_info	ODA_FT(	pfr_extra_item_load_bitmap_info	)
#define	pfr_extra_item_load_stem_snaps	ODA_FT(	pfr_extra_item_load_stem_snaps	)
#define	pfr_extra_item_load_kerning_pairs	ODA_FT(	pfr_extra_item_load_kerning_pairs	)
#define	pfr_extra_item_load_font_id	ODA_FT(	pfr_extra_item_load_font_id	)
#define	pfr_extra_item_load_stem_snaps	ODA_FT(	pfr_extra_item_load_stem_snaps	)
#define	pfr_extra_item_load_kerning_pairs	ODA_FT(	pfr_extra_item_load_kerning_pairs	)
#define	ps_hinter_done	ODA_FT(	ps_hinter_done	)
#define	ps_hinter_done	ODA_FT(	ps_hinter_done	)
#define	ps_hinter_init	ODA_FT(	ps_hinter_init	)
#define	pshinter_get_globals_func	ODA_FT(	pshinter_get_globals_func	)
#define	pshinter_get_t1_funcs	ODA_FT(	pshinter_get_t1_funcs	)
#define	pshinter_get_t2_funcs	ODA_FT(	pshinter_get_t2_funcs	)
#define	compare_uni_maps	ODA_FT(	compare_uni_maps	)
#define	sfnt_get_interface	ODA_FT(	sfnt_get_interface	)
#define	tt_face_load_sfnt_header_stub	ODA_FT(	tt_face_load_sfnt_header_stub	)
#define	tt_face_load_directory_stub	ODA_FT(	tt_face_load_directory_stub	)
#define	tt_face_load_hdmx_stub	ODA_FT(	tt_face_load_hdmx_stub	)
#define	tt_face_set_sbit_strike_stub	ODA_FT(	tt_face_set_sbit_strike_stub	)
#define	tt_face_set_sbit_strike_stub	ODA_FT(	tt_face_set_sbit_strike_stub	)
#define	tt_face_load_sbit_stub	ODA_FT(	tt_face_load_sbit_stub	)
#define	tt_face_free_sbit_stub	ODA_FT(	tt_face_free_sbit_stub	)
#define	tt_face_load_charmap_stub	ODA_FT(	tt_face_load_charmap_stub	)
#define	tt_face_free_charmap_stub	ODA_FT(	tt_face_free_charmap_stub	)
#define	sfnt_get_interface	ODA_FT(	sfnt_get_interface	)
#define	compare_offsets	ODA_FT(	compare_offsets	)
#define	compare_kern_pairs	ODA_FT(	compare_kern_pairs	)
#define	compare_kern_pairs	ODA_FT(	compare_kern_pairs	)
#define	t1_cmap_std_done	ODA_FT(	t1_cmap_std_done	)
#define	t1_cmap_std_done	ODA_FT(	t1_cmap_std_done	)
#define	t1_cmap_std_char_index	ODA_FT(	t1_cmap_std_char_index	)
#define	t1_cmap_std_char_next	ODA_FT(	t1_cmap_std_char_next	)
#define	t1_cmap_standard_init	ODA_FT(	t1_cmap_standard_init	)
#define	t1_cmap_expert_init	ODA_FT(	t1_cmap_expert_init	)
#define	t1_cmap_custom_init	ODA_FT(	t1_cmap_custom_init	)
#define	t1_cmap_custom_init	ODA_FT(	t1_cmap_custom_init	)
#define	t1_cmap_custom_done	ODA_FT(	t1_cmap_custom_done	)
#define	t1_cmap_custom_done	ODA_FT(	t1_cmap_custom_done	)
#define	t1_cmap_custom_char_index	ODA_FT(	t1_cmap_custom_char_index	)
#define	t1_cmap_custom_char_next	ODA_FT(	t1_cmap_custom_char_next	)
#define	psaux_get_glyph_name	ODA_FT(	psaux_get_glyph_name	)
#define	t1_cmap_unicode_init	ODA_FT(	t1_cmap_unicode_init	)
#define	t1_cmap_unicode_done	ODA_FT(	t1_cmap_unicode_done	)
#define	t1_cmap_unicode_char_index	ODA_FT(	t1_cmap_unicode_char_index	)
#define	t1_cmap_unicode_char_next	ODA_FT(	t1_cmap_unicode_char_next	)
#define	Get_Interface	ODA_FT(	Get_Interface	)
#define	T1_Parse_Glyph	ODA_FT(	T1_Parse_Glyph	)
#define	T42_Get_Interface	ODA_FT(	T42_Get_Interface	)
#define	tt_cmap_init	ODA_FT(	tt_cmap_init	)
#define	tt_cmap0_validate	ODA_FT(	tt_cmap0_validate	)
#define	tt_cmap0_char_index	ODA_FT(	tt_cmap0_char_index	)
#define	tt_cmap0_char_next	ODA_FT(	tt_cmap0_char_next	)
#define	tt_cmap0_char_next	ODA_FT(	tt_cmap0_char_next	)
#define	tt_cmap0_get_info	ODA_FT(	tt_cmap0_get_info	)
#define	tt_cmap2_validate	ODA_FT(	tt_cmap2_validate	)
#define	tt_cmap2_char_index	ODA_FT(	tt_cmap2_char_index	)
#define	tt_cmap2_char_next	ODA_FT(	tt_cmap2_char_next	)
#define	tt_cmap2_get_info	ODA_FT(	tt_cmap2_get_info	)
#define	tt_cmap4_init	ODA_FT(	tt_cmap4_init	)
#define	tt_cmap4_validate	ODA_FT(	tt_cmap4_validate	)
#define	tt_cmap4_char_index	ODA_FT(	tt_cmap4_char_index	)
#define	tt_cmap4_char_next	ODA_FT(	tt_cmap4_char_next	)
#define	tt_cmap4_get_info	ODA_FT(	tt_cmap4_get_info	)
#define	tt_cmap6_validate	ODA_FT(	tt_cmap6_validate	)
#define	tt_cmap6_validate	ODA_FT(	tt_cmap6_validate	)
#define	tt_cmap6_char_index	ODA_FT(	tt_cmap6_char_index	)
#define	tt_cmap6_char_next	ODA_FT(	tt_cmap6_char_next	)
#define	tt_cmap6_get_info	ODA_FT(	tt_cmap6_get_info	)
#define	tt_cmap8_char_next	ODA_FT(	tt_cmap8_char_next	)
#define	tt_cmap8_validate	ODA_FT(	tt_cmap8_validate	)
#define	tt_cmap8_char_index	ODA_FT(	tt_cmap8_char_index	)
#define	tt_cmap8_char_next	ODA_FT(	tt_cmap8_char_next	)
#define	tt_cmap8_get_info	ODA_FT(	tt_cmap8_get_info	)
#define	tt_cmap10_validate	ODA_FT(	tt_cmap10_validate	)
#define	tt_cmap10_char_index	ODA_FT(	tt_cmap10_char_index	)
#define	tt_cmap10_char_next	ODA_FT(	tt_cmap10_char_next	)
#define	tt_cmap10_get_info	ODA_FT(	tt_cmap10_get_info	)
#define	tt_cmap12_init	ODA_FT(	tt_cmap12_init	)
#define	tt_cmap12_validate	ODA_FT(	tt_cmap12_validate	)
#define	tt_cmap13_init	ODA_FT(	tt_cmap13_init	)
#define	tt_cmap12_char_index	ODA_FT(	tt_cmap12_char_index	)
#define	tt_cmap12_char_next	ODA_FT(	tt_cmap12_char_next	)
#define	tt_cmap12_get_info	ODA_FT(	tt_cmap12_get_info	)
#define	tt_cmap13_init	ODA_FT(	tt_cmap13_init	)
#define	tt_cmap13_validate	ODA_FT(	tt_cmap13_validate	)
#define	tt_cmap13_char_index	ODA_FT(	tt_cmap13_char_index	)
#define	tt_cmap13_char_next	ODA_FT(	tt_cmap13_char_next	)
#define	tt_cmap13_get_info	ODA_FT(	tt_cmap13_get_info	)
#define	tt_cmap14_done	ODA_FT(	tt_cmap14_done	)
#define	tt_cmap14_init	ODA_FT(	tt_cmap14_init	)
#define	tt_cmap14_validate	ODA_FT(	tt_cmap14_validate	)
#define	tt_cmap14_char_index	ODA_FT(	tt_cmap14_char_index	)
#define	tt_cmap14_char_next	ODA_FT(	tt_cmap14_char_next	)
#define	tt_cmap14_get_info	ODA_FT(	tt_cmap14_get_info	)
#define	tt_cmap14_char_var_index	ODA_FT(	tt_cmap14_char_var_index	)
#define	tt_cmap14_char_var_isdefault	ODA_FT(	tt_cmap14_char_var_isdefault	)
#define	tt_cmap14_variants	ODA_FT(	tt_cmap14_variants	)
#define	tt_cmap14_char_variants	ODA_FT(	tt_cmap14_char_variants	)
#define	tt_cmap14_variant_chars	ODA_FT(	tt_cmap14_variant_chars	)
#define	tt_get_glyph_name	ODA_FT(	tt_get_glyph_name	)
#define	tt_cmap_unicode_init	ODA_FT(	tt_cmap_unicode_init	)
#define	tt_cmap_unicode_done	ODA_FT(	tt_cmap_unicode_done	)
#define	tt_cmap_unicode_char_index	ODA_FT(	tt_cmap_unicode_char_index	)
#define	tt_cmap_unicode_char_next	ODA_FT(	tt_cmap_unicode_char_next	)
#define	TT_Access_Glyph_Frame	ODA_FT(	TT_Access_Glyph_Frame	)
#define	TT_Forget_Glyph_Frame	ODA_FT(	TT_Forget_Glyph_Frame	)
#define	TT_Load_Glyph_Header	ODA_FT(	TT_Load_Glyph_Header	)
#define	TT_Load_Simple_Glyph	ODA_FT(	TT_Load_Simple_Glyph	)
#define	TT_Load_Composite_Glyph	ODA_FT(	TT_Load_Composite_Glyph	)
#define	Current_Ppem	ODA_FT(	Current_Ppem	)
#define	Read_CVT	ODA_FT(	Read_CVT	)
#define	Write_CVT	ODA_FT(	Write_CVT	)
#define	Move_CVT	ODA_FT(	Move_CVT	)

//FT_BASE
#define	FT_New_Memory_Stream	ODA_FT(	FT_New_Memory_Stream	)
#define	FT_Seek_Stream	ODA_FT(	FT_Seek_Stream	)
#define	FT_Skip_Stream	ODA_FT(	FT_Skip_Stream	)
#define	FT_Read_Stream	ODA_FT(	FT_Read_Stream	)
#define	FT_Extract_Frame	ODA_FT(	FT_Extract_Frame	)
#define	FT_Release_Frame	ODA_FT(	FT_Release_Frame	)
#define	FT_Access_Frame	ODA_FT(	FT_Access_Frame	)
#define	FT_Forget_Frame	ODA_FT(	FT_Forget_Frame	)
//#define	FT_MSB	ODA_FT(	FT_MSB	)
#define	FT_Hypot	ODA_FT(	FT_Hypot	)
#define	FT_MulDiv_No_Round	ODA_FT(	FT_MulDiv_No_Round	)
#define	FT_Matrix_Multiply_Scaled	ODA_FT(	FT_Matrix_Multiply_Scaled	)
#define	FT_Vector_Transform_Scaled	ODA_FT(	FT_Vector_Transform_Scaled	)
#define	FT_Vector_NormLen	ODA_FT(	FT_Vector_NormLen	)
#define	FT_SqrtFixed	ODA_FT(	FT_SqrtFixed	)
#define	ft_corner_orientation	ODA_FT(	ft_corner_orientation	)
#define	ft_corner_is_flat	ODA_FT(	ft_corner_is_flat	)
#define	_ft_debug_file	ODA_FT(	_ft_debug_file	)
#define	_ft_debug_lineno	ODA_FT(	_ft_debug_lineno	)
#define	FT_Message	ODA_FT(	FT_Message	)
#define	FT_Panic	ODA_FT(	FT_Panic	)
#define	FT_Throw	ODA_FT(	FT_Throw	)
#define	FT_Trace_Get_Count	ODA_FT(	FT_Trace_Get_Count	)
#define	FT_Trace_Get_Name	ODA_FT(	FT_Trace_Get_Name	)
#define	FT_Trace_Get_Count	ODA_FT(	FT_Trace_Get_Count	)
#define	ft_debug_init	ODA_FT(	ft_debug_init	)
#define	FT_Trace_Get_Name	ODA_FT(	FT_Trace_Get_Name	)
#define	FT_GlyphLoader_New	ODA_FT(	FT_GlyphLoader_New	)
#define	FT_GlyphLoader_Rewind	ODA_FT(	FT_GlyphLoader_Rewind	)
#define	FT_GlyphLoader_Reset	ODA_FT(	FT_GlyphLoader_Reset	)
#define	FT_GlyphLoader_Reset	ODA_FT(	FT_GlyphLoader_Reset	)
#define	FT_GlyphLoader_Done	ODA_FT(	FT_GlyphLoader_Done	)
#define	FT_GlyphLoader_CreateExtra	ODA_FT(	FT_GlyphLoader_CreateExtra	)
#define	FT_GlyphLoader_CheckPoints	ODA_FT(	FT_GlyphLoader_CheckPoints	)
#define	FT_GlyphLoader_CheckSubGlyphs	ODA_FT(	FT_GlyphLoader_CheckSubGlyphs	)
#define	FT_GlyphLoader_Prepare	ODA_FT(	FT_GlyphLoader_Prepare	)
#define	FT_GlyphLoader_Add	ODA_FT(	FT_GlyphLoader_Add	)
#define	FT_GlyphLoader_CopyPoints	ODA_FT(	FT_GlyphLoader_CopyPoints	)
#define	ft_destroy_default_module_classes	ODA_FT(	ft_destroy_default_module_classes	)
#define	ft_create_default_module_classes	ODA_FT(	ft_create_default_module_classes	)
#define	ft_lcd_padding	ODA_FT(	ft_lcd_padding	)
#define	ft_lcd_filter_fir	ODA_FT(	ft_lcd_filter_fir	)
#define	ft_lcd_padding	ODA_FT(	ft_lcd_padding	)
#define	ft_service_list_lookup	ODA_FT(	ft_service_list_lookup	)
#define	ft_validator_init	ODA_FT(	ft_validator_init	)
#define	ft_validator_run	ODA_FT(	ft_validator_run	)
#define	ft_validator_error	ODA_FT(	ft_validator_error	)
#define	ft_service_list_lookup	ODA_FT(	ft_service_list_lookup	)
#define	FT_Stream_New	ODA_FT(	FT_Stream_New	)
#define	FT_Stream_Free	ODA_FT(	FT_Stream_Free	)
#define	ft_glyphslot_free_bitmap	ODA_FT(	ft_glyphslot_free_bitmap	)
#define	ft_glyphslot_set_bitmap	ODA_FT(	ft_glyphslot_set_bitmap	)
#define	ft_glyphslot_alloc_bitmap	ODA_FT(	ft_glyphslot_alloc_bitmap	)
#define	ft_glyphslot_preset_bitmap	ODA_FT(	ft_glyphslot_preset_bitmap	)
#define	FT_New_GlyphSlot	ODA_FT(	FT_New_GlyphSlot	)
#define	FT_Done_GlyphSlot	ODA_FT(	FT_Done_GlyphSlot	)
#define	FT_Match_Size	ODA_FT(	FT_Match_Size	)
#define	ft_synthesize_vertical_metrics	ODA_FT(	ft_synthesize_vertical_metrics	)
#define	FT_Select_Metrics	ODA_FT(	FT_Select_Metrics	)
#define	FT_Request_Metrics	ODA_FT(	FT_Request_Metrics	)
#define	FT_CMap_Done	ODA_FT(	FT_CMap_Done	)
#define	FT_CMap_New	ODA_FT(	FT_CMap_New	)
#define	FT_CMap_Done	ODA_FT(	FT_CMap_Done	)
#define	FT_CMap_New	ODA_FT(	FT_CMap_New	)
#define	FT_Lookup_Renderer	ODA_FT(	FT_Lookup_Renderer	)
#define	FT_Render_Glyph_Internal	ODA_FT(	FT_Render_Glyph_Internal	)
#define	FT_Get_Module_Interface	ODA_FT(	FT_Get_Module_Interface	)
#define	ft_module_get_service	ODA_FT(	ft_module_get_service	)
#define	ft_property_string_set	ODA_FT(	ft_property_string_set	)
#define	ft_pic_container_init	ODA_FT(	ft_pic_container_init	)
#define	ft_pic_container_destroy	ODA_FT(	ft_pic_container_destroy	)
#define	FT_Raccess_Get_HeaderInfo	ODA_FT(	FT_Raccess_Get_HeaderInfo	)
#define	FT_Raccess_Get_DataOffsets	ODA_FT(	FT_Raccess_Get_DataOffsets	)
#define	FT_Raccess_Guess	ODA_FT(	FT_Raccess_Guess	)
#define	FT_Raccess_Guess	ODA_FT(	FT_Raccess_Guess	)
#define	FT_Stream_OpenMemory	ODA_FT(	FT_Stream_OpenMemory	)
#define	FT_Stream_Close	ODA_FT(	FT_Stream_Close	)
#define	FT_Stream_Seek	ODA_FT(	FT_Stream_Seek	)
#define	FT_Stream_Skip	ODA_FT(	FT_Stream_Skip	)
#define	FT_Stream_Pos	ODA_FT(	FT_Stream_Pos	)
#define	FT_Stream_Read	ODA_FT(	FT_Stream_Read	)
#define	FT_Stream_ReadAt	ODA_FT(	FT_Stream_ReadAt	)
#define	FT_Stream_TryRead	ODA_FT(	FT_Stream_TryRead	)
#define	FT_Stream_ExtractFrame	ODA_FT(	FT_Stream_ExtractFrame	)
#define	FT_Stream_ReleaseFrame	ODA_FT(	FT_Stream_ReleaseFrame	)
#define	FT_Stream_EnterFrame	ODA_FT(	FT_Stream_EnterFrame	)
#define	FT_Stream_ExitFrame	ODA_FT(	FT_Stream_ExitFrame	)
#define	FT_Stream_GetChar	ODA_FT(	FT_Stream_GetChar	)
#define	FT_Stream_GetUShort	ODA_FT(	FT_Stream_GetUShort	)
#define	FT_Stream_GetUShortLE	ODA_FT(	FT_Stream_GetUShortLE	)
#define	FT_Stream_GetUOffset	ODA_FT(	FT_Stream_GetUOffset	)
#define	FT_Stream_GetULong	ODA_FT(	FT_Stream_GetULong	)
#define	FT_Stream_GetULongLE	ODA_FT(	FT_Stream_GetULongLE	)
#define	FT_Stream_ReadChar	ODA_FT(	FT_Stream_ReadChar	)
#define	FT_Stream_ReadUShort	ODA_FT(	FT_Stream_ReadUShort	)
#define	FT_Stream_ReadUShortLE	ODA_FT(	FT_Stream_ReadUShortLE	)
#define	FT_Stream_ReadUOffset	ODA_FT(	FT_Stream_ReadUOffset	)
#define	FT_Stream_ReadULong	ODA_FT(	FT_Stream_ReadULong	)
#define	FT_Stream_ReadULongLE	ODA_FT(	FT_Stream_ReadULongLE	)
#define	FT_Stream_ReadFields	ODA_FT(	FT_Stream_ReadFields	)
#define	FT_Stream_Open	ODA_FT(	FT_Stream_Open	)
#define	FT_New_Memory	ODA_FT(	FT_New_Memory	)
#define	FT_Done_Memory	ODA_FT(	FT_Done_Memory	)
#define	ft_mem_alloc	ODA_FT(	ft_mem_alloc	)
#define	ft_mem_qalloc	ODA_FT(	ft_mem_qalloc	)
#define	ft_mem_realloc	ODA_FT(	ft_mem_realloc	)
#define	ft_mem_qrealloc	ODA_FT(	ft_mem_qrealloc	)
#define	ft_mem_free	ODA_FT(	ft_mem_free	)
#define	ft_mem_dup	ODA_FT(	ft_mem_dup	)
#define	ft_mem_strdup	ODA_FT(	ft_mem_strdup	)
#define	ft_mem_strcpyn	ODA_FT(	ft_mem_strcpyn	)

//FT_LOCAL_DEF

#define	  af_angle_atan	ODA_FT(	  af_angle_atan	)
#define	  af_sort_pos	ODA_FT(	  af_sort_pos	)
#define	  af_sort_and_quantize_widths	ODA_FT(	  af_sort_and_quantize_widths	)
#define	  af_cjk_metrics_init_widths	ODA_FT(	  af_cjk_metrics_init_widths	)
#define	  af_cjk_metrics_check_digits	ODA_FT(	  af_cjk_metrics_check_digits	)
#define	  af_cjk_metrics_init	ODA_FT(	  af_cjk_metrics_init	)
#define	  af_cjk_metrics_scale	ODA_FT(	  af_cjk_metrics_scale	)
#define	  af_cjk_get_standard_widths	ODA_FT(	  af_cjk_get_standard_widths	)
#define	  af_cjk_hints_init	ODA_FT(	  af_cjk_hints_init	)
#define	  af_cjk_hints_apply	ODA_FT(	  af_cjk_hints_apply	)
#define	  af_face_globals_new	ODA_FT(	  af_face_globals_new	)
#define	  af_face_globals_free	ODA_FT(	  af_face_globals_free	)
#define	  af_face_globals_get_metrics	ODA_FT(	  af_face_globals_get_metrics	)
#define	  af_face_globals_is_digit	ODA_FT(	  af_face_globals_is_digit	)
#define	  af_face_globals_is_digit	ODA_FT(	  af_face_globals_is_digit	)
#define	  af_axis_hints_new_segment	ODA_FT(	  af_axis_hints_new_segment	)
#define	  af_direction_compute	ODA_FT(	  af_direction_compute	)
#define	  af_glyph_hints_init	ODA_FT(	  af_glyph_hints_init	)
#define	  af_glyph_hints_done	ODA_FT(	  af_glyph_hints_done	)
#define	  af_glyph_hints_rescale	ODA_FT(	  af_glyph_hints_rescale	)
#define	  af_glyph_hints_reload	ODA_FT(	  af_glyph_hints_reload	)
#define	  af_glyph_hints_save	ODA_FT(	  af_glyph_hints_save	)
#define	  af_glyph_hints_align_edge_points	ODA_FT(	  af_glyph_hints_align_edge_points	)
#define	  af_glyph_hints_align_strong_points	ODA_FT(	  af_glyph_hints_align_strong_points	)
#define	  af_glyph_hints_align_weak_points	ODA_FT(	  af_glyph_hints_align_weak_points	)
#define	  af_glyph_hints_scale_dim	ODA_FT(	  af_glyph_hints_scale_dim	)
#define	  af_latin_metrics_init_widths	ODA_FT(	  af_latin_metrics_init_widths	)
#define	  af_latin_metrics_check_digits	ODA_FT(	  af_latin_metrics_check_digits	)
#define	  af_latin_metrics_init	ODA_FT(	  af_latin_metrics_init	)
#define	  af_latin_metrics_scale	ODA_FT(	  af_latin_metrics_scale	)
#define	  af_latin_get_standard_widths	ODA_FT(	  af_latin_get_standard_widths	)
#define	  af_latin_hints_compute_segments	ODA_FT(	  af_latin_hints_compute_segments	)
#define	  af_latin_hints_link_segments	ODA_FT(	  af_latin_hints_link_segments	)
#define	  af_latin_hints_compute_edges	ODA_FT(	  af_latin_hints_compute_edges	)
#define	  af_latin_hints_detect_features	ODA_FT(	  af_latin_hints_detect_features	)
#define	  af_loader_init	ODA_FT(	  af_loader_init	)
#define	  af_loader_reset	ODA_FT(	  af_loader_reset	)
#define	  af_loader_done	ODA_FT(	  af_loader_done	)
#define	  af_loader_load_glyph	ODA_FT(	  af_loader_load_glyph	)
#define	  af_loader_compute_darkening	ODA_FT(	  af_loader_compute_darkening	)
#define	  afm_parser_read_vals	ODA_FT(	  afm_parser_read_vals	)
#define	  afm_parser_next_key	ODA_FT(	  afm_parser_next_key	)
#define	  afm_parser_init	ODA_FT(	  afm_parser_init	)
#define	  afm_parser_parse	ODA_FT(	  afm_parser_parse	)
#define	  FT_Init_Class_	ODA_FT(	  FT_Init_Class_	)
#define	  af_warper_compute	ODA_FT(	  af_warper_compute	)
#define	  bdf_get_property	ODA_FT(	  bdf_get_property	)
#define	  bdf_load_font	ODA_FT(	  bdf_load_font	)
#define	  bdf_free_font	ODA_FT(	  bdf_free_font	)
#define	  bdf_get_font_property	ODA_FT(	  bdf_get_font_property	)
#define	  cff_lookup_glyph_by_stdcharcode	ODA_FT(	  cff_lookup_glyph_by_stdcharcode	)
#define	  cff_decoder_parse_charstrings	ODA_FT(	  cff_decoder_parse_charstrings	)
#define	  cff_decoder_init	ODA_FT(	  cff_decoder_init	)
#define	  cff_decoder_prepare	ODA_FT(	  cff_decoder_prepare	)
#define	  cff_get_glyph_data	ODA_FT(	  cff_get_glyph_data	)
#define	  cff_free_glyph_data	ODA_FT(	  cff_free_glyph_data	)
#define	  cff_compute_max_advance	ODA_FT(	  cff_compute_max_advance	)
#define	  cff_slot_load	ODA_FT(	  cff_slot_load	)
#define	  cff_get_standard_encoding	ODA_FT(	  cff_get_standard_encoding	)
#define	  cff_index_access_element	ODA_FT(	  cff_index_access_element	)
#define	  cff_index_forget_element	ODA_FT(	  cff_index_forget_element	)
#define	  cff_index_get_name	ODA_FT(	  cff_index_get_name	)
#define	  cff_index_get_string	ODA_FT(	  cff_index_get_string	)
#define	  cff_index_get_sid_string	ODA_FT(	  cff_index_get_sid_string	)
#define	  cff_fd_select_get	ODA_FT(	  cff_fd_select_get	)
#define	  cff_charset_cid_to_gindex	ODA_FT(	  cff_charset_cid_to_gindex	)
#define	  cff_blend_clear	ODA_FT(	  cff_blend_clear	)
#define	  cff_blend_doBlend	ODA_FT(	  cff_blend_doBlend	)
#define	  cff_blend_build_vector	ODA_FT(	  cff_blend_build_vector	)
#define	  cff_blend_check_vector	ODA_FT(	  cff_blend_check_vector	)
#define	  cff_get_var_blend	ODA_FT(	  cff_get_var_blend	)
#define	  cff_done_blend	ODA_FT(	  cff_done_blend	)
#define	  cff_load_private_dict	ODA_FT(	  cff_load_private_dict	)
#define	  cff_font_load	ODA_FT(	  cff_font_load	)
#define	  cff_font_done	ODA_FT(	  cff_font_done	)
#define	  cff_size_done	ODA_FT(	  cff_size_done	)
#define	  cff_size_init	ODA_FT(	  cff_size_init	)
#define	  cff_size_select	ODA_FT(	  cff_size_select	)
#define	  cff_size_request	ODA_FT(	  cff_size_request	)
#define	  cff_slot_done	ODA_FT(	  cff_slot_done	)
#define	  cff_slot_init	ODA_FT(	  cff_slot_init	)
#define	  cff_face_init	ODA_FT(	  cff_face_init	)
#define	  cff_face_done	ODA_FT(	  cff_face_done	)
#define	  cff_driver_init	ODA_FT(	  cff_driver_init	)
#define	  cff_driver_done	ODA_FT(	  cff_driver_done	)
#define	  cff_parser_init	ODA_FT(	  cff_parser_init	)
#define	  cff_parser_done	ODA_FT(	  cff_parser_done	)
#define	  cff_parse_num	ODA_FT(	  cff_parse_num	)
#define	  cff_parser_run	ODA_FT(	  cff_parser_run	)
#define	  cid_face_compute_max_advance	ODA_FT(	  cid_face_compute_max_advance	)
#define	  cid_slot_load_glyph	ODA_FT(	  cid_slot_load_glyph	)
#define	  cid_get_offset	ODA_FT(	  cid_get_offset	)
#define	  cid_face_open	ODA_FT(	  cid_face_open	)
#define	  cid_slot_done	ODA_FT(	  cid_slot_done	)
#define	  cid_slot_init	ODA_FT(	  cid_slot_init	)
#define	  cid_size_done	ODA_FT(	  cid_size_done	)
#define	  cid_size_init	ODA_FT(	  cid_size_init	)
#define	  cid_face_done	ODA_FT(	  cid_face_done	)
#define	  cid_face_init	ODA_FT(	  cid_face_init	)
#define	  cid_driver_init	ODA_FT(	  cid_driver_init	)
#define	  cid_driver_done	ODA_FT(	  cid_driver_done	)
#define	  cid_parser_new	ODA_FT(	  cid_parser_new	)
#define	  cid_parser_done	ODA_FT(	  cid_parser_done	)
#define	  open_face_from_buffer	ODA_FT(	  open_face_from_buffer	)
#define	  open_face_PS_from_sfnt_stream	ODA_FT(	  open_face_PS_from_sfnt_stream	)
//#define	  ft_raccess_rule_by_darwin_vfs	ODA_FT(	  ft_raccess_rule_by_darwin_vfs	)
#define	  ft_lzwstate_reset	ODA_FT(	  ft_lzwstate_reset	)
#define	  ft_lzwstate_init	ODA_FT(	  ft_lzwstate_init	)
#define	  ft_lzwstate_done	ODA_FT(	  ft_lzwstate_done	)
#define	  ft_lzwstate_io	ODA_FT(	  ft_lzwstate_io	)
#define	  gxv_bsln_validate	ODA_FT(	  gxv_bsln_validate	)
#define	  gxv_set_length_by_ushort_offset	ODA_FT(	  gxv_set_length_by_ushort_offset	)
#define	  gxv_set_length_by_ulong_offset	ODA_FT(	  gxv_set_length_by_ulong_offset	)
#define	  gxv_array_getlimits_byte	ODA_FT(	  gxv_array_getlimits_byte	)
#define	  gxv_array_getlimits_ushort	ODA_FT(	  gxv_array_getlimits_ushort	)
#define	  gxv_BinSrchHeader_validate	ODA_FT(	  gxv_BinSrchHeader_validate	)
#define	  gxv_LookupTable_validate	ODA_FT(	  gxv_LookupTable_validate	)
#define	  gxv_glyphid_validate	ODA_FT(	  gxv_glyphid_validate	)
#define	  gxv_ctlPoint_validate	ODA_FT(	  gxv_ctlPoint_validate	)
#define	  gxv_sfntName_validate	ODA_FT(	  gxv_sfntName_validate	)
#define	  gxv_StateTable_subtable_setup	ODA_FT(	  gxv_StateTable_subtable_setup	)
#define	  gxv_StateTable_validate	ODA_FT(	  gxv_StateTable_validate	)
#define	  gxv_XStateTable_subtable_setup	ODA_FT(	  gxv_XStateTable_subtable_setup	)
#define	  gxv_XStateTable_validate	ODA_FT(	  gxv_XStateTable_validate	)
#define	  gxv_odtect_add_range	ODA_FT(	  gxv_odtect_add_range	)
#define	  gxv_odtect_validate	ODA_FT(	  gxv_odtect_validate	)
#define	  gxv_feat_validate	ODA_FT(	  gxv_feat_validate	)
#define	  gxv_just_validate	ODA_FT(	  gxv_just_validate	)
#define	  gxv_kern_validate	ODA_FT(	  gxv_kern_validate	)
#define	  gxv_kern_validate_classic	ODA_FT(	  gxv_kern_validate_classic	)
#define	  gxv_lcar_validate	ODA_FT(	  gxv_lcar_validate	)
#define	  gxv_mort_featurearray_validate	ODA_FT(	  gxv_mort_featurearray_validate	)
#define	  gxv_mort_coverage_validate	ODA_FT(	  gxv_mort_coverage_validate	)
#define	  gxv_mort_validate	ODA_FT(	  gxv_mort_validate	)
#define	  gxv_mort_subtable_type0_validate	ODA_FT(	  gxv_mort_subtable_type0_validate	)
#define	  gxv_mort_subtable_type1_validate	ODA_FT(	  gxv_mort_subtable_type1_validate	)
#define	  gxv_mort_subtable_type2_validate	ODA_FT(	  gxv_mort_subtable_type2_validate	)
#define	  gxv_mort_subtable_type4_validate	ODA_FT(	  gxv_mort_subtable_type4_validate	)
#define	  gxv_mort_subtable_type5_subtable_setup	ODA_FT(	  gxv_mort_subtable_type5_subtable_setup	)
#define	  gxv_mort_subtable_type5_validate	ODA_FT(	  gxv_mort_subtable_type5_validate	)
#define	  gxv_morx_validate	ODA_FT(	  gxv_morx_validate	)
#define	  gxv_morx_subtable_type0_validate	ODA_FT(	  gxv_morx_subtable_type0_validate	)
#define	  gxv_morx_subtable_type1_validate	ODA_FT(	  gxv_morx_subtable_type1_validate	)
#define	  gxv_morx_subtable_type2_validate	ODA_FT(	  gxv_morx_subtable_type2_validate	)
#define	  gxv_morx_subtable_type4_validate	ODA_FT(	  gxv_morx_subtable_type4_validate	)
#define	  gxv_morx_subtable_type5_validate	ODA_FT(	  gxv_morx_subtable_type5_validate	)
#define	  gxv_opbd_validate	ODA_FT(	  gxv_opbd_validate	)
#define	  gxv_prop_validate	ODA_FT(	  gxv_prop_validate	)
#define	  gxv_trak_validate	ODA_FT(	  gxv_trak_validate	)
#define	  otv_BASE_validate	ODA_FT(	  otv_BASE_validate	)
#define	  otv_Coverage_validate	ODA_FT(	  otv_Coverage_validate	)
#define	  otv_Coverage_get_first	ODA_FT(	  otv_Coverage_get_first	)
#define	  otv_Coverage_get_last	ODA_FT(	  otv_Coverage_get_last	)
#define	  otv_Coverage_get_count	ODA_FT(	  otv_Coverage_get_count	)
#define	  otv_ClassDef_validate	ODA_FT(	  otv_ClassDef_validate	)
#define	  otv_Device_validate	ODA_FT(	  otv_Device_validate	)
#define	  otv_Lookup_validate	ODA_FT(	  otv_Lookup_validate	)
#define	  otv_LookupList_validate	ODA_FT(	  otv_LookupList_validate	)
#define	  otv_Feature_validate	ODA_FT(	  otv_Feature_validate	)
#define	  otv_FeatureList_validate	ODA_FT(	  otv_FeatureList_validate	)
#define	  otv_LangSys_validate	ODA_FT(	  otv_LangSys_validate	)
#define	  otv_Script_validate	ODA_FT(	  otv_Script_validate	)
#define	  otv_ScriptList_validate	ODA_FT(	  otv_ScriptList_validate	)
#define	  otv_x_Ox	ODA_FT(	  otv_x_Ox	)
#define	  otv_u_C_x_Ox	ODA_FT(	  otv_u_C_x_Ox	)
#define	  otv_x_ux	ODA_FT(	  otv_x_ux	)
#define	  otv_x_y_ux_sy	ODA_FT(	  otv_x_y_ux_sy	)
#define	  otv_x_ux_y_uy_z_uz_p_sp	ODA_FT(	  otv_x_ux_y_uy_z_uz_p_sp	)
#define	  otv_u_O_O_x_Onx	ODA_FT(	  otv_u_O_O_x_Onx	)
#define	  otv_u_x_y_Ox_sy	ODA_FT(	  otv_u_x_y_Ox_sy	)
#define	  otv_u_O_O_O_O_x_Onx	ODA_FT(	  otv_u_O_O_O_O_x_Onx	)
#define	  otv_u_x_Ox_y_Oy_z_Oz_p_sp	ODA_FT(	  otv_u_x_Ox_y_Oy_z_Oz_p_sp	)
#define	  otv_GSUBGPOS_get_Lookup_count	ODA_FT(	  otv_GSUBGPOS_get_Lookup_count	)
#define	  otv_GSUBGPOS_have_MarkAttachmentType_flag	ODA_FT(	  otv_GSUBGPOS_have_MarkAttachmentType_flag	)
#define	  otv_GDEF_validate	ODA_FT(	  otv_GDEF_validate	)
#define	  otv_GPOS_subtable_validate	ODA_FT(	  otv_GPOS_subtable_validate	)
#define	  otv_GPOS_validate	ODA_FT(	  otv_GPOS_validate	)
#define	  otv_GSUB_validate	ODA_FT(	  otv_GSUB_validate	)
#define	  otv_JSTF_validate	ODA_FT(	  otv_JSTF_validate	)
#define	  otv_MATH_validate	ODA_FT(	  otv_MATH_validate	)
#define	  pcf_find_property	ODA_FT(	  pcf_find_property	)
#define	  pcf_load_font	ODA_FT(	  pcf_load_font	)
#define	  BitOrderInvert	ODA_FT(	  BitOrderInvert	)
#define	  TwoByteSwap	ODA_FT(	  TwoByteSwap	)
#define	  FourByteSwap	ODA_FT(	  FourByteSwap	)
#define	  pfr_glyph_init	ODA_FT(	  pfr_glyph_init	)
#define	  pfr_glyph_done	ODA_FT(	  pfr_glyph_done	)
#define	  pfr_glyph_load	ODA_FT(	  pfr_glyph_load	)
#define	  pfr_extra_items_skip	ODA_FT(	  pfr_extra_items_skip	)
#define	  pfr_extra_items_parse	ODA_FT(	  pfr_extra_items_parse	)
#define	  pfr_header_load	ODA_FT(	  pfr_header_load	)
#define	  pfr_header_check	ODA_FT(	  pfr_header_check	)
#define	  pfr_log_font_count	ODA_FT(	  pfr_log_font_count	)
#define	  pfr_log_font_load	ODA_FT(	  pfr_log_font_load	)
#define	  pfr_phy_font_done	ODA_FT(	  pfr_phy_font_done	)
#define	  pfr_phy_font_load	ODA_FT(	  pfr_phy_font_load	)
#define	  pfr_face_get_kerning	ODA_FT(	  pfr_face_get_kerning	)
#define	  Load_SBit_Png	ODA_FT(	  Load_SBit_Png	)
#define	  cf2_arrstack_init	ODA_FT(	  cf2_arrstack_init	)
#define	  cf2_arrstack_finalize	ODA_FT(	  cf2_arrstack_finalize	)
#define	  cf2_arrstack_setCount	ODA_FT(	  cf2_arrstack_setCount	)
#define	  cf2_arrstack_clear	ODA_FT(	  cf2_arrstack_clear	)
#define	  cf2_arrstack_size	ODA_FT(	  cf2_arrstack_size	)
#define	  cf2_arrstack_getBuffer	ODA_FT(	  cf2_arrstack_getBuffer	)
#define	  cf2_arrstack_getPointer	ODA_FT(	  cf2_arrstack_getPointer	)
#define	  cf2_arrstack_push	ODA_FT(	  cf2_arrstack_push	)
#define	  cf2_blues_init	ODA_FT(	  cf2_blues_init	)
#define	  cf2_blues_capture	ODA_FT(	  cf2_blues_capture	)
#define	  PS_Conv_Strtol	ODA_FT(	  PS_Conv_Strtol	)
#define	  PS_Conv_ToInt	ODA_FT(	  PS_Conv_ToInt	)
#define	  PS_Conv_ToFixed	ODA_FT(	  PS_Conv_ToFixed	)
#define	  PS_Conv_StringDecode	ODA_FT(	  PS_Conv_StringDecode	)
#define	  PS_Conv_ASCIIHexDecode	ODA_FT(	  PS_Conv_ASCIIHexDecode	)
#define	  PS_Conv_EexecDecode	ODA_FT(	  PS_Conv_EexecDecode	)
#define	  cf2_setError	ODA_FT(	  cf2_setError	)
#define	  cf2_getGlyphOutline	ODA_FT(	  cf2_getGlyphOutline	)
#define	  cf2_decoder_parse_charstrings	ODA_FT(	  cf2_decoder_parse_charstrings	)
#define	  cf2_getSubfont	ODA_FT(	  cf2_getSubfont	)
#define	  cf2_getVStore	ODA_FT(	  cf2_getVStore	)
#define	  cf2_getMaxstack	ODA_FT(	  cf2_getMaxstack	)
#define	  cf2_getNormalizedVector	ODA_FT(	  cf2_getNormalizedVector	)
#define	  cf2_getPpemY	ODA_FT(	  cf2_getPpemY	)
#define	  cf2_getStdVW	ODA_FT(	  cf2_getStdVW	)
#define	  cf2_getStdHW	ODA_FT(	  cf2_getStdHW	)
#define	  cf2_getBlueMetrics	ODA_FT(	  cf2_getBlueMetrics	)
#define	  cf2_getBlueValues	ODA_FT(	  cf2_getBlueValues	)
#define	  cf2_getOtherBlues	ODA_FT(	  cf2_getOtherBlues	)
#define	  cf2_getFamilyBlues	ODA_FT(	  cf2_getFamilyBlues	)
#define	  cf2_getFamilyOtherBlues	ODA_FT(	  cf2_getFamilyOtherBlues	)
#define	  cf2_getLanguageGroup	ODA_FT(	  cf2_getLanguageGroup	)
#define	  cf2_initGlobalRegionBuffer	ODA_FT(	  cf2_initGlobalRegionBuffer	)
#define	  cf2_getSeacComponent	ODA_FT(	  cf2_getSeacComponent	)
#define	  cf2_freeSeacComponent	ODA_FT(	  cf2_freeSeacComponent	)
#define	  cf2_getT1SeacComponent	ODA_FT(	  cf2_getT1SeacComponent	)
#define	  cf2_freeT1SeacComponent	ODA_FT(	  cf2_freeT1SeacComponent	)
#define	  cf2_initLocalRegionBuffer	ODA_FT(	  cf2_initLocalRegionBuffer	)
#define	  cf2_getDefaultWidthX	ODA_FT(	  cf2_getDefaultWidthX	)
#define	  cf2_getNominalWidthX	ODA_FT(	  cf2_getNominalWidthX	)
#define	  cf2_outline_reset	ODA_FT(	  cf2_outline_reset	)
#define	  cf2_outline_close	ODA_FT(	  cf2_outline_close	)
#define	  psh_dimension_snap_width	ODA_FT(	  psh_dimension_snap_width	)
#define	  psh_blues_snap_stem	ODA_FT(	  psh_blues_snap_stem	)
#define	  psh_globals_set_scale	ODA_FT(	  psh_globals_set_scale	)
#define	  psh_globals_funcs_init	ODA_FT(	  psh_globals_funcs_init	)
#define	  cf2_hint_isValid	ODA_FT(	  cf2_hint_isValid	)
#define	  cf2_hint_isBottom	ODA_FT(	  cf2_hint_isBottom	)
#define	  cf2_hint_lock	ODA_FT(	  cf2_hint_lock	)
#define	  cf2_hintmap_init	ODA_FT(	  cf2_hintmap_init	)
#define	  cf2_hintmap_build	ODA_FT(	  cf2_hintmap_build	)
#define	  cf2_glyphpath_init	ODA_FT(	  cf2_glyphpath_init	)
#define	  cf2_glyphpath_finalize	ODA_FT(	  cf2_glyphpath_finalize	)
#define	  cf2_glyphpath_moveTo	ODA_FT(	  cf2_glyphpath_moveTo	)
#define	  cf2_glyphpath_lineTo	ODA_FT(	  cf2_glyphpath_lineTo	)
#define	  cf2_glyphpath_curveTo	ODA_FT(	  cf2_glyphpath_curveTo	)
#define	  cf2_glyphpath_closeOpenPath	ODA_FT(	  cf2_glyphpath_closeOpenPath	)
#define	  t1_hints_funcs_init	ODA_FT(	  t1_hints_funcs_init	)
#define	  t2_hints_funcs_init	ODA_FT(	  t2_hints_funcs_init	)
#define	  cf2_hintmask_init	ODA_FT(	  cf2_hintmask_init	)
#define	  cf2_hintmask_isValid	ODA_FT(	  cf2_hintmask_isValid	)
#define	  cf2_hintmask_isNew	ODA_FT(	  cf2_hintmask_isNew	)
#define	  cf2_hintmask_setNew	ODA_FT(	  cf2_hintmask_setNew	)
#define	  cf2_hintmask_getMaskPtr	ODA_FT(	  cf2_hintmask_getMaskPtr	)
#define	  cf2_hintmask_setAll	ODA_FT(	  cf2_hintmask_setAll	)
#define	  cf2_interpT2CharString	ODA_FT(	  cf2_interpT2CharString	)
#define	  ps_table_new	ODA_FT(	  ps_table_new	)
#define	  ps_table_add	ODA_FT(	  ps_table_add	)
#define	  ps_table_done	ODA_FT(	  ps_table_done	)
#define	  ps_table_release	ODA_FT(	  ps_table_release	)
#define	  ps_parser_skip_PS_token	ODA_FT(	  ps_parser_skip_PS_token	)
#define	  ps_parser_skip_spaces	ODA_FT(	  ps_parser_skip_spaces	)
#define	  ps_parser_to_token	ODA_FT(	  ps_parser_to_token	)
#define	  ps_parser_to_token_array	ODA_FT(	  ps_parser_to_token_array	)
#define	  ps_parser_load_field	ODA_FT(	  ps_parser_load_field	)
#define	  ps_parser_load_field_table	ODA_FT(	  ps_parser_load_field_table	)
#define	  ps_parser_to_int	ODA_FT(	  ps_parser_to_int	)
#define	  ps_parser_to_bytes	ODA_FT(	  ps_parser_to_bytes	)
#define	  ps_parser_to_fixed	ODA_FT(	  ps_parser_to_fixed	)
#define	  ps_parser_to_coord_array	ODA_FT(	  ps_parser_to_coord_array	)
#define	  ps_parser_to_fixed_array	ODA_FT(	  ps_parser_to_fixed_array	)
#define	  T1_ToString	ODA_FT(	  T1_ToString	)
#define	  T1_ToBool	ODA_FT(	  T1_ToBool	)
#define	  ps_parser_init	ODA_FT(	  ps_parser_init	)
#define	  ps_parser_done	ODA_FT(	  ps_parser_done	)
#define	  t1_builder_init	ODA_FT(	  t1_builder_init	)
#define	  t1_builder_done	ODA_FT(	  t1_builder_done	)
#define	  t1_builder_check_points	ODA_FT(	  t1_builder_check_points	)
#define	  t1_builder_add_point	ODA_FT(	  t1_builder_add_point	)
#define	  t1_builder_add_point1	ODA_FT(	  t1_builder_add_point1	)
#define	  t1_builder_add_contour	ODA_FT(	  t1_builder_add_contour	)
#define	  t1_builder_start_point	ODA_FT(	  t1_builder_start_point	)
#define	  t1_builder_close_contour	ODA_FT(	  t1_builder_close_contour	)
#define	  cff_builder_init	ODA_FT(	  cff_builder_init	)
#define	  cff_builder_done	ODA_FT(	  cff_builder_done	)
#define	  cff_check_points	ODA_FT(	  cff_check_points	)
#define	  cff_builder_add_point	ODA_FT(	  cff_builder_add_point	)
#define	  cff_builder_add_point1	ODA_FT(	  cff_builder_add_point1	)
#define	  cff_builder_add_contour	ODA_FT(	  cff_builder_add_contour	)
#define	  cff_builder_start_point	ODA_FT(	  cff_builder_start_point	)
#define	  cff_builder_close_contour	ODA_FT(	  cff_builder_close_contour	)
#define	  ps_builder_init	ODA_FT(	  ps_builder_init	)
#define	  ps_builder_done	ODA_FT(	  ps_builder_done	)
#define	  ps_builder_check_points	ODA_FT(	  ps_builder_check_points	)
#define	  ps_builder_add_point	ODA_FT(	  ps_builder_add_point	)
#define	  ps_builder_add_point1	ODA_FT(	  ps_builder_add_point1	)
#define	  ps_builder_add_contour	ODA_FT(	  ps_builder_add_contour	)
#define	  ps_builder_start_point	ODA_FT(	  ps_builder_start_point	)
#define	  ps_builder_close_contour	ODA_FT(	  ps_builder_close_contour	)
#define	  ps_decoder_init	ODA_FT(	  ps_decoder_init	)
#define	  t1_make_subfont	ODA_FT(	  t1_make_subfont	)
#define	  t1_decrypt	ODA_FT(	  t1_decrypt	)
#define	  cff_random	ODA_FT(	  cff_random	)
#define	  cf2_buf_readByte	ODA_FT(	  cf2_buf_readByte	)
#define	  cf2_buf_isEnd	ODA_FT(	  cf2_buf_isEnd	)
#define	  cf2_stack_init	ODA_FT(	  cf2_stack_init	)
#define	  cf2_stack_free	ODA_FT(	  cf2_stack_free	)
#define	  cf2_stack_count	ODA_FT(	  cf2_stack_count	)
#define	  cf2_stack_pushInt	ODA_FT(	  cf2_stack_pushInt	)
#define	  cf2_stack_pushFixed	ODA_FT(	  cf2_stack_pushFixed	)
#define	  cf2_stack_popInt	ODA_FT(	  cf2_stack_popInt	)
#define	  cf2_stack_popFixed	ODA_FT(	  cf2_stack_popFixed	)
#define	  cf2_stack_getReal	ODA_FT(	  cf2_stack_getReal	)
#define	  cf2_stack_setReal	ODA_FT(	  cf2_stack_setReal	)
#define	  cf2_stack_pop	ODA_FT(	  cf2_stack_pop	)
#define	  cf2_stack_roll	ODA_FT(	  cf2_stack_roll	)
#define	  cf2_stack_clear	ODA_FT(	  cf2_stack_clear	)
#define	  tt_face_get_name	ODA_FT(	  tt_face_get_name	)
#define	  sfnt_init_face	ODA_FT(	  sfnt_init_face	)
#define	  sfnt_load_face	ODA_FT(	  sfnt_load_face	)
#define	  sfnt_done_face	ODA_FT(	  sfnt_done_face	)
#define	  T1_Done_Metrics	ODA_FT(	  T1_Done_Metrics	)
#define	  T1_Read_Metrics	ODA_FT(	  T1_Read_Metrics	)
#define	  T1_Get_Kerning	ODA_FT(	  T1_Get_Kerning	)
#define	  T1_Get_Track_Kerning	ODA_FT(	  T1_Get_Track_Kerning	)
#define	  t1_lookup_glyph_by_stdcharcode_ps	ODA_FT(	  t1_lookup_glyph_by_stdcharcode_ps	)
#define	  t1_decoder_parse_glyph	ODA_FT(	  t1_decoder_parse_glyph	)
#define	  t1_decoder_parse_charstrings	ODA_FT(	  t1_decoder_parse_charstrings	)
#define	  t1_decoder_parse_metrics	ODA_FT(	  t1_decoder_parse_metrics	)
#define	  t1_decoder_init	ODA_FT(	  t1_decoder_init	)
#define	  t1_decoder_done	ODA_FT(	  t1_decoder_done	)
#define	  T1_Compute_Max_Advance	ODA_FT(	  T1_Compute_Max_Advance	)
#define	  T1_Get_Advances	ODA_FT(	  T1_Get_Advances	)
#define	  T1_Load_Glyph	ODA_FT(	  T1_Load_Glyph	)
#define	  T1_Get_Multi_Master	ODA_FT(	  T1_Get_Multi_Master	)
#define	  T1_Get_MM_Var	ODA_FT(	  T1_Get_MM_Var	)
#define	  T1_Set_MM_Blend	ODA_FT(	  T1_Set_MM_Blend	)
#define	  T1_Get_MM_Blend	ODA_FT(	  T1_Get_MM_Blend	)
#define	  T1_Set_MM_Design	ODA_FT(	  T1_Set_MM_Design	)
#define	  T1_Reset_MM_Blend	ODA_FT(	  T1_Reset_MM_Blend	)
#define	  T1_Set_Var_Design	ODA_FT(	  T1_Set_Var_Design	)
#define	  T1_Get_Var_Design	ODA_FT(	  T1_Get_Var_Design	)
#define	  T1_Done_Blend	ODA_FT(	  T1_Done_Blend	)
#define	  T1_Open_Face	ODA_FT(	  T1_Open_Face	)
#define	  T1_Size_Done	ODA_FT(	  T1_Size_Done	)
#define	  T1_Size_Init	ODA_FT(	  T1_Size_Init	)
#define	  T1_Size_Request	ODA_FT(	  T1_Size_Request	)
#define	  T1_GlyphSlot_Done	ODA_FT(	  T1_GlyphSlot_Done	)
#define	  T1_GlyphSlot_Init	ODA_FT(	  T1_GlyphSlot_Init	)
#define	  T1_Face_Done	ODA_FT(	  T1_Face_Done	)
#define	  T1_Face_Init	ODA_FT(	  T1_Face_Init	)
#define	  T1_Driver_Init	ODA_FT(	  T1_Driver_Init	)
#define	  T1_Driver_Done	ODA_FT(	  T1_Driver_Done	)
#define	  T1_New_Parser	ODA_FT(	  T1_New_Parser	)
#define	  T1_Finalize_Parser	ODA_FT(	  T1_Finalize_Parser	)
#define	  T1_Get_Private_Dict	ODA_FT(	  T1_Get_Private_Dict	)
#define	  T42_Face_Init	ODA_FT(	  T42_Face_Init	)
#define	  T42_Face_Done	ODA_FT(	  T42_Face_Done	)
#define	  T42_Driver_Init	ODA_FT(	  T42_Driver_Init	)
#define	  T42_Driver_Done	ODA_FT(	  T42_Driver_Done	)
#define	  T42_Size_Init	ODA_FT(	  T42_Size_Init	)
#define	  T42_Size_Request	ODA_FT(	  T42_Size_Request	)
#define	  T42_Size_Select	ODA_FT(	  T42_Size_Select	)
#define	  T42_Size_Done	ODA_FT(	  T42_Size_Done	)
#define	  T42_GlyphSlot_Init	ODA_FT(	  T42_GlyphSlot_Init	)
#define	  T42_GlyphSlot_Done	ODA_FT(	  T42_GlyphSlot_Done	)
#define	  T42_GlyphSlot_Load	ODA_FT(	  T42_GlyphSlot_Load	)
#define	  t42_parser_init	ODA_FT(	  t42_parser_init	)
#define	  t42_parser_done	ODA_FT(	  t42_parser_done	)
#define	  t42_parse_dict	ODA_FT(	  t42_parse_dict	)
#define	  t42_loader_init	ODA_FT(	  t42_loader_init	)
#define	  t42_loader_done	ODA_FT(	  t42_loader_done	)
#define	  tt_face_free_bdf_props	ODA_FT(	  tt_face_free_bdf_props	)
#define	  tt_face_find_bdf_prop	ODA_FT(	  tt_face_find_bdf_prop	)
#define	  tt_face_build_cmaps	ODA_FT(	  tt_face_build_cmaps	)
#define	  TT_Get_HMetrics	ODA_FT(	  TT_Get_HMetrics	)
#define	  TT_Get_VMetrics	ODA_FT(	  TT_Get_VMetrics	)
#define	  TT_Init_Glyph_Loading	ODA_FT(	  TT_Init_Glyph_Loading	)
#define	  TT_Load_Glyph	ODA_FT(	  TT_Load_Glyph	)
#define	  tt_hadvance_adjust	ODA_FT(	  tt_hadvance_adjust	)
#define	  tt_vadvance_adjust	ODA_FT(	  tt_vadvance_adjust	)
#define	  tt_apply_mvar	ODA_FT(	  tt_apply_mvar	)
#define	  TT_Get_MM_Var	ODA_FT(	  TT_Get_MM_Var	)
#define	  TT_Set_MM_Blend	ODA_FT(	  TT_Set_MM_Blend	)
#define	  TT_Get_MM_Blend	ODA_FT(	  TT_Get_MM_Blend	)
#define	  TT_Set_Var_Design	ODA_FT(	  TT_Set_Var_Design	)
#define	  TT_Get_Var_Design	ODA_FT(	  TT_Get_Var_Design	)
#define	  TT_Set_Named_Instance	ODA_FT(	  TT_Set_Named_Instance	)
#define	  tt_face_vary_cvt	ODA_FT(	  tt_face_vary_cvt	)
#define	  TT_Vary_Apply_Glyph_Deltas	ODA_FT(	  TT_Vary_Apply_Glyph_Deltas	)
#define	  tt_get_var_blend	ODA_FT(	  tt_get_var_blend	)
#define	  tt_done_blend	ODA_FT(	  tt_done_blend	)
#define	  TT_Goto_CodeRange	ODA_FT(	  TT_Goto_CodeRange	)
#define	  TT_Set_CodeRange	ODA_FT(	  TT_Set_CodeRange	)
#define	  TT_Clear_CodeRange	ODA_FT(	  TT_Clear_CodeRange	)
#define	  TT_Done_Context	ODA_FT(	  TT_Done_Context	)
#define	  Update_Max	ODA_FT(	  Update_Max	)
#define	  TT_Load_Context	ODA_FT(	  TT_Load_Context	)
#define	  TT_Save_Context	ODA_FT(	  TT_Save_Context	)
#define	  TT_Run_Context	ODA_FT(	  TT_Run_Context	)
#define	  tt_face_load_kern	ODA_FT(	  tt_face_load_kern	)
#define	  tt_face_done_kern	ODA_FT(	  tt_face_done_kern	)
#define	  tt_face_get_kerning	ODA_FT(	  tt_face_get_kerning	)
#define	  tt_face_lookup_table	ODA_FT(	  tt_face_lookup_table	)
#define	  tt_face_goto_table	ODA_FT(	  tt_face_goto_table	)
#define	  tt_face_load_font_dir	ODA_FT(	  tt_face_load_font_dir	)
#define	  tt_face_load_any	ODA_FT(	  tt_face_load_any	)
#define	  tt_face_load_head	ODA_FT(	  tt_face_load_head	)
#define	  tt_face_load_bhed	ODA_FT(	  tt_face_load_bhed	)
#define	  tt_face_load_maxp	ODA_FT(	  tt_face_load_maxp	)
#define	  tt_face_load_name	ODA_FT(	  tt_face_load_name	)
#define	  tt_face_free_name	ODA_FT(	  tt_face_free_name	)
#define	  tt_face_load_cmap	ODA_FT(	  tt_face_load_cmap	)
#define	  tt_face_load_os2	ODA_FT(	  tt_face_load_os2	)
#define	  tt_face_load_post	ODA_FT(	  tt_face_load_post	)
#define	  tt_face_load_pclt	ODA_FT(	  tt_face_load_pclt	)
#define	  tt_face_load_gasp	ODA_FT(	  tt_face_load_gasp	)
#define	  tt_face_load_hmtx	ODA_FT(	  tt_face_load_hmtx	)
#define	  tt_face_load_hhea	ODA_FT(	  tt_face_load_hhea	)
#define	  tt_face_get_metrics	ODA_FT(	  tt_face_get_metrics	)
#define	  tt_glyphzone_done	ODA_FT(	  tt_glyphzone_done	)
#define	  tt_glyphzone_new	ODA_FT(	  tt_glyphzone_new	)
//#define	  tt_face_init	ODA_FT(	  tt_face_init	)
//#define	  tt_face_done	ODA_FT(	  tt_face_done	)
#define	  tt_size_run_fpgm	ODA_FT(	  tt_size_run_fpgm	)
#define	  tt_size_run_prep	ODA_FT(	  tt_size_run_prep	)
#define	  tt_size_ready_bytecode	ODA_FT(	  tt_size_ready_bytecode	)
#define	  tt_size_reset	ODA_FT(	  tt_size_reset	)
#define	  tt_face_load_loca	ODA_FT(	  tt_face_load_loca	)
#define	  tt_face_get_location	ODA_FT(	  tt_face_get_location	)
#define	  tt_face_done_loca	ODA_FT(	  tt_face_done_loca	)
#define	  tt_face_load_cvt	ODA_FT(	  tt_face_load_cvt	)
#define	  tt_face_load_fpgm	ODA_FT(	  tt_face_load_fpgm	)
#define	  tt_face_load_prep	ODA_FT(	  tt_face_load_prep	)
#define	  tt_face_load_hdmx	ODA_FT(	  tt_face_load_hdmx	)
#define	  tt_face_free_hdmx	ODA_FT(	  tt_face_free_hdmx	)
#define	  tt_face_get_device_metrics	ODA_FT(	  tt_face_get_device_metrics	)
#define	  tt_face_free_ps_names	ODA_FT(	  tt_face_free_ps_names	)
#define	  tt_face_get_ps_name	ODA_FT(	  tt_face_get_ps_name	)
#define	  tt_face_load_sbit	ODA_FT(	  tt_face_load_sbit	)
#define	  tt_face_free_sbit	ODA_FT(	  tt_face_free_sbit	)
#define	   tt_face_load_sbit_image ODA_FT(tt_face_load_sbit_image)
#define	  tt_face_set_sbit_strike	ODA_FT(	  tt_face_set_sbit_strike	)
#define	  tt_face_load_strike_metrics	ODA_FT(	  tt_face_load_strike_metrics	)
#define	  sph_test_tweak	ODA_FT(	  sph_test_tweak	)
#define	  sph_test_tweak_x_scaling	ODA_FT(	  sph_test_tweak_x_scaling	)
#define	  sph_set_tweaks	ODA_FT(	  sph_set_tweaks	)

//sntf

//FT_LOCAL_ARRAY_DEF
#define	af_blue_strings	ODA_FT(	af_blue_strings	)
#define	af_blue_stringsets	ODA_FT(	af_blue_stringsets	)
#define	af_writing_system_classes	ODA_FT(	af_writing_system_classes	)
#define	af_script_classes	ODA_FT(	af_script_classes	)
#define	af_style_classes	ODA_FT(	af_style_classes	)
#define	af_style_names	ODA_FT(	af_style_names	)
#define	AF_Blue_String	ODA_FT(	AF_Blue_String	)
#define	af_blue_strings	ODA_FT(	af_blue_strings	)
#define	AF_Blue_Stringset	ODA_FT(	AF_Blue_Stringset	)
#define	AF_Blue_StringRec	ODA_FT(	AF_Blue_StringRec	)

//GX_BlendRec_
//GX_Blend

//FT_DEFINE_MODULE
#define	autofit_module_class	ODA_FT(	autofit_module_class	)
#define	pshinter_module_class	ODA_FT(	pshinter_module_class	)
#define	psnames_module_class	ODA_FT(	psnames_module_class	)
#define	sfnt_module_class	ODA_FT(	sfnt_module_class	)
//FT_DEFINE_AUTOHINTER_INTERFACE
#define	af_autofitter_interface	ODA_FT(	af_autofitter_interface	)
//FT_DEFINE_OUTLINE_FUNCS

#define	bbox_interface	ODA_FT(	bbox_interface	)
#define	func_interface	ODA_FT(	func_interface	)

//FT_DEFINE_RASTER_FUNCS

#define	ft_grays_raster	ODA_FT(	ft_grays_raster	)
#define	ft_standard_raster	ODA_FT(	ft_standard_raster	)

#define adlm ODA_FT(adlm)
#define	arab	ODA_FT(	arab	)
#define	armn	ODA_FT(	armn	)
#define	avst	ODA_FT(	avst	)
#define	bamu	ODA_FT(	bamu	)
#define	beng	ODA_FT(	beng	)
#define	buhd	ODA_FT(	buhd	)
#define	cakm	ODA_FT(	cakm	)
#define	cans	ODA_FT(	cans	)
#define	cari	ODA_FT(	cari	)
#define	cher	ODA_FT(	cher	)
#define	copt	ODA_FT(	copt	)
#define	cprt	ODA_FT(	cprt	)
#define	cyrl	ODA_FT(	cyrl	)
#define	deva	ODA_FT(	deva	)
#define	dsrt	ODA_FT(	dsrt	)
#define	ethi	ODA_FT(	ethi	)
#define	geor	ODA_FT(	geor	)
#define	geok	ODA_FT(	geok	)
#define	glag	ODA_FT(	glag	)
#define	goth	ODA_FT(	goth	)
#define	grek	ODA_FT(	grek	)
#define	gujr	ODA_FT(	gujr	)
#define	guru	ODA_FT(	guru	)
#define	hebr	ODA_FT(	hebr	)
#define	kali	ODA_FT(	kali	)
#define	khmr	ODA_FT(	khmr	)
#define	khms	ODA_FT(	khms	)
#define	knda	ODA_FT(	knda	)
#define	lao	ODA_FT(	lao	)
#define	latn	ODA_FT(	latn	)
#define	latb	ODA_FT(	latb	)
#define	lisu	ODA_FT(	lisu	)
#define	mlym	ODA_FT(	mlym	)
#define	mymr	ODA_FT(	mymr	)
#define	nkoo	ODA_FT(	nkoo	)
#define	none	ODA_FT(	none	)
#define	olck	ODA_FT(	olck	)
#define	orkh	ODA_FT(	orkh	)
#define	osge	ODA_FT(	osge	)
#define	osma	ODA_FT(	osma	)
#define	saur	ODA_FT(	saur	)
#define	shaw	ODA_FT(	shaw	)
#define	sinh	ODA_FT(	sinh	)
#define	sund	ODA_FT(	sund	)
#define	taml	ODA_FT(	taml	)
#define	tavt	ODA_FT(	tavt	)
#define	telu	ODA_FT(	telu	)
#define	tfng	ODA_FT(	tfng	)
#define	thai	ODA_FT(	thai	)
#define	vaii	ODA_FT(	vaii	)
#define	limb	ODA_FT(	limb	)
#define	orya	ODA_FT(	orya	)
#define	sylo	ODA_FT(	sylo	)
#define	tibt	ODA_FT(	tibt	)
#define	hani	ODA_FT(	hani	)

#define	af_shaper_buf_create	ODA_FT(	af_shaper_buf_create	)
#define	af_shaper_get_cluster	ODA_FT(	af_shaper_get_cluster	)
#define	af_shaper_get_elem	ODA_FT(	af_shaper_get_elem	)
#define	af_shaper_buf_destroy	ODA_FT(	af_shaper_buf_destroy	)
#define	af_axis_hints_new_edge	ODA_FT(	af_axis_hints_new_edge	)
#define	af_cjk_writing_system_class	ODA_FT(	af_cjk_writing_system_class	)
#define	af_dummy_writing_system_class	ODA_FT(	af_dummy_writing_system_class	)
#define	af_latin_writing_system_class	ODA_FT(	af_latin_writing_system_class	)
#define	af_indic_writing_system_class	ODA_FT(	af_indic_writing_system_class	)
#define	af_shaper_get_coverage	ODA_FT(	af_shaper_get_coverage	)
#define	af_service_properties	ODA_FT(	af_service_properties	)
#define	af_services	ODA_FT(	af_services	)
#define	ft_bitmap_glyph_class	ODA_FT(	ft_bitmap_glyph_class	)
#define	ft_outline_glyph_class	ODA_FT(	ft_outline_glyph_class	)
#define	FT_Get_TrueType_Engine_Type	ODA_FT(	FT_Get_TrueType_Engine_Type	)
#define	FT_Outline_Done_Internal	ODA_FT(	FT_Outline_Done_Internal	)
#define	FT_Read_Stream_At	ODA_FT(	FT_Read_Stream_At	)
//#define	FT_MulFix	ODA_FT(	FT_MulFix	)
#define	FT_Outline_New_Internal	ODA_FT(	FT_Outline_New_Internal	)
#define	autofit_module_class	ODA_FT(	autofit_module_class	)
//#define	tt_driver_class	ODA_FT(	tt_driver_class	)
#define	t1_driver_class	ODA_FT(	t1_driver_class	)
#define	cff_driver_class	ODA_FT(	cff_driver_class	)
#define	t1cid_driver_class	ODA_FT(	t1cid_driver_class	)
//#define	pfr_driver_class	ODA_FT(	pfr_driver_class	)
//#define	t42_driver_class	ODA_FT(	t42_driver_class	)
//#define	winfnt_driver_class	ODA_FT(	winfnt_driver_class	)
#define	pcf_driver_class	ODA_FT(	pcf_driver_class	)
#define	psaux_module_class	ODA_FT(	psaux_module_class	)
#define	psnames_module_class	ODA_FT(	psnames_module_class	)
#define	pshinter_module_class	ODA_FT(	pshinter_module_class	)
#define	ft_raster1_renderer_class	ODA_FT(	ft_raster1_renderer_class	)
#define	sfnt_module_class 	ODA_FT(	sfnt_module_class 	)
#define	ft_smooth_renderer_class 	ODA_FT(	ft_smooth_renderer_class 	)
#define	ft_smooth_lcd_renderer_class 	ODA_FT(	ft_smooth_lcd_renderer_class 	)
#define	ft_smooth_lcdv_renderer_class 	ODA_FT(	ft_smooth_lcdv_renderer_class 	)
#define	bdf_driver_class 	ODA_FT(	bdf_driver_class 	)
#define	ft_raccess_guess_table	ODA_FT(	ft_raccess_guess_table	)
#define	_bdf_atos	ODA_FT(	_bdf_atos	)
#define	cff_cmap_encoding_class_rec	ODA_FT(	cff_cmap_encoding_class_rec	)
#define	cff_cmap_unicode_class_rec	ODA_FT(	cff_cmap_unicode_class_rec	)
#define	cff_service_glyph_dict	ODA_FT(	cff_service_glyph_dict	)
#define	cff_service_ps_info	ODA_FT(	cff_service_ps_info	)
#define	cff_service_ps_name	ODA_FT(	cff_service_ps_name	)
#define	cff_service_get_cmap_info	ODA_FT(	cff_service_get_cmap_info	)
#define	cff_service_cid_info	ODA_FT(	cff_service_cid_info	)
#define	cff_service_properties	ODA_FT(	cff_service_properties	)
#define	cff_service_multi_masters	ODA_FT(	cff_service_multi_masters	)
#define	cff_service_metrics_varia	ODA_FT(	cff_service_metrics_varia	)
#define	cff_service_cff_load	ODA_FT(	cff_service_cff_load	)
#define	cff_services	ODA_FT(	cff_services	)
#define	gxv_morx_subtable_type1_L	ODA_FT(	gxv_morx_subtable_type1_L	)
#define	cff_driver_class	ODA_FT(	cff_driver_class	)
#define	cid_size_request	ODA_FT(	cid_size_request	)
#define	cid_service_properties	ODA_FT(	cid_service_properties	)
#define	inflate_trees_bits	ODA_FT(	inflate_trees_bits	)
#define	inflate_trees_dynamic	ODA_FT(	inflate_trees_dynamic	)
#define	fixed_bl	ODA_FT(	fixed_bl	)
#define	fixed_bd	ODA_FT(	fixed_bd	)
#define	fixed_tl	ODA_FT(	fixed_tl	)
#define	fixed_td	ODA_FT(	fixed_td	)
#define	inflate_trees_fixed	ODA_FT(	inflate_trees_fixed	)
#define	inflate_mask	ODA_FT(	inflate_mask	)
#define	inflate_flush	ODA_FT(	inflate_flush	)
#define	inflate_codes_new	ODA_FT(	inflate_codes_new	)
#define	inflate_codes	ODA_FT(	inflate_codes	)
#define	inflate_codes_free	ODA_FT(	inflate_codes_free	)
#define	border	ODA_FT(	border	)
#define	inflate_blocks_reset	ODA_FT(	inflate_blocks_reset	)
#define	inflate_blocks_new	ODA_FT(	inflate_blocks_new	)
#define	inflate_blocks	ODA_FT(	inflate_blocks	)
#define	inflate_blocks_free	ODA_FT(	inflate_blocks_free	)
#define	inflateReset	ODA_FT(	inflateReset	)
#define	inflateEnd	ODA_FT(	inflateEnd	)
#define	inflateInit2_	ODA_FT(	inflateInit2_	)
#define	pcf_service_properties	ODA_FT(	pcf_service_properties	)
#define	pcf_driver_class	ODA_FT(	pcf_driver_class	)
#define	pfr_cmap_class_rec	ODA_FT(	pfr_cmap_class_rec	)
#define	pfr_slot_load_bitmap	ODA_FT(	pfr_slot_load_bitmap	)
#define	afm_parser_funcs	ODA_FT(	afm_parser_funcs	)
#define	afm_parser_done	ODA_FT(	afm_parser_done	)
#define	t1_cmap_classes	ODA_FT(	t1_cmap_classes	)
#define	cff_decoder_funcs	ODA_FT(	cff_decoder_funcs	)
#define	psaux_module_class	ODA_FT(	psaux_module_class	)
#define	ps_table_funcs	ODA_FT(	ps_table_funcs	)
#define	ps_parser_funcs	ODA_FT(	ps_parser_funcs	)
#define	t1_builder_funcs	ODA_FT(	t1_builder_funcs	)
#define	cff_builder_funcs	ODA_FT(	cff_builder_funcs	)
#define	ps_builder_funcs	ODA_FT(	ps_builder_funcs	)
#define	t1_cmap_standard_class_rec	ODA_FT(	t1_cmap_standard_class_rec	)
#define	t1_cmap_expert_class_rec	ODA_FT(	t1_cmap_expert_class_rec	)
#define	t1_cmap_custom_class_rec	ODA_FT(	t1_cmap_custom_class_rec	)
#define	t1_cmap_unicode_class_rec	ODA_FT(	t1_cmap_unicode_class_rec	)
#define	t1_decoder_funcs	ODA_FT(	t1_decoder_funcs	)
#define	psh_glyph_done	ODA_FT(	psh_glyph_done	)
#define	pshinter_get_globals_func	ODA_FT(	pshinter_get_globals_func	)
#define	pshinter_interface	ODA_FT(	pshinter_interface	)
#define	t2_hints_open	ODA_FT(	t2_hints_open	)
#define	t2_hints_stems	ODA_FT(	t2_hints_stems	)
#define	ps_hints_done	ODA_FT(	ps_hints_done	)
#define	ps_hints_init	ODA_FT(	ps_hints_init	)
#define	ps_hints_apply	ODA_FT(	ps_hints_apply	)
#define	ps_get_standard_strings	ODA_FT(	ps_get_standard_strings	)
#define	pscmaps_interface	ODA_FT(	pscmaps_interface	)
#define	pscmaps_services	ODA_FT(	pscmaps_services	)
#define	ft_standard_glyph_names	ODA_FT(	ft_standard_glyph_names	)
#define	ft_mac_names	ODA_FT(	ft_mac_names	)
#define	ft_sid_names	ODA_FT(	ft_sid_names	)
#define	t1_standard_encoding	ODA_FT(	t1_standard_encoding	)
#define	t1_expert_encoding	ODA_FT(	t1_expert_encoding	)
#define	ft_adobe_glyph_list	ODA_FT(	ft_adobe_glyph_list	)
#define	ft_raster1_renderer_class	ODA_FT(	ft_raster1_renderer_class	)
#define	tt_get_cmap_info	ODA_FT(	tt_get_cmap_info	)
#define	tt_cmap_unicode_class_rec	ODA_FT(	tt_cmap_unicode_class_rec	)
#define	tt_cmap0_class_rec	ODA_FT(	tt_cmap0_class_rec	)
#define	tt_cmap2_class_rec	ODA_FT(	tt_cmap2_class_rec	)
#define	tt_cmap4_class_rec	ODA_FT(	tt_cmap4_class_rec	)
#define	tt_cmap6_class_rec	ODA_FT(	tt_cmap6_class_rec	)
#define	tt_cmap8_class_rec	ODA_FT(	tt_cmap8_class_rec	)
#define	tt_cmap10_class_rec	ODA_FT(	tt_cmap10_class_rec	)
#define	tt_cmap12_class_rec	ODA_FT(	tt_cmap12_class_rec	)
#define	tt_cmap13_class_rec	ODA_FT(	tt_cmap13_class_rec	)
#define	tt_cmap14_class_rec	ODA_FT(	tt_cmap14_class_rec	)
#define	table_dir_entry_fields	ODA_FT(	table_dir_entry_fields	)
#define	offset_table_fields	ODA_FT(	offset_table_fields	)
#define	header_fields	ODA_FT(	header_fields	)
#define	maxp_fields	ODA_FT(	maxp_fields	)
#define	maxp_fields_extra	ODA_FT(	maxp_fields_extra	)
#define	name_table_fields	ODA_FT(	name_table_fields	)
#define	langTag_record_fields	ODA_FT(	langTag_record_fields	)
#define	name_record_fields	ODA_FT(	name_record_fields	)
#define	os2_fields	ODA_FT(	os2_fields	)
#define	os2_fields_extra1	ODA_FT(	os2_fields_extra1	)
#define	os2_fields_extra2	ODA_FT(	os2_fields_extra2	)
#define	os2_fields_extra5	ODA_FT(	os2_fields_extra5	)
#define	post_fields	ODA_FT(	post_fields	)
#define	pclt_fields	ODA_FT(	pclt_fields	)
#define	metrics_header_fields	ODA_FT(	metrics_header_fields	)
#define	tt_service_truetype_engin	ODA_FT(	tt_service_truetype_engin	)
#define	tt_default_graphics_state	ODA_FT(	tt_default_graphics_state	)
#define	gvar_fields	ODA_FT(	gvar_fields	)
#define	fvar_fields	ODA_FT(	fvar_fields	)
#define	fvaraxis_fields	ODA_FT(	fvaraxis_fields	)
#define	TT_MulFix14_long_long	ODA_FT(	TT_MulFix14_long_long	)
#define	TT_DotFix14_long_long	ODA_FT(	TT_DotFix14_long_long	)
#define	Current_Ppem_Stretched	ODA_FT(	Current_Ppem_Stretched	)
#define	Read_CVT_Stretched	ODA_FT(	Read_CVT_Stretched	)
#define	Write_CVT_Stretched	ODA_FT(	Write_CVT_Stretched	)
#define	Move_CVT_Stretched	ODA_FT(	Move_CVT_Stretched	)
#define	Ins_ADD	ODA_FT(	Ins_ADD	)
#define	SkipCode	ODA_FT(	SkipCode	)
#define	Compute_Point_Displacemen	ODA_FT(	Compute_Point_Displacemen	)
#define	Move_Zp2_Point	ODA_FT(	Move_Zp2_Point	)
#define	TT_New_Context	ODA_FT(	TT_New_Context	)
#define	TT_RunIns	ODA_FT(	TT_RunIns	)
#define	t1_service_properties	ODA_FT(	t1_service_properties	)
#define	t1_driver_class	ODA_FT(	t1_driver_class	)
#define	ft_smooth_renderer_class	ODA_FT(	ft_smooth_renderer_class	)
#define	ft_smooth_lcd_renderer_class	ODA_FT(	ft_smooth_lcd_renderer_class	)
#define	ft_smooth_lcdv_renderer_class	ODA_FT(	ft_smooth_lcdv_renderer_class	)


#endif //FREETYPE_PREFIX_INTERNAL
//
#endif // FREETYPE_PREFIX

  /*************************************************************************/
  /*                                                                       */
  /*               PLATFORM-SPECIFIC CONFIGURATION MACROS                  */
  /*                                                                       */
  /* These macros can be toggled to suit a specific system.  The current   */
  /* ones are defaults used to compile FreeType in an ANSI C environment   */
  /* (16bit compilers are also supported).  Copy this file to your own     */
  /* `builds/<system>' directory, and edit it to port the engine.          */
  /*                                                                       */
  /*************************************************************************/


  /* There are systems (like the Texas Instruments 'C54x) where a `char' */
  /* has 16 bits.  ANSI C says that sizeof(char) is always 1.  Since an  */
  /* `int' has 16 bits also for this system, sizeof(int) gives 1 which   */
  /* is probably unexpected.                                             */
  /*                                                                     */
  /* `CHAR_BIT' (defined in limits.h) gives the number of bits in a      */
  /* `char' type.                                                        */

#ifndef FT_CHAR_BIT
#define FT_CHAR_BIT  CHAR_BIT
#endif

  /* The size of an `int' type.  */
#if                                 FT_UINT_MAX == 0xFFFFUL
#define FT_SIZEOF_INT  ( 16 / FT_CHAR_BIT )
#elif                               FT_UINT_MAX == 0xFFFFFFFFUL
#define FT_SIZEOF_INT  ( 32 / FT_CHAR_BIT )
#elif FT_UINT_MAX > 0xFFFFFFFFUL && FT_UINT_MAX == 0xFFFFFFFFFFFFFFFFUL
#define FT_SIZEOF_INT  ( 64 / FT_CHAR_BIT )
#else
#error "Unsupported size of `int' type!"
#endif

  /* The size of a `long' type.  A five-byte `long' (as used e.g. on the */
  /* DM642) is recognized but avoided.                                   */
#if                                  FT_ULONG_MAX == 0xFFFFFFFFUL
#define FT_SIZEOF_LONG  ( 32 / FT_CHAR_BIT )
#elif FT_ULONG_MAX > 0xFFFFFFFFUL && FT_ULONG_MAX == 0xFFFFFFFFFFUL
#define FT_SIZEOF_LONG  ( 32 / FT_CHAR_BIT )
#elif FT_ULONG_MAX > 0xFFFFFFFFUL && FT_ULONG_MAX == 0xFFFFFFFFFFFFFFFFUL
#define FT_SIZEOF_LONG  ( 64 / FT_CHAR_BIT )
#else
#error "Unsupported size of `long' type!"
#endif


  /* FT_UNUSED is a macro used to indicate that a given parameter is not  */
  /* used -- this is only used to get rid of unpleasant compiler warnings */
#ifndef FT_UNUSED
#define FT_UNUSED( arg )  ( (arg) = (arg) )
#endif


  /*************************************************************************/
  /*                                                                       */
  /*                     AUTOMATIC CONFIGURATION MACROS                    */
  /*                                                                       */
  /* These macros are computed from the ones defined above.  Don't touch   */
  /* their definition, unless you know precisely what you are doing.  No   */
  /* porter should need to mess with them.                                 */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* Mac support                                                           */
  /*                                                                       */
  /*   This is the only necessary change, so it is defined here instead    */
  /*   providing a new configuration file.                                 */
  /*                                                                       */
#if defined( __APPLE__ ) || ( defined( __MWERKS__ ) && defined( macintosh ) )
  /* no Carbon frameworks for 64bit 10.4.x */
  /* AvailabilityMacros.h is available since Mac OS X 10.2,        */
  /* so guess the system version by maximum errno before inclusion */
#include <errno.h>
#ifdef ECANCELED /* defined since 10.2 */
#include "AvailabilityMacros.h"
#endif
#if defined( __LP64__ ) && \
    ( MAC_OS_X_VERSION_MIN_REQUIRED <= MAC_OS_X_VERSION_10_4 )
#undef FT_MACINTOSH
#endif

#elif defined( __SC__ ) || defined( __MRC__ )
  /* Classic MacOS compilers */
#include "ConditionalMacros.h"
#if TARGET_OS_MAC
#define FT_MACINTOSH 1
#endif

#endif


  /* Fix compiler warning with sgi compiler */
#if defined( __sgi ) && !defined( __GNUC__ )
#if defined( _COMPILER_VERSION ) && ( _COMPILER_VERSION >= 730 )
#pragma set woff 3505
#endif
#endif


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*    basic_types                                                        */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* <Type>                                                                */
  /*    FT_Int16                                                           */
  /*                                                                       */
  /* <Description>                                                         */
  /*    A typedef for a 16bit signed integer type.                         */
  /*                                                                       */
  typedef signed short  FT_Int16;


  /*************************************************************************/
  /*                                                                       */
  /* <Type>                                                                */
  /*    FT_UInt16                                                          */
  /*                                                                       */
  /* <Description>                                                         */
  /*    A typedef for a 16bit unsigned integer type.                       */
  /*                                                                       */
  typedef unsigned short  FT_UInt16;

  /* */


  /* this #if 0 ... #endif clause is for documentation purposes */
#if 0

  /*************************************************************************/
  /*                                                                       */
  /* <Type>                                                                */
  /*    FT_Int32                                                           */
  /*                                                                       */
  /* <Description>                                                         */
  /*    A typedef for a 32bit signed integer type.  The size depends on    */
  /*    the configuration.                                                 */
  /*                                                                       */
  typedef signed XXX  FT_Int32;


  /*************************************************************************/
  /*                                                                       */
  /* <Type>                                                                */
  /*    FT_UInt32                                                          */
  /*                                                                       */
  /*    A typedef for a 32bit unsigned integer type.  The size depends on  */
  /*    the configuration.                                                 */
  /*                                                                       */
  typedef unsigned XXX  FT_UInt32;


  /*************************************************************************/
  /*                                                                       */
  /* <Type>                                                                */
  /*    FT_Int64                                                           */
  /*                                                                       */
  /*    A typedef for a 64bit signed integer type.  The size depends on    */
  /*    the configuration.  Only defined if there is real 64bit support;   */
  /*    otherwise, it gets emulated with a structure (if necessary).       */
  /*                                                                       */
  typedef signed XXX  FT_Int64;


  /*************************************************************************/
  /*                                                                       */
  /* <Type>                                                                */
  /*    FT_UInt64                                                          */
  /*                                                                       */
  /*    A typedef for a 64bit unsigned integer type.  The size depends on  */
  /*    the configuration.  Only defined if there is real 64bit support;   */
  /*    otherwise, it gets emulated with a structure (if necessary).       */
  /*                                                                       */
  typedef unsigned XXX  FT_UInt64;

  /* */

#endif

#if FT_SIZEOF_INT == ( 32 / FT_CHAR_BIT )

  typedef signed int      FT_Int32;
  typedef unsigned int    FT_UInt32;

#elif FT_SIZEOF_LONG == ( 32 / FT_CHAR_BIT )

  typedef signed long     FT_Int32;
  typedef unsigned long   FT_UInt32;

#else
#error "no 32bit type found -- please check your configuration files"
#endif


  /* look up an integer type that is at least 32 bits */
#if FT_SIZEOF_INT >= ( 32 / FT_CHAR_BIT )

  typedef int            FT_Fast;
  typedef unsigned int   FT_UFast;

#elif FT_SIZEOF_LONG >= ( 32 / FT_CHAR_BIT )

  typedef long           FT_Fast;
  typedef unsigned long  FT_UFast;

#endif


  /* determine whether we have a 64-bit int type for platforms without */
  /* Autoconf                                                          */
#if FT_SIZEOF_LONG == ( 64 / FT_CHAR_BIT )

  /* FT_LONG64 must be defined if a 64-bit type is available */
#define FT_LONG64
#define FT_INT64   long
#define FT_UINT64  unsigned long

  /*************************************************************************/
  /*                                                                       */
  /* A 64-bit data type may create compilation problems if you compile     */
  /* in strict ANSI mode.  To avoid them, we disable other 64-bit data     */
  /* types if __STDC__ is defined.  You can however ignore this rule       */
  /* by defining the FT_CONFIG_OPTION_FORCE_INT64 configuration macro.     */
  /*                                                                       */
#elif !defined( __STDC__ ) || defined( FT_CONFIG_OPTION_FORCE_INT64 )

#if defined( __STDC_VERSION__ ) && __STDC_VERSION__ >= 199901L

#define FT_LONG64
#define FT_INT64   long long int
#define FT_UINT64  unsigned long long int

#elif defined( _MSC_VER ) && _MSC_VER >= 900  /* Visual C++ (and Intel C++) */

  /* this compiler provides the __int64 type */
#define FT_LONG64
#define FT_INT64   __int64
#define FT_UINT64  unsigned __int64

#elif defined( __BORLANDC__ )  /* Borland C++ */

  /* XXXX: We should probably check the value of __BORLANDC__ in order */
  /*       to test the compiler version.                               */

  /* this compiler provides the __int64 type */
#define FT_LONG64
#define FT_INT64   __int64
#define FT_UINT64  unsigned __int64

#elif defined( __WATCOMC__ )   /* Watcom C++ */

  /* Watcom doesn't provide 64-bit data types */

#elif defined( __MWERKS__ )    /* Metrowerks CodeWarrior */

#define FT_LONG64
#define FT_INT64   long long int
#define FT_UINT64  unsigned long long int

#elif defined( __GNUC__ )

  /* GCC provides the `long long' type */
#define FT_LONG64
#define FT_INT64   long long int
#define FT_UINT64  unsigned long long int

#endif /* __STDC_VERSION__ >= 199901L */

#endif /* FT_SIZEOF_LONG == (64 / FT_CHAR_BIT) */

#ifdef FT_LONG64
  typedef FT_INT64   FT_Int64;
  typedef FT_UINT64  FT_UInt64;
#endif


#ifdef _WIN64
  /* only 64bit Windows uses the LLP64 data model, i.e., */
  /* 32bit integers, 64bit pointers                      */
#define FT_UINT_TO_POINTER( x ) (void*)(unsigned __int64)(x)
#else
#define FT_UINT_TO_POINTER( x ) (void*)(unsigned long)(x)
#endif


  /*************************************************************************/
  /*                                                                       */
  /* miscellaneous                                                         */
  /*                                                                       */
  /*************************************************************************/


#define FT_BEGIN_STMNT  do {
#define FT_END_STMNT    } while ( 0 )
#define FT_DUMMY_STMNT  FT_BEGIN_STMNT FT_END_STMNT


  /* typeof condition taken from gnulib's `intprops.h' header file */
#if ( ( defined( __GNUC__ ) && __GNUC__ >= 2 )                       || \
      ( defined( __IBMC__ ) && __IBMC__ >= 1210 &&                      \
        defined( __IBM__TYPEOF__ ) )                                 || \
      ( defined( __SUNPRO_C ) && __SUNPRO_C >= 0x5110 && !__STDC__ ) )
#define FT_TYPEOF( type )  ( __typeof__ ( type ) )
#else
#define FT_TYPEOF( type )  /* empty */
#endif


  /* Use FT_LOCAL and FT_LOCAL_DEF to declare and define, respectively, */
  /* a function that gets used only within the scope of a module.       */
  /* Normally, both the header and source code files for such a         */
  /* function are within a single module directory.                     */
  /*                                                                    */
  /* Intra-module arrays should be tagged with FT_LOCAL_ARRAY and       */
  /* FT_LOCAL_ARRAY_DEF.                                                */
  /*                                                                    */
#ifdef FT_MAKE_OPTION_SINGLE_OBJECT

#define FT_LOCAL( x )      static  x
#define FT_LOCAL_DEF( x )  static  x

#else

#ifdef __cplusplus
#define FT_LOCAL( x )      extern "C"  x
#define FT_LOCAL_DEF( x )  extern "C"  x
#else
#define FT_LOCAL( x )      extern  x
#define FT_LOCAL_DEF( x )  x
#endif

#endif /* FT_MAKE_OPTION_SINGLE_OBJECT */

#define FT_LOCAL_ARRAY( x )      extern const  x
#define FT_LOCAL_ARRAY_DEF( x )  const  x


  /* Use FT_BASE and FT_BASE_DEF to declare and define, respectively, */
  /* functions that are used in more than a single module.  In the    */
  /* current setup this implies that the declaration is in a header   */
  /* file in the `include/freetype/internal' directory, and the       */
  /* function body is in a file in `src/base'.                        */
  /*                                                                  */
#ifndef FT_BASE

#ifdef __cplusplus
#define FT_BASE( x )  extern "C"  x
#else
#define FT_BASE( x )  extern  x
#endif

#endif /* !FT_BASE */


#ifndef FT_BASE_DEF

#ifdef __cplusplus
#define FT_BASE_DEF( x )  x
#else
#define FT_BASE_DEF( x )  x
#endif

#endif /* !FT_BASE_DEF */


  /*   When compiling FreeType as a DLL, some systems/compilers need a     */
  /*   special attribute in front OR after the return type of function     */
  /*   declarations.                                                       */
  /*                                                                       */
  /*   Two macros are used within the FreeType source code to define       */
  /*   exported library functions: FT_EXPORT and FT_EXPORT_DEF.            */
  /*                                                                       */
  /*     FT_EXPORT( return_type )                                          */
  /*                                                                       */
  /*       is used in a function declaration, as in                        */
  /*                                                                       */
  /*         FT_EXPORT( FT_Error )                                         */
  /*         FT_Init_FreeType( FT_Library*  alibrary );                    */
  /*                                                                       */
  /*                                                                       */
  /*     FT_EXPORT_DEF( return_type )                                      */
  /*                                                                       */
  /*       is used in a function definition, as in                         */
  /*                                                                       */
  /*         FT_EXPORT_DEF( FT_Error )                                     */
  /*         FT_Init_FreeType( FT_Library*  alibrary )                     */
  /*         {                                                             */
  /*           ... some code ...                                           */
  /*           return FT_Err_Ok;                                           */
  /*         }                                                             */
  /*                                                                       */
  /*   You can provide your own implementation of FT_EXPORT and            */
  /*   FT_EXPORT_DEF here if you want.                                     */
  /*                                                                       */
  /*   To export a variable, use FT_EXPORT_VAR.                            */
  /*                                                                       */
#ifndef FT_EXPORT

#ifdef __cplusplus
#define FT_EXPORT( x )  extern "C"  x
#else
#define FT_EXPORT( x )  extern  x
#endif

#ifdef _MSC_VER
#undef FT_EXPORT
#ifdef _DLL
#define FT_EXPORT( x )  __declspec( dllexport )  x
#else
#define FT_EXPORT( x )  x //__declspec( dllimport )  x
#endif
#endif

#endif /* !FT_EXPORT */


#ifndef FT_EXPORT_DEF

#ifdef __cplusplus
#define FT_EXPORT_DEF( x )  extern "C"  x
#else
#define FT_EXPORT_DEF( x )  extern  x
#endif

#endif /* !FT_EXPORT_DEF */


#ifndef FT_EXPORT_VAR

#ifdef __cplusplus
#define FT_EXPORT_VAR( x )  extern "C"  x
#else
#define FT_EXPORT_VAR( x )  extern  x
#endif

#endif /* !FT_EXPORT_VAR */


  /* The following macros are needed to compile the library with a   */
  /* C++ compiler and with 16bit compilers.                          */
  /*                                                                 */

  /* This is special.  Within C++, you must specify `extern "C"' for */
  /* functions which are used via function pointers, and you also    */
  /* must do that for structures which contain function pointers to  */
  /* assure C linkage -- it's not possible to have (local) anonymous */
  /* functions which are accessed by (global) function pointers.     */
  /*                                                                 */
  /*                                                                 */
  /* FT_CALLBACK_DEF is used to _define_ a callback function,        */
  /* located in the same source code file as the structure that uses */
  /* it.                                                             */
  /*                                                                 */
  /* FT_BASE_CALLBACK and FT_BASE_CALLBACK_DEF are used to declare   */
  /* and define a callback function, respectively, in a similar way  */
  /* as FT_BASE and FT_BASE_DEF work.                                */
  /*                                                                 */
  /* FT_CALLBACK_TABLE is used to _declare_ a constant variable that */
  /* contains pointers to callback functions.                        */
  /*                                                                 */
  /* FT_CALLBACK_TABLE_DEF is used to _define_ a constant variable   */
  /* that contains pointers to callback functions.                   */
  /*                                                                 */
  /*                                                                 */
  /* Some 16bit compilers have to redefine these macros to insert    */
  /* the infamous `_cdecl' or `__fastcall' declarations.             */
  /*                                                                 */
#ifndef FT_CALLBACK_DEF
#ifdef __cplusplus
#define FT_CALLBACK_DEF( x )  extern "C"  x
#else
#define FT_CALLBACK_DEF( x )  static  x
#endif
#endif /* FT_CALLBACK_DEF */

#ifndef FT_BASE_CALLBACK
#ifdef __cplusplus
#define FT_BASE_CALLBACK( x )      extern "C"  x
#define FT_BASE_CALLBACK_DEF( x )  extern "C"  x
#else
#define FT_BASE_CALLBACK( x )      extern  x
#define FT_BASE_CALLBACK_DEF( x )  x
#endif
#endif /* FT_BASE_CALLBACK */

#ifndef FT_CALLBACK_TABLE
#ifdef __cplusplus
#define FT_CALLBACK_TABLE      extern "C"
#define FT_CALLBACK_TABLE_DEF  extern "C"
#else
#define FT_CALLBACK_TABLE      extern
#define FT_CALLBACK_TABLE_DEF  /* nothing */
#endif
#endif /* FT_CALLBACK_TABLE */


FT_END_HEADER


#endif /* FTCONFIG_H_ */


/* END */
